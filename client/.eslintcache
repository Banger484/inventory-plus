[{"C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\index.js":"1","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\reportWebVitals.js":"2","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\App.js":"3","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\utils\\auth.js":"4","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\pages\\Home.js":"5","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Users\\Login.js":"6","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Users\\AcceptInvite.js":"7","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Users\\Signup.js":"8","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Users\\UserDashboard.js":"9","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\utils\\mutations.js":"10","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Users\\Roster.js":"11","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Orders\\OrderHistory.js":"12","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Orders\\OrderDashboard.js":"13","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\utils\\queries.js":"14","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Orders\\OrderGuide.js":"15","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Reporting\\ReportingDashboard.js":"16","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Layout\\Dashboard.js":"17","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Layout\\Header.js":"18","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Users\\AddUser.js":"19","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Products\\ProductDashboard.js":"20","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Products\\ProductGuide.js":"21","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Products\\AddProduct.js":"22","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Orders\\OrderFulfillment.js":"23","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Orders\\OrderPurchase.js":"24","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Orders\\OrderReceived.js":"25","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Orders\\OrderSell.js":"26","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Reporting\\ProductReport.js":"27","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Layout\\Navbar.js":"28","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Products\\ProductList.js":"29","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Orders\\OrderList.js":"30","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\utils\\orderDate.js":"31","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Orders\\OrderModal.js":"32","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\utils\\remodeledData.js":"33","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Reporting\\ProductDetails.js":"34"},{"size":500,"mtime":1654091051753,"results":"35","hashOfConfig":"36"},{"size":389,"mtime":1654091051760,"results":"37","hashOfConfig":"36"},{"size":1922,"mtime":1654218789786,"results":"38","hashOfConfig":"36"},{"size":1044,"mtime":1654218789648,"results":"39","hashOfConfig":"36"},{"size":5337,"mtime":1654219228821,"results":"40","hashOfConfig":"36"},{"size":2506,"mtime":1654187147611,"results":"41","hashOfConfig":"36"},{"size":1560,"mtime":1654218789639,"results":"42","hashOfConfig":"36"},{"size":3397,"mtime":1654091051748,"results":"43","hashOfConfig":"36"},{"size":1420,"mtime":1654091051749,"results":"44","hashOfConfig":"36"},{"size":5723,"mtime":1654183321613,"results":"45","hashOfConfig":"36"},{"size":1007,"mtime":1654118272325,"results":"46","hashOfConfig":"36"},{"size":125,"mtime":1654091051721,"results":"47","hashOfConfig":"36"},{"size":2662,"mtime":1654183308506,"results":"48","hashOfConfig":"36"},{"size":4586,"mtime":1654218789729,"results":"49","hashOfConfig":"36"},{"size":989,"mtime":1654183321571,"results":"50","hashOfConfig":"36"},{"size":1455,"mtime":1654218783127,"results":"51","hashOfConfig":"36"},{"size":2504,"mtime":1654091051705,"results":"52","hashOfConfig":"36"},{"size":569,"mtime":1654102165327,"results":"53","hashOfConfig":"36"},{"size":1120,"mtime":1654218789643,"results":"54","hashOfConfig":"36"},{"size":1024,"mtime":1654091051730,"results":"55","hashOfConfig":"36"},{"size":288,"mtime":1654183321599,"results":"56","hashOfConfig":"36"},{"size":2904,"mtime":1654183321595,"results":"57","hashOfConfig":"36"},{"size":2185,"mtime":1654218789773,"results":"58","hashOfConfig":"36"},{"size":5162,"mtime":1654218789628,"results":"59","hashOfConfig":"36"},{"size":2577,"mtime":1654218789758,"results":"60","hashOfConfig":"36"},{"size":4642,"mtime":1654218789632,"results":"61","hashOfConfig":"36"},{"size":1312,"mtime":1654218783123,"results":"62","hashOfConfig":"36"},{"size":902,"mtime":1654218789623,"results":"63","hashOfConfig":"36"},{"size":2816,"mtime":1654183321606,"results":"64","hashOfConfig":"36"},{"size":2126,"mtime":1654102165336,"results":"65","hashOfConfig":"36"},{"size":305,"mtime":1654118294584,"results":"66","hashOfConfig":"36"},{"size":748,"mtime":1654183321576,"results":"67","hashOfConfig":"36"},{"size":10134,"mtime":1654218789652,"results":"68","hashOfConfig":"36"},{"size":1008,"mtime":1654218783118,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ijc7nn",{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\index.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\reportWebVitals.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\App.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\utils\\auth.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\pages\\Home.js",["149","150","151"],"C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Users\\Login.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Users\\AcceptInvite.js",["152","153","154"],"C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Users\\Signup.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Users\\UserDashboard.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\utils\\mutations.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Users\\Roster.js",["155","156","157","158","159"],"C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Orders\\OrderHistory.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Orders\\OrderDashboard.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\utils\\queries.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Orders\\OrderGuide.js",["160","161"],"import './OrderGuide.css'\nimport React, { useState } from 'react'\nimport OrderList from \"./OrderList\"\nimport ProductList from '../Products/ProductList'\nimport { REMOVE_FROM_ORDERGUIDE, ADD_TO_ORDERGUIDE} from '../../utils/mutations'\nimport {} from '../../utils/queries'\n\nexport default function OrderGuide (props) {\n\n\n    const [guideState, setGuideState] = useState(props.orderGuide)\n    const buttons = true\n\n    return (\n    <>\n        <div className=\"order-guide-content\">\n            <div className=\"order-guide-sides\">\n            <h1>Order Guide</h1>\n                <OrderList enterpriseId={props.enterpriseId} orderGuide={guideState} setGuideState={setGuideState} buttons={buttons} />\n\n            </div>\n            <div className=\"order-guide-sides\">\n            <h1>Full Product List</h1>\n\n                <ProductList enterpriseId={props.enterpriseId} orderGuide={guideState} setGuideState={setGuideState} buttons={buttons} />\n            </div>\n        </div>\n    </>\n    )\n}","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Reporting\\ReportingDashboard.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Layout\\Dashboard.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Layout\\Header.js",["162","163","164"],"import './Header.css'\nimport React from 'react'\nimport { useQuery } from '@apollo/client';\nimport { GET_ENTERPRISE_BY_ID} from '../../utils/queries'\nimport auth from '../../utils/auth'\n\n\n\n\nexport default function Header (props) {\n\n    \n\n    return (\n        <header>\n          <div className='header-enterprise'>\n            <h1>{ props.enterprise }</h1>\n            <p>Welcome, {props.user}.</p>\n          </div>\n          <div className='header-logo'>\n            <img src='/images/icons/iplus.png' alt=\"Inventory+ Logo\" />\n          </div> \n        </header>\n    )\n}","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Users\\AddUser.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Products\\ProductDashboard.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Products\\ProductGuide.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Products\\AddProduct.js",["165","166"],"import './AddProduct.css'\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { ADD_PRODUCT } from '../../utils/mutations'\nimport ProductList from './ProductList';\n\nimport Auth from '../../utils/auth';\n\nexport default function AddProduct () {\n    \n    const enterprise = Auth.getProfile().data.enterprise\n    const [ formData, setFormData ] = useState({\n        sku: '',\n        name: '',\n        description: '',\n        msrp: 0,\n        category: '',\n        notes: '',\n    })\n    \n\n    const [addProduct, { error, data }] = useMutation(ADD_PRODUCT)\n\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        setFormData({ ...formData, [name]: value });\n    }\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n\n        const inputData = { ...formData}\n\n        inputData.msrp = parseInt(inputData.msrp)\n\n\n        try {\n            const variables = { ...inputData, enterprise }\n            const { data } = await addProduct({\n                variables\n            })\n        } catch (err) {\n            console.error(err);\n        }\n        setFormData({\n            sku: '',\n            name: '',\n            description: '',\n            msrp: 0,\n            category: '',\n            notes: '',\n        })\n    }\n    return (\n    <div className='add-product-body'>\n    <div className='form-container'>\n            <form  onSubmit={handleFormSubmit}>\n                <div className='add-product-header'>\n                    <h1>Add Product</h1>\n                </div>\n                <div className='add-product-form'>\n                <label htmlFor='sku'>SKU:<input name='sku' value={formData.sku} type='text' onChange={handleInputChange}/></label>\n                <label htmlFor='name'>Product Name:<input name='name' value={formData.name} type='text' onChange={handleInputChange}/></label>\n                <label htmlFor='description'>Description:<input name='description' value={formData.description} type='text' onChange={handleInputChange}/></label>\n                <label htmlFor='msrp'>MSRP:<input name='msrp' value={formData.msrp} type='number' onChange={handleInputChange}/></label>\n                <label htmlFor='category'>Category:<input name='category' value={formData.category} type='text' onChange={handleInputChange}/></label>\n                <label htmlFor='notes'>Notes:<input name='notes' value={formData.notes} type='text' onChange={handleInputChange}/></label>\n                </div>\n                <input id='add-product-submit' type='submit' value='Submit' />\n                {error && (\n          <div className=\"col-12 my-3 bg-danger text-white p-3\">\n            Something went wrong...\n          </div>\n        )}\n            </form>\n        </div>\n        <div className='add-product-list'>\n            <ProductList />\n        </div>\n    </div>\n        \n    )\n}","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Orders\\OrderFulfillment.js",["167","168"],"import { useQuery,useMutation} from \"@apollo/client\"\nimport {GET_OPEN_SALES} from \"../../utils/queries\"; \nimport {  groupSales } from \"../../utils/remodeledData\";\nimport orderDate from \"../../utils/orderDate\";\nimport { FULFILL_ITEMS } from \"../../utils/mutations\";\n\nexport default function OrderFulfillment ({enterpriseId}) {\n    \n    const [fulfillSale,{error}] = useMutation(FULFILL_ITEMS)\n\n   \n    const { loading: openSaleItemsLoading, data: openSaleItemsData, refetch } = useQuery(GET_OPEN_SALES, {\n        variables: { enterpriseId:enterpriseId}\n    })\n    if (openSaleItemsData) {\n        refetch()\n    }\n\n    const openSalesGroup = openSaleItemsLoading?[]:groupSales(openSaleItemsData.getOpenSales)\n    console.log(openSalesGroup)\n    const handleFulfill = (e)=>{\n        refetch()\n        const index = e.target.dataset.index;\n        const variables = {\n            enterpriseId:enterpriseId,\n            saleNumber:parseInt(e.target.dataset.orderNumber),\n            fulfillmentDate:orderDate(new Date()),\n        }\n        fulfillSale({variables})\n    }\n\n    return (\n        <div>\n            <h1>Fulfill Sale</h1>\n            {openSaleItemsLoading\n        ? <h2>Loading</h2>\n        :  <table  className=\"product-list-table\"><thead>\n             <tr>\n                        <th>Sale #</th>\n                        <th>Sale Date</th>\n                        <th>Buyer</th>\n                        <th>Items</th>\n                        <th>Fulfill!</th>\n                    </tr>\n        </thead>\n                <tbody>\n                    {openSalesGroup.map((order,index)=>{\n                        return(<tr key={index} data-order={order.number}>\n                            <td>{order.number}</td>\n                            <td>{orderDate(order.date)}</td>\n                            <td>{order.buyer}</td>\n                            <td>{order.itemList}</td>\n                            <td><button data-order-number={order.number} data-index={index} onClick={handleFulfill}>Receive!</button></td>\n                        </tr>\n)\n                    })}\n\n                </tbody>\n            </table>\n\n\n\n\n\n\n\n\n\n\n\n\n      }\n                \n        </div>\n    )\n}","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Orders\\OrderPurchase.js",["169","170","171","172"],"import { useQuery, useMutation } from \"@apollo/client\"\nimport { useState, useEffect } from 'react'\nimport { GET_CURRENT_STOCKS, GET_INCOMING_ITEMS } from \"../../utils/queries\";\nimport { BUY_ITEMS } from '../../utils/mutations'\nimport { groupItems, generatePurchaseTableData } from \"../../utils/remodeledData\";\nimport orderDate from \"../../utils/orderDate\";\nimport './Order.css'\n\nimport OrderModal from \"./OrderModal\";\n\nexport default function OrderPurchase (props) {\n    //modal junk\n    const [openModal, setOpenModal] = useState(false)\n\n\n\n    let supplier = \"not specified\"\n\n    const [buyItems, { error }] = useMutation(BUY_ITEMS)\n\n    const { loading: currentStocksLoading, data: currentStocksData, refetch: currentRefetch } = useQuery(GET_CURRENT_STOCKS, {\n        variables: { enterpriseId: props.enterpriseId}\n    })\n    const { loading: incomingItemsLoading, data: incomingItemsData, refetch: incomingRefetch } = useQuery(GET_INCOMING_ITEMS, {\n        variables: { enterpriseId: props.enterpriseId}\n    })\n\n    let currentStocksGroups\n    let incomingItemsGroups\n    let tableData = []\n    let orderNumber = Date.now() % 1000000\n\n    \n    if(!currentStocksLoading && !incomingItemsLoading){\n        incomingRefetch()\n        currentRefetch()\n        currentStocksGroups = groupItems(currentStocksData.getCurrentStocks)\n        incomingItemsGroups = groupItems(incomingItemsData.getOrderedItems)\n        tableData = generatePurchaseTableData(props.orderGuide, currentStocksGroups, incomingItemsGroups)\n    }\n    console.log(tableData);\n\n    const handleSupplierChange = (e) => {\n        supplier = e.target.value\n    }\n    const handleInputChange = (e) => {\n        const index = e.target.dataset.index\n        console.log(e);\n        tableData[index][e.target.name] = parseInt(e.target.value)\n    }\n    const [updatedTable, setUpdatedTable] = useState([])\n    const handleSubmit = async () => {\n        \n        const filterTableData = tableData.filter(data => data.newOrderQty > 0)\n\n        console.log(orderNumber);\n        try {\n            await filterTableData.forEach(async (product) => {\n                await buyItems({\n                    variables: {\n                        quantity: product.newOrderQty,\n                        productId: product._id,\n                        orderNumber,\n                        cost: product.newOrderCostPerUnit,\n                        purchaseDate: orderDate(),\n                        supplier,\n                        enterpriseId: props.enterpriseId\n                    }\n                })\n\n            })\n            setOpenModal(true)\n        } catch (err) {\n            console.error(err);\n        }\n\n    }\n    return (\n        <div>\n            {openModal && <OrderModal orderNumber={orderNumber} closeModal={setOpenModal}/>}\n            <div className=\"buy-table-top\">\n                <input type='text' onChange={handleSupplierChange} placeholder=\"Please enter supplier's name\"/>\n            </div>\n            <table className='place-order-table'>\n                <thead>\n                    <tr className=\"order-header\">\n                        <th>SKU</th>\n                        <th>Name</th>\n                        <th>Description</th>\n                        <th>MSRP</th>\n                        <th>Category</th>\n                        <th>Notes</th>\n                        <th>Current</th>\n                        <th>Incoming</th>\n                        <th>Cost</th>\n                        <th>Order Qty</th>\n                    </tr>\n                </thead>\n                    <tbody>\n                    {tableData.map((product, index) => {\n                        return (\n                        <tr data-pid={product._id} key={index}>\n                            <td className=\"td-1\" data-pid={product._id}>{product.sku}</td>\n                            <td className=\"td-3\" data-pid={product._id}>{product.name}</td>\n                            <td className=\"td-4\" data-pid={product._id}>{product.description}</td>\n                            <td className=\"td-1\" data-pid={product._id}>${product.msrp}</td>\n                            <td className=\"td-2\" data-pid={product._id}>{product.category}</td>\n                            <td className=\"td-4\" data-pid={product._id}>{product.notes}</td>\n                            <td className=\"td-1\" data-pid={product._id}>{product.current}</td>\n                            <td className=\"td-1\" data-pid={product._id}>{product.incoming}</td>\n                            <td className=\"td-1\" data-pid={product._id}><input className=\"td-1\" data-index={index} name=\"newOrderCostPerUnit\" type=\"number\" min=\"0\" onChange={handleInputChange} /></td>\n                            <td className=\"td-1\" ><input className=\"td-1\" data-index={index} name=\"newOrderQty\" type=\"number\" min=\"0\" onChange={handleInputChange} /></td>\n                        </tr>\n                        )\n                    })}\n                    </tbody>\n                </table>\n                <div>\n                <button className=\"order-submit\" type=\"submit\" onClick={handleSubmit}>Submit Order</button>\n                </div>\n        </div>\n    )\n}","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Orders\\OrderReceived.js",["173","174","175","176"],"import { useQuery,useMutation, from } from \"@apollo/client\"\nimport {GET_INCOMING_ITEMS,GET_OPEN_SALES} from \"../../utils/queries\"; \nimport { groupOrders } from \"../../utils/remodeledData\";\nimport orderDate from \"../../utils/orderDate\";\nimport { RECEIVE_ITEMS } from \"../../utils/mutations\";\n\nexport default function OrderReceived ({enterpriseId}) {\n    \n    const [receiveOrder,{error}] = useMutation(RECEIVE_ITEMS)\n\n    const { loading: incomingItemsLoading, data: incomingItemsData, refetch } = useQuery(GET_INCOMING_ITEMS, {\n        variables: { enterpriseId:enterpriseId}\n    })\n    // const { loading: openSaleItemsLoading, data: openSaleItemsData } = useQuery(GET_OPEN_SALES, {\n    //     variables: { enterpriseId:enterpriseId}\n    // })\n\n    if (incomingItemsData) {\n        refetch()\n    }\n    const incomingOrders = incomingItemsLoading?null:groupOrders(incomingItemsData.getOrderedItems)\n\n    const handleFulfill = (e)=>{\n        refetch()\n        const index = e.target.dataset.index;\n        const binLocation = e.target.parentNode.parentNode.lastElementChild.childNodes[0].value\n        const variables = {\n            enterpriseId:enterpriseId,\n            orderNumber:parseInt(e.target.dataset.orderNumber),\n            receivedDate:orderDate(new Date()),\n            binLocation\n        }\n        receiveOrder({variables})\n\n    }\n\n    return (\n        <div>\n            <h1>Receive Order</h1>\n            {incomingItemsLoading\n        ? <h2>Loading</h2>\n        :  <table  className=\"product-list-table\"><thead>\n             <tr>\n                        <th>Order #</th>\n                        <th>Order Date</th>\n                        <th>Seller</th>\n                        <th>Items</th>\n                        <th>Receive!</th>\n                        <th>Bin #</th>\n                    </tr>\n        </thead>\n                <tbody>\n                    {incomingOrders.map((order,index)=>{\n                        return(<tr key={index} data-order={order.number}>\n                            <td>{order.number}</td>\n                            <td>{orderDate(order.date)}</td>\n                            <td>{order.supplier}</td>\n                            <td>{order.itemList}</td>\n                            <td><button data-order-number={order.number} data-index={index} onClick={handleFulfill}>Receive!</button></td>\n                            <td><input type=\"text\"></input></td>\n                        </tr>\n)\n                    })}\n\n                </tbody>\n            </table>\n\n\n\n\n\n\n\n\n\n\n\n\n      }\n                \n        </div>\n    )\n}","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Orders\\OrderSell.js",["177"],"import { useQuery, useMutation } from \"@apollo/client\"\nimport { useState } from 'react'\nimport { GET_CURRENT_STOCKS } from \"../../utils/queries\";\nimport { SELL_ITEMS } from '../../utils/mutations'\nimport { generateSalesTableData, groupItems } from \"../../utils/remodeledData\";\nimport orderDate from \"../../utils/orderDate\";\nimport './Order.css'\n\nimport OrderModal from \"./OrderModal\";\n\nexport default function OrderSell (props) {\n    //modal junk\n    const [openModal, setOpenModal] = useState(false)\n\n    // const [buyer, setBuyer] = useState('dummy')\n\n\n    let buyer = \"dummy\"\n    const [sellItems, { error }] = useMutation(SELL_ITEMS)\n\n    const { loading: currentStocksLoading, data: currentStocksData, refetch } = useQuery(GET_CURRENT_STOCKS, {\n        variables: { enterpriseId: props.enterpriseId}\n    })\n\n    let currentStocksGroups\n    let tableData = []\n    let saleNumber = Date.now() % 1000000\n\n    \n    if(!currentStocksLoading ){\n        refetch()\n        currentStocksGroups = groupItems(currentStocksData.getCurrentStocks)\n        tableData = generateSalesTableData(props.orderGuide, currentStocksGroups)\n    }\n\n\n    const handleSupplierChange = (e) => {\n        buyer=e.target.value\n    }\n    const handleInputChange = (e) => {\n        const index = e.target.dataset.index\n        tableData[index][e.target.name] = parseInt(e.target.value)\n        console.log(tableData[0])\n    }\n    const handleSubmit = async () => {\n        console.log(tableData[0])\n        const filterTableData = tableData.filter(data => data.newSaleQty > 0)\n        console.log(filterTableData)\n        try {\n            await filterTableData.forEach(async (product) => {\n                const variables = {\n                    quantity: product.newSaleQty,\n                    productId: product._id,\n                    saleId:saleNumber,\n                    salesPrice: product.newSalePricePerUnit,\n                    saleDate: orderDate(),\n                    buyer,\n                    enterpriseId: props.enterpriseId\n                }\n                console.log(variables);\n                await sellItems({\n                    variables\n                })\n\n            })\n            setOpenModal(true)\n        } catch (err) {\n            console.error(err);\n        }}\n\n\n    return (\n        <div>\n            {openModal && <OrderModal orderNumber={saleNumber} closeModal={setOpenModal}/>}\n            <div className=\"buy-table-top\">\n                <input type='text' onChange={handleSupplierChange} placeholder=\"Please enter buyer's name\"/>\n            </div>\n            <table className='place-order-table'>\n                <thead>\n                    <tr className=\"order-header\">\n                        <th>SKU</th>\n                        <th>Name</th>\n                        <th>Description</th>\n                        <th>MSRP</th>\n                        <th>Category</th>\n                        <th>Notes</th>\n                        <th>Current</th>\n                        <th>Price</th>\n                        <th>Qty</th>\n                    </tr>\n                </thead>\n                    <tbody>\n                    {tableData.map((product, index) => {\n                        return (\n                        <tr data-pid={product._id} key={index}>\n                            <td className=\"td-1\" data-pid={product._id}>{product.sku}</td>\n                            <td className=\"td-3\" data-pid={product._id}>{product.name}</td>\n                            <td className=\"td-4\" data-pid={product._id}>{product.description}</td>\n                            <td className=\"td-1\" data-pid={product._id}>${product.msrp}</td>\n                            <td className=\"td-2\" data-pid={product._id}>{product.category}</td>\n                            <td className=\"td-4\" data-pid={product._id}>{product.notes}</td>\n                            <td className=\"td-1\" data-pid={product._id}>{product.current}</td>\n                            <td className=\"td-1\" data-pid={product._id}><input className=\"td-1\" data-index={index} name=\"newSalePricePerUnit\" type=\"number\" min=\"0\" onChange={handleInputChange}></input></td>\n                            <td className=\"td-1\" ><input className=\"td-1\" data-index={index} name=\"newSaleQty\" type=\"number\" min=\"0\" max={product.current} onChange={handleInputChange}/></td>\n                        </tr>\n                        )\n                    })}\n                    </tbody>\n                </table>\n                <div>\n                <button className=\"order-submit\" type=\"submit\" onClick={handleSubmit}>Submit Order</button>\n                </div>\n        </div>\n    )\n}","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Reporting\\ProductReport.js",["178","179"],"import {useQuery} from \"@apollo/client\"\nimport { useState } from \"react\"\nimport { GET_ENTERPRISE_BY_ID,PRODUCT_ANALYSIS } from \"../../utils/queries\"\nimport ProductDetails from \"./ProductDetails\"\n\n\nexport default function ProductReport ({enterpriseId}){\n    console.log(enterpriseId)\n\n    const{loading: enterpriseLoading,data:enterpriseData} = useQuery(GET_ENTERPRISE_BY_ID,{\n        variables:{id:enterpriseId}\n    })\n    const [productId,setProductId] = useState(false)\n\n    let products;\n    if (!enterpriseLoading){\n        console.log(enterpriseData)\n        products = enterpriseData.getEnterpriseById.orderGuide;\n        console.log(products)\n    }\n\n    if(enterpriseLoading){\n        return(<h1>Loading...</h1>)\n    }\n\n    const handleProductClick = (e)=>{\n        const productId = e.target.dataset.productId\n        setProductId(e.target.dataset.productId)\n    }\n\n    return(\n        <div>\n\n        <div className=\"card\">\n            <h3>Products</h3>\n            {products.map((product,index)=>{\n                console.log(product)\n                return(<button data-product-id={product._id} onClick={handleProductClick} >{product.name}</button>)\n            })}\n        </div>\n            {productId?<ProductDetails enterpriseId={enterpriseId} productId={productId}/>:null}\n        </div>\n    )\n\n\n}","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Layout\\Navbar.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Products\\ProductList.js",["180","181","182"],"import './ProductList.css'\nimport React, { useState } from 'react'\nimport { useMutation, useQuery } from '@apollo/client';\nimport { ADD_TO_ORDERGUIDE } from '../../utils/mutations'\nimport { QUERY_ALL_PRODUCTS } from '../../utils/queries'\n\nexport default function ProductList (props) {\n    \n    const { loading: productsLoading, data: productsData, refetch } = useQuery(QUERY_ALL_PRODUCTS)\n    let products\n\n    if(productsData) {\n        refetch()\n        products = productsData.allProducts\n    }\n\n    const [addProduct, { error }] = useMutation(ADD_TO_ORDERGUIDE)\n    const checkIfInList = (product,list)=>{\n        const match = list.filter(li=>{\n            return li._id===product._id\n        })\n        if (match.length!==0){\n            return true\n        }\n        else{\n            return false\n        }\n    }\n\n    const handleAdd = async (product) => {\n        let newList = [...props.orderGuide, product]\n        \n        props.setGuideState(newList)\n        try {\n            await addProduct({\n                variables: { enterpriseId: props.enterpriseId, productId: product._id }\n            })\n        } catch (err) {\n            console.error(err);\n        }  \n\n    }\n\n    return (\n        <div>\n            <table className='product-list-table'>\n                <thead>\n                    <tr>\n                        <th>SKU</th>\n                        <th>Name</th>\n                        <th>Description</th>\n                        <th>MSRP</th>\n                        <th>Category</th>\n                        <th>Notes</th>\n                        {props.buttons?<th>Add</th> : null}\n\n                    </tr>\n                </thead>\n                    <tbody>{productsLoading? (<tr><td>Loading...</td></tr>) : (\n                        products.map((product, index) => {\n                        const check = checkIfInList(product, (props?.orderGuide||[]))\n                        if(!check) {\n                         return (\n                        <tr data-pid={product._id} key={index} >\n                            <td data-pid={product._id}>{product.sku}</td>\n                            <td data-pid={product._id}>{product.name}</td>\n                            <td data-pid={product._id}>{product.description}</td>\n                            <td data-pid={product._id}>${product.msrp}</td>\n                            <td data-pid={product._id}>{product.category}</td>\n                            <td data-pid={product._id}>{product.notes}</td>\n                            {props.buttons?<td><button onClick={() => handleAdd(product)}>✔️</button></td> : null}\n\n                        </tr>\n                        )   \n                        }})\n                    )}\n                    \n                    </tbody>\n                </table>\n        </div>\n    )\n}","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Orders\\OrderList.js",["183"],"import './OrderList.css'\nimport React from 'react'\nimport { useMutation } from '@apollo/client'\nimport { REMOVE_FROM_ORDERGUIDE } from '../../utils/mutations'\n\nexport default function OrderList (props) {\n\n    const [removeProduct, { error }] = useMutation(REMOVE_FROM_ORDERGUIDE)\n\n    const handleRemove = async (pid) => {\n        const newList = props.orderGuide.filter((product) => {\n            return product._id !== pid\n        })\n        props.setGuideState(newList)\n        try {\n            await removeProduct({\n                variables: { enterpriseId: props.enterpriseId, productId: pid }\n            })\n        } catch (err) {\n            console.error(err);\n        }\n\n    }\n    \n\n    return (\n        <div>\n            <table className='order-list-table'>\n                <thead>\n                    <tr>\n                        <th>SKU</th>\n                        <th>Name</th>\n                        <th>Description</th>\n                        <th>MSRP</th>\n                        <th>Category</th>\n                        <th>Notes</th>\n                        {props.buttons?<th>Remove</th> : null}\n                    </tr>\n                </thead>\n                    <tbody>\n                    {props.orderGuide.map((product, index) => {\n                        return (\n                        <tr data-pid={product._id} key={index}>\n                            <td data-pid={product._id}>{product.sku}</td>\n                            <td data-pid={product._id}>{product.name}</td>\n                            <td data-pid={product._id}>{product.description}</td>\n                            <td data-pid={product._id}>${product.msrp}</td>\n                            <td data-pid={product._id}>{product.category}</td>\n                            <td data-pid={product._id}>{product.notes}</td>\n                            {props.buttons?<td><button onClick={() => handleRemove(product._id)} data-pid={product._id}>❌</button></td> : null}\n                        </tr>\n                        )\n                    })}\n                    </tbody>\n                </table>\n        </div>\n    )\n}","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\utils\\orderDate.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Orders\\OrderModal.js",["184"],"import React from \"react\"\nimport { Link } from 'react-router-dom'\n\nexport default function OrderModal ({closeModal, orderNumber}) {\n    return (\n        <div className=\"modal-background\">\n            <div className=\"modal-container\">\n                <button onClick={() => closeModal(false)}> X </button>\n                <div className=\"modal-header\">\n                    <h1>Order Successfully Placed</h1>\n                </div>\n                <div className=\"modal-body\">\n                    <p>Order number #{orderNumber} is now processing...</p>\n                </div>\n                <div className=\"modal-footer\">\n                    <button>Return to Order Dashboard</button>\n                </div>\n            </div>\n        </div>\n    )\n}","C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\utils\\remodeledData.js",["185"],"C:\\Users\\jcfar\\OneDrive\\Desktop\\inventory-plus\\client\\src\\components\\Reporting\\ProductDetails.js",[],{"ruleId":"186","severity":1,"message":"187","line":3,"column":32,"nodeType":"188","messageId":"189","endLine":3,"endColumn":50},{"ruleId":"186","severity":1,"message":"190","line":33,"column":8,"nodeType":"188","messageId":"189","endLine":33,"endColumn":13},{"ruleId":"186","severity":1,"message":"191","line":35,"column":8,"nodeType":"188","messageId":"189","endLine":35,"endColumn":20},{"ruleId":"186","severity":1,"message":"192","line":17,"column":25,"nodeType":"188","messageId":"189","endLine":17,"endColumn":30},{"ruleId":"186","severity":1,"message":"193","line":17,"column":32,"nodeType":"188","messageId":"189","endLine":17,"endColumn":36},{"ruleId":"186","severity":1,"message":"193","line":33,"column":19,"nodeType":"188","messageId":"189","endLine":33,"endColumn":23},{"ruleId":"186","severity":1,"message":"194","line":1,"column":10,"nodeType":"188","messageId":"189","endLine":1,"endColumn":18},{"ruleId":"186","severity":1,"message":"195","line":2,"column":17,"nodeType":"188","messageId":"189","endLine":2,"endColumn":23},{"ruleId":"186","severity":1,"message":"196","line":3,"column":8,"nodeType":"188","messageId":"189","endLine":3,"endColumn":12},{"ruleId":"186","severity":1,"message":"192","line":10,"column":24,"nodeType":"188","messageId":"189","endLine":10,"endColumn":29},{"ruleId":"186","severity":1,"message":"193","line":15,"column":20,"nodeType":"188","messageId":"189","endLine":15,"endColumn":24},{"ruleId":"186","severity":1,"message":"197","line":5,"column":10,"nodeType":"188","messageId":"189","endLine":5,"endColumn":32},{"ruleId":"186","severity":1,"message":"198","line":5,"column":34,"nodeType":"188","messageId":"189","endLine":5,"endColumn":51},{"ruleId":"186","severity":1,"message":"194","line":3,"column":10,"nodeType":"188","messageId":"189","endLine":3,"endColumn":18},{"ruleId":"186","severity":1,"message":"199","line":4,"column":10,"nodeType":"188","messageId":"189","endLine":4,"endColumn":30},{"ruleId":"186","severity":1,"message":"196","line":5,"column":8,"nodeType":"188","messageId":"189","endLine":5,"endColumn":12},{"ruleId":"186","severity":1,"message":"193","line":22,"column":33,"nodeType":"188","messageId":"189","endLine":22,"endColumn":37},{"ruleId":"186","severity":1,"message":"193","line":39,"column":21,"nodeType":"188","messageId":"189","endLine":39,"endColumn":25},{"ruleId":"186","severity":1,"message":"192","line":9,"column":25,"nodeType":"188","messageId":"189","endLine":9,"endColumn":30},{"ruleId":"186","severity":1,"message":"200","line":23,"column":15,"nodeType":"188","messageId":"189","endLine":23,"endColumn":20},{"ruleId":"186","severity":1,"message":"201","line":2,"column":20,"nodeType":"188","messageId":"189","endLine":2,"endColumn":29},{"ruleId":"186","severity":1,"message":"192","line":19,"column":24,"nodeType":"188","messageId":"189","endLine":19,"endColumn":29},{"ruleId":"186","severity":1,"message":"202","line":51,"column":12,"nodeType":"188","messageId":"189","endLine":51,"endColumn":24},{"ruleId":"186","severity":1,"message":"203","line":51,"column":26,"nodeType":"188","messageId":"189","endLine":51,"endColumn":41},{"ruleId":"186","severity":1,"message":"204","line":1,"column":32,"nodeType":"188","messageId":"189","endLine":1,"endColumn":36},{"ruleId":"186","severity":1,"message":"205","line":2,"column":28,"nodeType":"188","messageId":"189","endLine":2,"endColumn":42},{"ruleId":"186","severity":1,"message":"192","line":9,"column":26,"nodeType":"188","messageId":"189","endLine":9,"endColumn":31},{"ruleId":"186","severity":1,"message":"200","line":25,"column":15,"nodeType":"188","messageId":"189","endLine":25,"endColumn":20},{"ruleId":"186","severity":1,"message":"192","line":19,"column":25,"nodeType":"188","messageId":"189","endLine":19,"endColumn":30},{"ruleId":"186","severity":1,"message":"206","line":3,"column":31,"nodeType":"188","messageId":"189","endLine":3,"endColumn":47},{"ruleId":"186","severity":1,"message":"207","line":27,"column":15,"nodeType":"188","messageId":"189","endLine":27,"endColumn":24},{"ruleId":"186","severity":1,"message":"208","line":2,"column":17,"nodeType":"188","messageId":"189","endLine":2,"endColumn":25},{"ruleId":"186","severity":1,"message":"192","line":17,"column":26,"nodeType":"188","messageId":"189","endLine":17,"endColumn":31},{"ruleId":"209","severity":1,"message":"210","line":60,"column":55,"nodeType":"211","messageId":"212","endLine":60,"endColumn":57},{"ruleId":"186","severity":1,"message":"192","line":8,"column":29,"nodeType":"188","messageId":"189","endLine":8,"endColumn":34},{"ruleId":"186","severity":1,"message":"213","line":2,"column":10,"nodeType":"188","messageId":"189","endLine":2,"endColumn":14},{"ruleId":"214","severity":1,"message":"215","line":6,"column":47,"nodeType":"216","messageId":"217","endLine":6,"endColumn":49},"no-unused-vars","'QUERY_ALL_PRODUCTS' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","'AcceptInvite' is defined but never used.","'error' is assigned a value but never used.","'data' is assigned a value but never used.","'useQuery' is defined but never used.","'useRef' is defined but never used.","'auth' is defined but never used.","'REMOVE_FROM_ORDERGUIDE' is defined but never used.","'ADD_TO_ORDERGUIDE' is defined but never used.","'GET_ENTERPRISE_BY_ID' is defined but never used.","'index' is assigned a value but never used.","'useEffect' is defined but never used.","'updatedTable' is assigned a value but never used.","'setUpdatedTable' is assigned a value but never used.","'from' is defined but never used.","'GET_OPEN_SALES' is defined but never used.","'PRODUCT_ANALYSIS' is defined but never used.","'productId' is assigned a value but never used.","'useState' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]
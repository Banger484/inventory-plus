[{"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\index.js":"1","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\reportWebVitals.js":"2","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\App.js":"3","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\utils\\auth.js":"4","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\pages\\Home.js":"5","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Users\\Login.js":"6","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Users\\AcceptInvite.js":"7","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Users\\Signup.js":"8","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\utils\\queries.js":"9","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Users\\UserDashboard.js":"10","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Users\\Roster.js":"11","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Users\\AddUser.js":"12","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Layout\\Header.js":"13","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Layout\\Dashboard.js":"14","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Layout\\Navbar.js":"15","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Products\\ProductGuide.js":"16","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Products\\ProductDashboard.js":"17","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Products\\AddProduct.js":"18","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Orders\\OrderPurchase.js":"19","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Orders\\OrderDashboard.js":"20","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Orders\\OrderFulfillment.js":"21","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Orders\\OrderReceived.js":"22","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Orders\\OrderGuide.js":"23","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Reporting\\ReportingDashboard.js":"24","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Orders\\OrderSell.js":"25","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\utils\\mutations.js":"26","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Reporting\\ProductReport.js":"27","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Orders\\OrderHistory.js":"28","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Products\\ProductList.js":"29","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\utils\\orderDate.js":"30","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\utils\\remodeledData.js":"31","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Orders\\OrderModal.js":"32","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Reporting\\OrderDetails.js":"33","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Orders\\OrderList.js":"34","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Reporting\\ProductDetails.js":"35","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\utils\\translation\\translator.js":"36","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\utils\\translation\\translationLibrary.js":"37","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Table\\index.js":"38","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\themes.js":"39","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Reporting\\MonthlyAnalysis.js":"40","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Users\\Settings.js":"41"},{"size":517,"mtime":1653661048937,"results":"42","hashOfConfig":"43"},{"size":403,"mtime":1653571434321,"results":"44","hashOfConfig":"43"},{"size":2413,"mtime":1655775393235,"results":"45","hashOfConfig":"43"},{"size":1080,"mtime":1655740341273,"results":"46","hashOfConfig":"43"},{"size":8046,"mtime":1655777563846,"results":"47","hashOfConfig":"43"},{"size":3444,"mtime":1655740341270,"results":"48","hashOfConfig":"43"},{"size":1683,"mtime":1655740341269,"results":"49","hashOfConfig":"43"},{"size":5065,"mtime":1655740341271,"results":"50","hashOfConfig":"43"},{"size":5456,"mtime":1655775393241,"results":"51","hashOfConfig":"43"},{"size":1484,"mtime":1655775424111,"results":"52","hashOfConfig":"43"},{"size":1301,"mtime":1655740341271,"results":"53","hashOfConfig":"43"},{"size":1094,"mtime":1655740341269,"results":"54","hashOfConfig":"43"},{"size":732,"mtime":1655740341256,"results":"55","hashOfConfig":"43"},{"size":2739,"mtime":1655775354744,"results":"56","hashOfConfig":"43"},{"size":1180,"mtime":1655775354744,"results":"57","hashOfConfig":"43"},{"size":448,"mtime":1655740341264,"results":"58","hashOfConfig":"43"},{"size":1070,"mtime":1655775354748,"results":"59","hashOfConfig":"43"},{"size":3210,"mtime":1655740341263,"results":"60","hashOfConfig":"43"},{"size":5941,"mtime":1655775393236,"results":"61","hashOfConfig":"43"},{"size":3223,"mtime":1655777701229,"results":"62","hashOfConfig":"43"},{"size":2664,"mtime":1655775393235,"results":"63","hashOfConfig":"43"},{"size":3064,"mtime":1655777147319,"results":"64","hashOfConfig":"43"},{"size":1224,"mtime":1655778648121,"results":"65","hashOfConfig":"43"},{"size":1531,"mtime":1655775703673,"results":"66","hashOfConfig":"43"},{"size":5197,"mtime":1655775393237,"results":"67","hashOfConfig":"43"},{"size":5810,"mtime":1655740341273,"results":"68","hashOfConfig":"43"},{"size":1681,"mtime":1655740341266,"results":"69","hashOfConfig":"43"},{"size":131,"mtime":1654010055905,"results":"70","hashOfConfig":"43"},{"size":2606,"mtime":1655740341265,"results":"71","hashOfConfig":"43"},{"size":367,"mtime":1655775393241,"results":"72","hashOfConfig":"43"},{"size":10211,"mtime":1655740341274,"results":"73","hashOfConfig":"43"},{"size":942,"mtime":1655740341260,"results":"74","hashOfConfig":"43"},{"size":580,"mtime":1655740341266,"results":"75","hashOfConfig":"43"},{"size":2231,"mtime":1655778986535,"results":"76","hashOfConfig":"43"},{"size":1162,"mtime":1655775393238,"results":"77","hashOfConfig":"43"},{"size":208,"mtime":1655775393242,"results":"78","hashOfConfig":"43"},{"size":684,"mtime":1655775393242,"results":"79","hashOfConfig":"43"},{"size":1352,"mtime":1655740341268,"results":"80","hashOfConfig":"43"},{"size":402,"mtime":1655775393240,"results":"81","hashOfConfig":"43"},{"size":521,"mtime":1655775393238,"results":"82","hashOfConfig":"43"},{"size":352,"mtime":1655775393239,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2ca0hw",{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"111"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"111"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"111"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"111"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"111"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"111"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"111"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"111"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"111"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\index.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\reportWebVitals.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\App.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\utils\\auth.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\pages\\Home.js",["177"],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Users\\Login.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Users\\AcceptInvite.js",["178","179","180"],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Users\\Signup.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\utils\\queries.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Users\\UserDashboard.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Users\\Roster.js",["181","182","183","184","185"],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Users\\AddUser.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Layout\\Header.js",["186","187","188"],"\r\n// Imports custom css file and requires all dependant files\r\nimport './Header.css'\r\nimport React from 'react'\r\nimport { useQuery } from '@apollo/client';\r\nimport { GET_ENTERPRISE_BY_ID } from '../../utils/queries'\r\nimport auth from '../../utils/auth'\r\n\r\n// Export function to display header of application with welcome enterprise and user. Displays application logo and name as well.\r\nexport default function Header(props) {\r\n  return (\r\n    <header>\r\n      <div className='header-enterprise'>\r\n        <h1>{props.enterprise}</h1>\r\n        <p>Welcome, {props.user}.</p>\r\n      </div>\r\n      <div className='header-logo'>\r\n        <img src='/images/icons/iplus.png' alt=\"Inventory+ Logo\" />\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\n",["189","190"],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Layout\\Dashboard.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Layout\\Navbar.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Products\\ProductGuide.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Products\\ProductDashboard.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Products\\AddProduct.js",["191","192"],"import './AddProduct.css'\r\nimport React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_PRODUCT } from '../../utils/mutations'\r\nimport ProductList from './ProductList';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nexport default function AddProduct (props) {\r\n    \r\n    const enterprise = Auth.getProfile().data.enterprise\r\n    const [ formData, setFormData ] = useState({\r\n        sku: '',\r\n        name: '',\r\n        description: '',\r\n        msrp: 0,\r\n        category: '',\r\n        notes: '',\r\n    })\r\n    \r\n\r\n    const [addProduct, { error, data }] = useMutation(ADD_PRODUCT)\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setFormData({ ...formData, [name]: value });\r\n    }\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const inputData = { ...formData}\r\n\r\n        inputData.msrp = parseInt(inputData.msrp)\r\n\r\n\r\n        try {\r\n            const variables = { ...inputData, enterprise }\r\n            const { data } = await addProduct({\r\n                variables\r\n            })\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n        setFormData({\r\n            sku: '',\r\n            name: '',\r\n            description: '',\r\n            msrp: 0,\r\n            category: '',\r\n            notes: '',\r\n        })\r\n    }\r\n    return (<>\r\n    \r\n\r\n        {/* <div className=\"table-top apl-top\">\r\n            <h1>Product Guide</h1>\r\n        </div> */}\r\n    <div className='add-product-body'>\r\n    <div className='form-container'>\r\n            <form  onSubmit={handleFormSubmit}>\r\n                <div className='add-product-header'>\r\n                    <h1>Add Product</h1>\r\n                </div>\r\n                <div className='add-product-form'>\r\n                <label htmlFor='sku'>SKU:<input name='sku' value={formData.sku} type='text' onChange={handleInputChange}/></label>\r\n                <label htmlFor='name'>Product Name:<input name='name' value={formData.name} type='text' onChange={handleInputChange}/></label>\r\n                <label htmlFor='description'>Description:<input name='description' value={formData.description} type='text' onChange={handleInputChange}/></label>\r\n                <label htmlFor='msrp'>MSRP:<input name='msrp' value={formData.msrp} type='number' onChange={handleInputChange}/></label>\r\n                <label htmlFor='category'>Category:<input name='category' value={formData.category} type='text' onChange={handleInputChange}/></label>\r\n                <label htmlFor='notes'>Notes:<input name='notes' value={formData.notes} type='text' onChange={handleInputChange}/></label>\r\n                </div>\r\n                <input id='add-product-submit' type='submit' value='Submit' />\r\n                {error && (\r\n          <div className=\"col-12 my-3 bg-danger text-white p-3\">\r\n            Something went wrong...\r\n          </div>\r\n        )}\r\n            </form>\r\n        </div>\r\n        <div className='add-product-list'>\r\n        \r\n        <ProductList\r\n          products={props.products}\r\n          productsRefetch={props.productsRefetch}\r\n        />\r\n        </div>\r\n    </div>\r\n    </>  \r\n    )\r\n}","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Orders\\OrderPurchase.js",["193","194","195","196"],"import { useQuery, useMutation } from \"@apollo/client\"\r\nimport { useState, useEffect } from 'react'\r\nimport { GET_CURRENT_STOCKS, GET_INCOMING_ITEMS } from \"../../utils/queries\";\r\nimport { BUY_ITEMS } from '../../utils/mutations'\r\nimport { groupItems, generatePurchaseTableData } from \"../../utils/remodeledData\";\r\nimport orderDate from \"../../utils/orderDate\";\r\nimport './Order.css'\r\n\r\nimport OrderModal from \"./OrderModal\";\r\n\r\nexport default function OrderPurchase (props) {\r\n    //modal junk\r\n    const [openModal, setOpenModal] = useState(false)\r\n    const [date, setDate] = useState( orderDate())\r\n    const [orderNumber,setOrderNumber] =useState(props.enterprise.getEnterpriseById.orderNumber)\r\n\r\n    const [supplier,setSupplier] = useState(\"Not specified\")\r\n\r\n    const [buyItems, { error }] = useMutation(BUY_ITEMS)\r\n\r\n    const { loading: currentStocksLoading, data: currentStocksData, refetch: currentRefetch } = useQuery(GET_CURRENT_STOCKS, {\r\n        variables: { enterpriseId: props.enterpriseId}\r\n    })\r\n    const { loading: incomingItemsLoading, data: incomingItemsData, refetch: incomingRefetch } = useQuery(GET_INCOMING_ITEMS, {\r\n        variables: { enterpriseId: props.enterpriseId}\r\n    })\r\n\r\n    let currentStocksGroups\r\n    let incomingItemsGroups\r\n    let tableData = []\r\n    console.log(props)\r\n    \r\n    if(!currentStocksLoading && !incomingItemsLoading){\r\n        incomingRefetch()\r\n        currentRefetch()\r\n        currentStocksGroups = groupItems(currentStocksData.getCurrentStocks)\r\n        incomingItemsGroups = groupItems(incomingItemsData.getOrderedItems)\r\n        tableData = generatePurchaseTableData(props.orderGuide, currentStocksGroups, incomingItemsGroups)\r\n    }\r\n\r\n    const handleSupplierChange = (e) => {\r\n        setSupplier(e.target.value)\r\n    }\r\n    const handleInputChange = (e) => {\r\n        const index = e.target.dataset.index\r\n        let val;\r\n        if(e.target.name===\"newOrderQty\"){\r\n            val = parseInt(e.target.value)\r\n        }else{\r\n            val = parseFloat(e.target.value)\r\n        }\r\n        tableData[index][e.target.name] = val\r\n    }\r\n\r\n    const handleDateChange = (e)=>{\r\n        setDate(e.target.value)\r\n    }\r\n\r\n    const [updatedTable, setUpdatedTable] = useState([])\r\n    const handleSubmit = async () => {\r\n\r\n        \r\n        const filterTableData = tableData.filter(data => data.newOrderQty > 0)\r\n\r\n        try {\r\n            await filterTableData.forEach(async (product) => {\r\n                console.log(\"this is the input\",product.newOrderCostPerUnit)\r\n                const variables = {\r\n                    quantity: product.newOrderQty,\r\n                    productId: product._id,\r\n                    orderNumber,\r\n                    cost: product.newOrderCostPerUnit,\r\n                    purchaseDate: date,\r\n                    supplier,\r\n                    enterpriseId: props.enterpriseId\r\n                }\r\n                console.log(variables)\r\n                await buyItems({\r\n                    variables\r\n                })\r\n\r\n            })\r\n            setOpenModal(true);\r\n            setOrderNumber(orderNumber+1)\r\n\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            {openModal && <OrderModal orderNumber={orderNumber} closeModal={setOpenModal}/>}\r\n            <div className=\"table-top purchase-order-header\">\r\n                <h1>Purchase Order</h1>\r\n                <input type='text' onChange={handleSupplierChange} placeholder=\"Please enter supplier's name\"/>\r\n                <input onChange={handleDateChange} type=\"date\"/>\r\n            </div>\r\n            <table className='order-table'>\r\n                <thead>\r\n                    <tr className=\"order-header\">\r\n                        <th>SKU</th>\r\n                        <th>Name</th>\r\n                        <th>Description</th>\r\n                        <th>MSRP</th>\r\n                        <th>Category</th>\r\n                        <th>Notes</th>\r\n                        <th>Current</th>\r\n                        <th>Incoming</th>\r\n                        <th>Cost</th>\r\n                        <th>Order Qty</th>\r\n                    </tr>\r\n                </thead>\r\n                    <tbody>\r\n                    {tableData.map((product, index) => {\r\n                        return (\r\n                        <tr data-pid={product._id} key={index}>\r\n                            <td className=\"td-1\" data-pid={product._id}>{product.sku}</td>\r\n                            <td className=\"td-3\" data-pid={product._id}>{product.name}</td>\r\n                            <td className=\"td-4\" data-pid={product._id}>{product.description}</td>\r\n                            <td className=\"td-1\" data-pid={product._id}>${product.msrp}</td>\r\n                            <td className=\"td-2\" data-pid={product._id}>{product.category}</td>\r\n                            <td className=\"td-4\" data-pid={product._id}>{product.notes}</td>\r\n                            <td className=\"td-1\" data-pid={product._id}>{product.current}</td>\r\n                            <td className=\"td-1\" data-pid={product._id}>{product.incoming}</td>\r\n                            <td className=\"td-1\" data-pid={product._id}>\r\n                                <input className=\"td-1\" data-index={index} name=\"newOrderCostPerUnit\" type=\"number\" step=\".01\" min=\"0\" onChange={handleInputChange} />\r\n                            </td>\r\n                            <td className=\"td-1\" ><input className=\"td-1\" data-index={index} name=\"newOrderQty\" type=\"number\" min=\"0\" onChange={handleInputChange} /></td>\r\n                        </tr>\r\n                        )\r\n                    })}\r\n                    </tbody>\r\n                </table>\r\n                <div>\r\n                <button className=\"order-submit\" type=\"submit\" onClick={handleSubmit}>Submit Order</button>\r\n                </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Orders\\OrderDashboard.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Orders\\OrderFulfillment.js",["197","198"],"// Imports custom css file and requires all dependant files\r\nimport { useQuery, useMutation } from \"@apollo/client\"\r\nimport { GET_OPEN_SALES } from \"../../utils/queries\";\r\nimport { groupSales } from \"../../utils/remodeledData\";\r\nimport orderDate from \"../../utils/orderDate\";\r\nimport { FULFILL_ITEMS } from \"../../utils/mutations\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function OrderFulfillment({ enterpriseId }) {\r\n\r\n    const [fulfillSale, { error }] = useMutation(FULFILL_ITEMS)\r\n    const [date, setDate] = useState( orderDate())\r\n\r\n    const { loading: openSaleItemsLoading, data: openSaleItemsData, refetch } = useQuery(GET_OPEN_SALES, {\r\n        variables: { enterpriseId: enterpriseId }\r\n    })\r\n    if (openSaleItemsData) {\r\n        refetch()\r\n    }\r\n\r\n    const handleDateChange = (e)=>{\r\n        console.log(e)\r\n        setDate(e.target.value)\r\n    }\r\n\r\n    const openSalesGroup = openSaleItemsLoading ? [] : groupSales(openSaleItemsData.getOpenSales)\r\n    const handleFulfill = (e) => {\r\n        const index = e.target.dataset.index;\r\n        const variables = {\r\n            enterpriseId: enterpriseId,\r\n            saleNumber: parseInt(e.target.dataset.orderNumber),\r\n            fulfillmentDate: date,\r\n        }\r\n        fulfillSale({ variables })\r\n        refetch()\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"big-center-flex\">\r\n            <h1>Fulfill Sale</h1>\r\n            <input onChange={handleDateChange} type=\"date\"/>\r\n\r\n            {openSaleItemsLoading\r\n                ? <h2>Loading</h2>\r\n                : <table className=\"product-list-table\"><thead>\r\n                    <tr>\r\n                        <th>Sale #</th>\r\n                        <th>Sale Date</th>\r\n                        <th>Buyer</th>\r\n                        <th>Items</th>\r\n                        <th>Fulfill!</th>\r\n                    </tr>\r\n                </thead>\r\n                    <tbody>\r\n                        {openSalesGroup.map((order, index) => {\r\n                            return (<tr key={index} data-order={order.number}>\r\n                                <td>{order.number}</td>\r\n                                <td>{orderDate(order.date)}</td>\r\n                                <td>{order.buyer}</td>\r\n                                <td>{order.itemList}</td>\r\n                                <td><button data-order-number={order.number} data-index={index} onClick={handleFulfill}>Receive!</button></td>\r\n                            </tr>\r\n                            )\r\n                        })}\r\n\r\n                    </tbody>\r\n                </table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            }\r\n\r\n        </div>\r\n    )\r\n}","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Orders\\OrderReceived.js",["199","200","201","202","203"],"import { useMutation, from } from \"@apollo/client\"\r\nimport { groupOrders } from \"../../utils/remodeledData\";\r\nimport orderDate from \"../../utils/orderDate\";\r\nimport { RECEIVE_ITEMS } from \"../../utils/mutations\";\r\nimport \"./orderReceived.css\"\r\nimport { useState } from \"react\";\r\nimport { OrderDetails } from \"../Reporting/OrderDetails\";\r\nimport { t } from \"../../utils/translation/translator\";\r\n\r\nexport default function OrderReceived ({enterpriseId, incomingItemsData, incomingItemsRefetch, incomingOrders}) {\r\n    \r\n    const [receiveOrder,{error}] = useMutation(RECEIVE_ITEMS)\r\n    const [date,setDate] = useState(null)\r\n    \r\n\r\n    const [orderNumberSelected,setOrderNumberSelected] = useState(false)\r\n\r\n    if (incomingItemsData) {\r\n        incomingItemsRefetch()\r\n    }\r\n\r\n    \r\n    const handleFulfill = (e)=>{\r\n        console.log(\"this is the date input\",date)\r\n        incomingItemsRefetch()\r\n        const index = e.target.dataset.index;\r\n        const binLocation = e.target.parentNode.parentNode.lastElementChild.childNodes[0].value\r\n        const variables = {\r\n            enterpriseId:enterpriseId,\r\n            orderNumber:parseInt(e.target.dataset.orderNumber),\r\n            receivedDate:date,\r\n            binLocation\r\n        }\r\n        receiveOrder({variables})\r\n        incomingItemsRefetch()\r\n    }\r\n\r\n    const handleSelect = (e)=>{\r\n        const {order} = e.target.dataset\r\n        console.log(\"selected\",order)\r\n        setOrderNumberSelected(order)\r\n    }\r\n\r\n    const handleDateChange = (e)=>{\r\n        setDate(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"big-center-flex\">\r\n            <h1>Receive Order</h1>\r\n            <input type=\"date\" onChange={handleDateChange}></input>\r\n\r\n            <table  className=\"product-list-table\" id=\"order-received-table\"><thead>\r\n             <tr>\r\n                        <th>Order #</th>\r\n                        <th>Order Date</th>\r\n                        <th>Seller</th>\r\n                        <th>Items</th>\r\n                        <th>Receive!</th>\r\n                        <th>Bin #</th>\r\n                    </tr>\r\n        </thead>\r\n                <tbody>\r\n                    {incomingOrders.map((order,index)=>{\r\n                        return(<tr key={index} onClick={handleSelect} data-order={order.number}>\r\n                            <td data-order={order.number}>{order.number}</td>\r\n                            <td>{orderDate(order.date)}</td>\r\n                            <td>{order.supplier}</td>\r\n                            <td>{order.itemList}</td>\r\n                            <td><button data-order-number={order.number} data-index={index} onClick={handleFulfill}>Receive!</button></td>\r\n                            <td><input type=\"text\"></input></td>\r\n                        </tr>\r\n)\r\n                        })}\r\n\r\n                </tbody>\r\n            </table>\r\n      \r\n      {\r\n        orderNumberSelected?(<OrderDetails orderNumber={orderNumberSelected} enterpriseId={enterpriseId}/>):null\r\n      }\r\n                \r\n        </div>\r\n    )\r\n}","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Orders\\OrderGuide.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Reporting\\ReportingDashboard.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Orders\\OrderSell.js",["204"],"import { useQuery, useMutation } from \"@apollo/client\"\r\nimport { useState } from 'react'\r\nimport { GET_CURRENT_STOCKS } from \"../../utils/queries\";\r\nimport { SELL_ITEMS } from '../../utils/mutations'\r\nimport { generateSalesTableData, groupItems } from \"../../utils/remodeledData\";\r\nimport orderDate from \"../../utils/orderDate\";\r\nimport './Order.css'\r\n\r\nimport OrderModal from \"./OrderModal\";\r\n\r\nexport default function OrderSell (props) {\r\n    //modal junk\r\n    const [openModal, setOpenModal] = useState(false)\r\n    const [date, setDate] = useState( orderDate())\r\n    const [saleNumber,setSaleNumber] = useState(props.enterprise.getEnterpriseById.saleNumber)\r\n    // const [buyer, setBuyer] = useState('dummy')\r\n    console.log(props)\r\n\r\n    const [buyer,setBuyer] = useState(\"Not specified\")\r\n    const [sellItems, { error }] = useMutation(SELL_ITEMS)\r\n\r\n    const { loading: currentStocksLoading, data: currentStocksData, refetch } = useQuery(GET_CURRENT_STOCKS, {\r\n        variables: { enterpriseId: props.enterpriseId}\r\n    })\r\n\r\n    let currentStocksGroups\r\n    let tableData = []\r\n\r\n    \r\n    if(!currentStocksLoading ){\r\n        refetch()\r\n        currentStocksGroups = groupItems(currentStocksData.getCurrentStocks)\r\n        tableData = generateSalesTableData(props.orderGuide, currentStocksGroups)\r\n    }\r\n\r\n\r\n    const handleSupplierChange = (e) => {\r\n        setBuyer(e.target.value)\r\n    }\r\n    const handleInputChange = (e) => {\r\n        const index = e.target.dataset.index\r\n        let val;\r\n        if(e.target.name===\"newOrderQty\"){\r\n            val = parseInt(e.target.value)\r\n        }else{\r\n            val = parseFloat(e.target.value)\r\n        }\r\n        tableData[index][e.target.name] = val\r\n    }\r\n\r\n    const handleDateChange = (e)=>{\r\n        console.log(e)\r\n        setDate(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        const filterTableData = tableData.filter(data => data.newSaleQty > 0)\r\n        try {\r\n            await filterTableData.forEach(async (product) => {\r\n                const variables = {\r\n                    quantity: product.newSaleQty,\r\n                    productId: product._id,\r\n                    saleId:saleNumber,\r\n                    salesPrice: product.newSalePricePerUnit,\r\n                    saleDate: date,\r\n                    buyer,\r\n                    enterpriseId: props.enterpriseId\r\n                }\r\n                console.log(variables)\r\n                await sellItems({\r\n                    variables\r\n                })\r\n\r\n            })\r\n            setOpenModal(true)\r\n            setSaleNumber(saleNumber+1)\r\n        } catch (err) {\r\n            console.error(err);\r\n        }}\r\n\r\n\r\n    return (\r\n        <div>\r\n            {openModal && <OrderModal orderNumber={saleNumber-1} closeModal={setOpenModal}/>}\r\n            <div className=\"table-top\">\r\n                <h1>Sell Order</h1>\r\n                <input type='text' onChange={handleSupplierChange} placeholder=\"Enter Buyer\"/>\r\n                <input onChange={handleDateChange} type=\"date\"/>\r\n            </div>\r\n            <table className='order-table'>\r\n                <thead>\r\n                    <tr className=\"order-header\">\r\n                        <th>SKU</th>\r\n                        <th>Name</th>\r\n                        <th>Description</th>\r\n                        <th>MSRP</th>\r\n                        <th>Category</th>\r\n                        <th>Notes</th>\r\n                        <th>Current</th>\r\n                        <th>Price</th>\r\n                        <th>Qty</th>\r\n                    </tr>\r\n                </thead>\r\n                    <tbody>\r\n                    {tableData.map((product, index) => {\r\n                        return (\r\n                        <tr data-pid={product._id} key={index}>\r\n                            <td className=\"td-1\" data-pid={product._id}>{product.sku}</td>\r\n                            <td className=\"td-3\" data-pid={product._id}>{product.name}</td>\r\n                            <td className=\"td-4\" data-pid={product._id}>{product.description}</td>\r\n                            <td className=\"td-1\" data-pid={product._id}>${product.msrp}</td>\r\n                            <td className=\"td-2\" data-pid={product._id}>{product.category}</td>\r\n                            <td className=\"td-4\" data-pid={product._id}>{product.notes}</td>\r\n                            <td className=\"td-1\" data-pid={product._id}>{product.current}</td>\r\n                            <td className=\"td-1\" data-pid={product._id}><input className=\"td-1\" step={0.01} data-index={index} name=\"newSalePricePerUnit\" type=\"number\" min=\"0\" onChange={handleInputChange}></input></td>\r\n                            <td className=\"td-1\" ><input className=\"td-1\" data-index={index} name=\"newSaleQty\" type=\"number\" min=\"0\" max={product.current} onChange={handleInputChange}/></td>\r\n                        </tr>\r\n                        )\r\n                    })}\r\n                    </tbody>\r\n                </table>\r\n                <div>\r\n                <button className=\"order-submit\" type=\"submit\" onClick={handleSubmit}>Submit Order</button>\r\n                </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\utils\\mutations.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Reporting\\ProductReport.js",["205"],"import {useQuery} from \"@apollo/client\"\r\nimport { useState } from \"react\"\r\nimport { GET_ENTERPRISE_BY_ID,PRODUCT_ANALYSIS } from \"../../utils/queries\"\r\nimport ProductDetails from \"./ProductDetails\"\r\nimport './productReport.css'\r\n\r\nexport default function ProductReport ({enterpriseId}){\r\n\r\n    const{loading: enterpriseLoading,data:enterpriseData} = useQuery(GET_ENTERPRISE_BY_ID,{\r\n        variables:{id:enterpriseId}\r\n    })\r\n    const [productId,setProductId] = useState(false)\r\n\r\n    let products;\r\n    if (!enterpriseLoading){\r\n        products = enterpriseData.getEnterpriseById.orderGuide;\r\n    }\r\n\r\n    if(enterpriseLoading){\r\n        return(<h1>Loading...</h1>)\r\n    }\r\n\r\n    const handleProductClick = (e)=>{\r\n        const productId = e.target.value\r\n        setProductId(productId)\r\n    }\r\n\r\n    return(\r\n\r\n        <div className=\"analysis-main\">\r\n\r\n        <div className=\"card analysis-header\">\r\n\r\n        <div>\r\n        <div className=\"table-top product-report\">\r\n            <h1>Product Report</h1>\r\n        </div>\r\n            </div>\r\n            </div>\r\n        <div className=\"card product-report-container\">\r\n\r\n            <h3>Products</h3>\r\n            <select defaultValue=\"Choose a Product\" placeholder=\"Choose a product\"  onChange={handleProductClick}>\r\n            <option selected value=\"\">Select a Product</option>\r\n            {products.map((product,index)=>{\r\n                return(<option data-product-id={product._id} value={product._id} >{product.name}</option>)\r\n            })}\r\n            </select>\r\n        </div>\r\n            {productId?<ProductDetails enterpriseId={enterpriseId} productId={productId}/>:null}\r\n        </div>\r\n\r\n    )\r\n\r\n\r\n}","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Orders\\OrderHistory.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Products\\ProductList.js",["206","207"],"import './ProductList.css'\r\nimport React from 'react'\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_TO_ORDERGUIDE } from '../../utils/mutations'\r\n\r\nexport default function ProductList (props) {\r\n    if(props.products) {\r\n        props.productsRefetch()\r\n    }\r\n    const [addProduct, { error }] = useMutation(ADD_TO_ORDERGUIDE)\r\n    const checkIfInList = (product,list)=>{\r\n        const match = list.filter(li=>{\r\n            return li._id===product._id\r\n        })\r\n        if (match.length!==0){\r\n            return true\r\n        }\r\n        else{\r\n            return false\r\n        }\r\n    }\r\n    const handleAdd = async (product) => {\r\n        let newList = [...props.orderGuide, product]\r\n        \r\n        props.setGuideState(newList)\r\n        try {\r\n            await addProduct({\r\n                variables: { enterpriseId: props.enterpriseId, productId: product._id }\r\n            })\r\n        } catch (err) {\r\n            console.error(err);\r\n        }  \r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <table className='order-table'>\r\n                <thead>\r\n                    <tr className='order-header'>\r\n                        <th>SKU</th>\r\n                        <th>Name</th>\r\n                        <th>Description</th>\r\n                        <th>MSRP</th>\r\n                        <th>Category</th>\r\n                        <th>Notes</th>\r\n                        {props.buttons?<th>Add</th> : null}\r\n\r\n                    </tr>\r\n                </thead>\r\n                    <tbody>\r\n                        {props.products.map((product, index) => {\r\n                        const check = checkIfInList(product, (props?.orderGuide||[]))\r\n                        if(!check) {\r\n                         return (\r\n                        <tr data-pid={product._id} key={index} >\r\n                            <td data-pid={product._id}>{product.sku}</td>\r\n                            <td data-pid={product._id}>{product.name}</td>\r\n                            <td data-pid={product._id}>{product.description}</td>\r\n                            <td data-pid={product._id}>${product.msrp}</td>\r\n                            <td data-pid={product._id}>{product.category}</td>\r\n                            <td data-pid={product._id}>{product.notes}</td>\r\n                            {props.buttons?<td><button onClick={() => handleAdd(product)}>✔️</button></td> : null}\r\n\r\n                        </tr>\r\n                        )   \r\n                        }})}\r\n                    \r\n                    </tbody>\r\n                </table>\r\n        </div>\r\n    )\r\n}","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\utils\\orderDate.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\utils\\remodeledData.js",["208"],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Orders\\OrderModal.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Reporting\\OrderDetails.js",["209"],"import { useQuery } from \"@apollo/client\"\r\nimport { QUERY_ORDER_DETAILS } from \"../../utils/queries\"\r\nimport { Table } from \"../Table\"\r\n\r\nexport const OrderDetails = ({orderNumber,enterpriseId})=>{\r\n\r\n  const variables = {enterpriseId,orderNumber:parseInt(orderNumber)}\r\n\r\n    const {data,loading,error} = useQuery(QUERY_ORDER_DETAILS,{variables})\r\n    const input = data?.orderDetails\r\n    \r\n    if(loading){\r\n        return (\"Loading...\")\r\n    }\r\n    return (\r\n        <Table data={input}  excludedProperties={[\"__typename\",\"totalSales\",\"salePerUnit\",\"binLocation\"]}/>\r\n    )\r\n}","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Orders\\OrderList.js",["210"],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Reporting\\ProductDetails.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\utils\\translation\\translator.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\utils\\translation\\translationLibrary.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Table\\index.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\themes.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Reporting\\MonthlyAnalysis.js",["211","212"],"import { useQuery } from \"@apollo/client\"\r\nimport { useState } from \"react\"\r\nimport { GET_MONTH_TO_MONTH } from \"../../utils/queries\"\r\n\r\nexport const MonthlyAnalysis = ({enterpriseId})=>{\r\n    const [sales,setSales] = useState(true)\r\n    const {data,loading,error}=useQuery(GET_MONTH_TO_MONTH,{variables:{enterpriseId,sales}})\r\n    if(loading){\r\n        return(\r\n            <div>Loading...</div>\r\n        )\r\n    }\r\n    console.log(data)\r\n    return(\r\n        <div>\r\n            Monthly Analysis\r\n        </div>\r\n    )\r\n}","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Users\\Settings.js",[],{"ruleId":"213","severity":1,"message":"214","line":8,"column":3,"nodeType":"215","messageId":"216","endLine":8,"endColumn":17},{"ruleId":"213","severity":1,"message":"217","line":18,"column":25,"nodeType":"215","messageId":"216","endLine":18,"endColumn":30},{"ruleId":"213","severity":1,"message":"218","line":18,"column":32,"nodeType":"215","messageId":"216","endLine":18,"endColumn":36},{"ruleId":"213","severity":1,"message":"218","line":33,"column":19,"nodeType":"215","messageId":"216","endLine":33,"endColumn":23},{"ruleId":"213","severity":1,"message":"219","line":2,"column":10,"nodeType":"215","messageId":"216","endLine":2,"endColumn":18},{"ruleId":"213","severity":1,"message":"220","line":3,"column":17,"nodeType":"215","messageId":"216","endLine":3,"endColumn":23},{"ruleId":"213","severity":1,"message":"221","line":4,"column":8,"nodeType":"215","messageId":"216","endLine":4,"endColumn":12},{"ruleId":"213","severity":1,"message":"217","line":11,"column":24,"nodeType":"215","messageId":"216","endLine":11,"endColumn":29},{"ruleId":"213","severity":1,"message":"218","line":16,"column":15,"nodeType":"215","messageId":"216","endLine":16,"endColumn":19},{"ruleId":"213","severity":1,"message":"219","line":5,"column":10,"nodeType":"215","messageId":"216","endLine":5,"endColumn":18},{"ruleId":"213","severity":1,"message":"222","line":6,"column":10,"nodeType":"215","messageId":"216","endLine":6,"endColumn":30},{"ruleId":"213","severity":1,"message":"221","line":7,"column":8,"nodeType":"215","messageId":"216","endLine":7,"endColumn":12},{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","replacedBy":"226"},{"ruleId":"213","severity":1,"message":"218","line":22,"column":33,"nodeType":"215","messageId":"216","endLine":22,"endColumn":37},{"ruleId":"213","severity":1,"message":"218","line":39,"column":21,"nodeType":"215","messageId":"216","endLine":39,"endColumn":25},{"ruleId":"213","severity":1,"message":"227","line":2,"column":20,"nodeType":"215","messageId":"216","endLine":2,"endColumn":29},{"ruleId":"213","severity":1,"message":"217","line":19,"column":24,"nodeType":"215","messageId":"216","endLine":19,"endColumn":29},{"ruleId":"213","severity":1,"message":"228","line":59,"column":12,"nodeType":"215","messageId":"216","endLine":59,"endColumn":24},{"ruleId":"213","severity":1,"message":"229","line":59,"column":26,"nodeType":"215","messageId":"216","endLine":59,"endColumn":41},{"ruleId":"213","severity":1,"message":"217","line":11,"column":27,"nodeType":"215","messageId":"216","endLine":11,"endColumn":32},{"ruleId":"213","severity":1,"message":"230","line":28,"column":15,"nodeType":"215","messageId":"216","endLine":28,"endColumn":20},{"ruleId":"213","severity":1,"message":"231","line":1,"column":23,"nodeType":"215","messageId":"216","endLine":1,"endColumn":27},{"ruleId":"213","severity":1,"message":"232","line":2,"column":10,"nodeType":"215","messageId":"216","endLine":2,"endColumn":21},{"ruleId":"213","severity":1,"message":"233","line":8,"column":10,"nodeType":"215","messageId":"216","endLine":8,"endColumn":11},{"ruleId":"213","severity":1,"message":"217","line":12,"column":26,"nodeType":"215","messageId":"216","endLine":12,"endColumn":31},{"ruleId":"213","severity":1,"message":"230","line":26,"column":15,"nodeType":"215","messageId":"216","endLine":26,"endColumn":20},{"ruleId":"213","severity":1,"message":"217","line":20,"column":25,"nodeType":"215","messageId":"216","endLine":20,"endColumn":30},{"ruleId":"213","severity":1,"message":"234","line":3,"column":31,"nodeType":"215","messageId":"216","endLine":3,"endColumn":47},{"ruleId":"213","severity":1,"message":"217","line":10,"column":26,"nodeType":"215","messageId":"216","endLine":10,"endColumn":31},{"ruleId":"235","severity":1,"message":"236","line":52,"column":62,"nodeType":"237","messageId":"238","endLine":52,"endColumn":64},{"ruleId":"239","severity":1,"message":"240","line":5,"column":47,"nodeType":"241","messageId":"242","endLine":5,"endColumn":49},{"ruleId":"213","severity":1,"message":"217","line":9,"column":25,"nodeType":"215","messageId":"216","endLine":9,"endColumn":30},{"ruleId":"213","severity":1,"message":"217","line":10,"column":29,"nodeType":"215","messageId":"216","endLine":10,"endColumn":34},{"ruleId":"213","severity":1,"message":"243","line":6,"column":18,"nodeType":"215","messageId":"216","endLine":6,"endColumn":26},{"ruleId":"213","severity":1,"message":"217","line":7,"column":25,"nodeType":"215","messageId":"216","endLine":7,"endColumn":30},"no-unused-vars","'GET_OPEN_SALES' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'data' is assigned a value but never used.","'useQuery' is defined but never used.","'useRef' is defined but never used.","'auth' is defined but never used.","'GET_ENTERPRISE_BY_ID' is defined but never used.","no-native-reassign",["244"],"no-negated-in-lhs",["245"],"'useEffect' is defined but never used.","'updatedTable' is assigned a value but never used.","'setUpdatedTable' is assigned a value but never used.","'index' is assigned a value but never used.","'from' is defined but never used.","'groupOrders' is defined but never used.","'t' is defined but never used.","'PRODUCT_ANALYSIS' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setSales' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
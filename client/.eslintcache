[{"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\index.js":"1","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\reportWebVitals.js":"2","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\App.js":"3","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\themes.js":"4","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\utils\\auth.js":"5","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\pages\\Home.js":"6","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Users\\AcceptInvite.js":"7","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Users\\Login.js":"8","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Users\\Signup.js":"9","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\utils\\queries.js":"10","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Users\\UserDashboard.js":"11","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Users\\AddUser.js":"12","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Users\\Settings.js":"13","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Users\\Roster.js":"14","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Layout\\Dashboard.js":"15","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Layout\\Navbar.js":"16","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Layout\\Header.js":"17","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Products\\ProductDashboard.js":"18","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Products\\ProductGuide.js":"19","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Orders\\OrderFulfillment.js":"20","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Orders\\OrderPurchase.js":"21","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Orders\\OrderDashboard.js":"22","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Orders\\OrderReceived.js":"23","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Orders\\OrderGuide.js":"24","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Orders\\OrderHistory.js":"25","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Reporting\\ReportingDashboard.js":"26","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Reporting\\MonthlyAnalysis.js":"27","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Orders\\OrderSell.js":"28","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Products\\AddProduct.js":"29","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Reporting\\ProductReport.js":"30","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\utils\\mutations.js":"31","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\utils\\orderDate.js":"32","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\utils\\remodeledData.js":"33","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Products\\ProductList.js":"34","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Reporting\\OrderDetails.js":"35","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Orders\\OrderModal.js":"36","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Orders\\OrderList.js":"37","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Reporting\\ProductDetails.js":"38","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\utils\\translation\\translator.js":"39","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\utils\\translation\\translationLibrary.js":"40","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Table\\index.js":"41"},{"size":500,"mtime":1653612002944,"results":"42","hashOfConfig":"43"},{"size":389,"mtime":1653612002961,"results":"44","hashOfConfig":"43"},{"size":2328,"mtime":1655699553321,"results":"45","hashOfConfig":"43"},{"size":402,"mtime":1655698601674,"results":"46","hashOfConfig":"43"},{"size":1044,"mtime":1654473804542,"results":"47","hashOfConfig":"43"},{"size":6959,"mtime":1655773104174,"results":"48","hashOfConfig":"43"},{"size":1630,"mtime":1655484233057,"results":"49","hashOfConfig":"43"},{"size":3333,"mtime":1655484233061,"results":"50","hashOfConfig":"43"},{"size":4917,"mtime":1655484233066,"results":"51","hashOfConfig":"43"},{"size":5122,"mtime":1655773414081,"results":"52","hashOfConfig":"43"},{"size":1412,"mtime":1655770189772,"results":"53","hashOfConfig":"43"},{"size":1062,"mtime":1655484233059,"results":"54","hashOfConfig":"43"},{"size":352,"mtime":1655699091996,"results":"55","hashOfConfig":"43"},{"size":1261,"mtime":1655484233063,"results":"56","hashOfConfig":"43"},{"size":2650,"mtime":1655484233035,"results":"57","hashOfConfig":"43"},{"size":1140,"mtime":1655484233040,"results":"58","hashOfConfig":"43"},{"size":709,"mtime":1655484233037,"results":"59","hashOfConfig":"43"},{"size":1024,"mtime":1654032546875,"results":"60","hashOfConfig":"43"},{"size":429,"mtime":1654473804494,"results":"61","hashOfConfig":"43"},{"size":2580,"mtime":1655765625091,"results":"62","hashOfConfig":"43"},{"size":5802,"mtime":1655772624364,"results":"63","hashOfConfig":"43"},{"size":2805,"mtime":1655484233042,"results":"64","hashOfConfig":"43"},{"size":3282,"mtime":1655765041858,"results":"65","hashOfConfig":"43"},{"size":1189,"mtime":1654473804464,"results":"66","hashOfConfig":"43"},{"size":125,"mtime":1654016344598,"results":"67","hashOfConfig":"43"},{"size":1475,"mtime":1655738611066,"results":"68","hashOfConfig":"43"},{"size":521,"mtime":1655739206246,"results":"69","hashOfConfig":"43"},{"size":5071,"mtime":1655773760507,"results":"70","hashOfConfig":"43"},{"size":3119,"mtime":1654473804488,"results":"71","hashOfConfig":"43"},{"size":1626,"mtime":1655484233055,"results":"72","hashOfConfig":"43"},{"size":5548,"mtime":1655599454817,"results":"73","hashOfConfig":"43"},{"size":352,"mtime":1655764452481,"results":"74","hashOfConfig":"43"},{"size":9871,"mtime":1655484233070,"results":"75","hashOfConfig":"43"},{"size":2534,"mtime":1654473804499,"results":"76","hashOfConfig":"43"},{"size":563,"mtime":1655599432448,"results":"77","hashOfConfig":"43"},{"size":917,"mtime":1654473804471,"results":"78","hashOfConfig":"43"},{"size":2181,"mtime":1655741538560,"results":"79","hashOfConfig":"43"},{"size":1118,"mtime":1655769831414,"results":"80","hashOfConfig":"43"},{"size":197,"mtime":1655743618429,"results":"81","hashOfConfig":"43"},{"size":659,"mtime":1655770060361,"results":"82","hashOfConfig":"43"},{"size":1297,"mtime":1655599432457,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"i40bl9",{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"114"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"114"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"114"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"114"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"114"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"114"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"114"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"114"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"114"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\index.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\reportWebVitals.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\App.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\themes.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\utils\\auth.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\pages\\Home.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Users\\AcceptInvite.js",["176","177","178"],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Users\\Login.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Users\\Signup.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\utils\\queries.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Users\\UserDashboard.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Users\\AddUser.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Users\\Settings.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Users\\Roster.js",["179","180","181","182","183"],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Layout\\Dashboard.js",[],["184","185"],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Layout\\Navbar.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Layout\\Header.js",["186","187","188"],"\n// Imports custom css file and requires all dependant files\nimport './Header.css'\nimport React from 'react'\nimport { useQuery } from '@apollo/client';\nimport { GET_ENTERPRISE_BY_ID } from '../../utils/queries'\nimport auth from '../../utils/auth'\n\n// Export function to display header of application with welcome enterprise and user. Displays application logo and name as well.\nexport default function Header(props) {\n  return (\n    <header>\n      <div className='header-enterprise'>\n        <h1>{props.enterprise}</h1>\n        <p>Welcome, {props.user}.</p>\n      </div>\n      <div className='header-logo'>\n        <img src='/images/icons/iplus.png' alt=\"Inventory+ Logo\" />\n      </div>\n    </header>\n  )\n}\n\n","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Products\\ProductDashboard.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Products\\ProductGuide.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Orders\\OrderFulfillment.js",["189","190"],"// Imports custom css file and requires all dependant files\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { GET_OPEN_SALES } from \"../../utils/queries\";\nimport { groupSales } from \"../../utils/remodeledData\";\nimport orderDate from \"../../utils/orderDate\";\nimport { FULFILL_ITEMS } from \"../../utils/mutations\";\nimport { useState } from \"react\";\n\nexport default function OrderFulfillment({ enterpriseId }) {\n\n    const [fulfillSale, { error }] = useMutation(FULFILL_ITEMS)\n    const [date, setDate] = useState( orderDate())\n\n    const { loading: openSaleItemsLoading, data: openSaleItemsData, refetch } = useQuery(GET_OPEN_SALES, {\n        variables: { enterpriseId: enterpriseId }\n    })\n    if (openSaleItemsData) {\n        refetch()\n    }\n\n    const handleDateChange = (e)=>{\n        console.log(e)\n        setDate(e.target.value)\n    }\n\n    const openSalesGroup = openSaleItemsLoading ? [] : groupSales(openSaleItemsData.getOpenSales)\n    const handleFulfill = (e) => {\n        const index = e.target.dataset.index;\n        const variables = {\n            enterpriseId: enterpriseId,\n            saleNumber: parseInt(e.target.dataset.orderNumber),\n            fulfillmentDate: date,\n        }\n        fulfillSale({ variables })\n        refetch()\n\n    }\n\n    return (\n        <div className=\"big-center-flex\">\n            <h1>Fulfill Sale</h1>\n            <input onChange={handleDateChange} type=\"date\"/>\n\n            {openSaleItemsLoading\n                ? <h2>Loading</h2>\n                : <table className=\"product-list-table\"><thead>\n                    <tr>\n                        <th>Sale #</th>\n                        <th>Sale Date</th>\n                        <th>Buyer</th>\n                        <th>Items</th>\n                        <th>Fulfill!</th>\n                    </tr>\n                </thead>\n                    <tbody>\n                        {openSalesGroup.map((order, index) => {\n                            return (<tr key={index} data-order={order.number}>\n                                <td>{order.number}</td>\n                                <td>{orderDate(order.date)}</td>\n                                <td>{order.buyer}</td>\n                                <td>{order.itemList}</td>\n                                <td><button data-order-number={order.number} data-index={index} onClick={handleFulfill}>Receive!</button></td>\n                            </tr>\n                            )\n                        })}\n\n                    </tbody>\n                </table>\n\n\n\n\n\n\n\n\n\n\n\n\n            }\n\n        </div>\n    )\n}","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Orders\\OrderPurchase.js",["191","192","193","194"],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Orders\\OrderDashboard.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Orders\\OrderReceived.js",["195","196","197","198","199"],"import { useQuery,useMutation, from } from \"@apollo/client\"\nimport {GET_INCOMING_ITEMS,GET_OPEN_SALES} from \"../../utils/queries\"; \nimport { groupOrders } from \"../../utils/remodeledData\";\nimport orderDate from \"../../utils/orderDate\";\nimport { RECEIVE_ITEMS } from \"../../utils/mutations\";\nimport \"./orderReceived.css\"\nimport { useState } from \"react\";\nimport { OrderDetails } from \"../Reporting/OrderDetails\";\nimport { t } from \"../../utils/translation/translator\";\n\nexport default function OrderReceived ({enterpriseId}) {\n    \n    const [receiveOrder,{error}] = useMutation(RECEIVE_ITEMS)\n    const [date,setDate] = useState(null)\n    const { loading: incomingItemsLoading, data: incomingItemsData, refetch } = useQuery(GET_INCOMING_ITEMS, {\n        variables: { enterpriseId:enterpriseId}\n    })\n\n    const [orderNumberSelected,setOrderNumberSelected] = useState(false)\n\n    if (incomingItemsData) {\n        refetch()\n    }\n\n    const incomingOrders = incomingItemsLoading?null:groupOrders(incomingItemsData.getOrderedItems)\n    \n    const handleFulfill = (e)=>{\n        console.log(\"this is the date input\",date)\n        refetch()\n        const index = e.target.dataset.index;\n        const binLocation = e.target.parentNode.parentNode.lastElementChild.childNodes[0].value\n        const variables = {\n            enterpriseId:enterpriseId,\n            orderNumber:parseInt(e.target.dataset.orderNumber),\n            receivedDate:date,\n            binLocation\n        }\n        receiveOrder({variables})\n        refetch()\n    }\n\n    const handleSelect = (e)=>{\n        const {order} = e.target.dataset\n        console.log(\"selected\",order)\n        setOrderNumberSelected(order)\n    }\n\n    const handleDateChange = (e)=>{\n        setDate(e.target.value)\n    }\n\n    return (\n        <div className=\"big-center-flex\">\n            <h1>Receive Order</h1>\n            <input type=\"date\" onChange={handleDateChange}></input>\n            {incomingItemsLoading\n        ? <h2>Loading</h2>\n        :  <table  className=\"product-list-table\" id=\"order-received-table\"><thead>\n             <tr>\n                        <th>Order #</th>\n                        <th>Order Date</th>\n                        <th>Seller</th>\n                        <th>Items</th>\n                        <th>Receive!</th>\n                        <th>Bin #</th>\n                    </tr>\n        </thead>\n                <tbody>\n                    {incomingOrders.map((order,index)=>{\n                        return(<tr key={index} onClick={handleSelect} data-order={order.number}>\n                            <td data-order={order.number}>{order.number}</td>\n                            <td>{orderDate(order.date)}</td>\n                            <td>{order.supplier}</td>\n                            <td>{order.itemList}</td>\n                            <td><button data-order-number={order.number} data-index={index} onClick={handleFulfill}>Receive!</button></td>\n                            <td><input type=\"text\"></input></td>\n                        </tr>\n)\n                    })}\n\n                </tbody>\n            </table>\n      }\n      {\n        orderNumberSelected?(<OrderDetails orderNumber={orderNumberSelected} enterpriseId={enterpriseId}/>):null\n      }\n                \n        </div>\n    )\n}","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Orders\\OrderGuide.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Orders\\OrderHistory.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Reporting\\ReportingDashboard.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Reporting\\MonthlyAnalysis.js",["200","201"],"import { useQuery } from \"@apollo/client\"\r\nimport { useState } from \"react\"\r\nimport { GET_MONTH_TO_MONTH } from \"../../utils/queries\"\r\n\r\nexport const MonthlyAnalysis = ({enterpriseId})=>{\r\n    const [sales,setSales] = useState(true)\r\n    const {data,loading,error}=useQuery(GET_MONTH_TO_MONTH,{variables:{enterpriseId,sales}})\r\n    if(loading){\r\n        return(\r\n            <div>Loading...</div>\r\n        )\r\n    }\r\n    console.log(data)\r\n    return(\r\n        <div>\r\n            Monthly Analysis\r\n        </div>\r\n    )\r\n}","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Orders\\OrderSell.js",["202"],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Products\\AddProduct.js",["203","204"],"import './AddProduct.css'\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { ADD_PRODUCT } from '../../utils/mutations'\nimport ProductList from './ProductList';\n\nimport Auth from '../../utils/auth';\n\nexport default function AddProduct (props) {\n    \n    const enterprise = Auth.getProfile().data.enterprise\n    const [ formData, setFormData ] = useState({\n        sku: '',\n        name: '',\n        description: '',\n        msrp: 0,\n        category: '',\n        notes: '',\n    })\n    \n\n    const [addProduct, { error, data }] = useMutation(ADD_PRODUCT)\n\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        setFormData({ ...formData, [name]: value });\n    }\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n\n        const inputData = { ...formData}\n\n        inputData.msrp = parseInt(inputData.msrp)\n\n\n        try {\n            const variables = { ...inputData, enterprise }\n            const { data } = await addProduct({\n                variables\n            })\n        } catch (err) {\n            console.error(err);\n        }\n        setFormData({\n            sku: '',\n            name: '',\n            description: '',\n            msrp: 0,\n            category: '',\n            notes: '',\n        })\n    }\n    return (<>\n    \n\n        {/* <div className=\"table-top apl-top\">\n            <h1>Product Guide</h1>\n        </div> */}\n    <div className='add-product-body'>\n    <div className='form-container'>\n            <form  onSubmit={handleFormSubmit}>\n                <div className='add-product-header'>\n                    <h1>Add Product</h1>\n                </div>\n                <div className='add-product-form'>\n                <label htmlFor='sku'>SKU:<input name='sku' value={formData.sku} type='text' onChange={handleInputChange}/></label>\n                <label htmlFor='name'>Product Name:<input name='name' value={formData.name} type='text' onChange={handleInputChange}/></label>\n                <label htmlFor='description'>Description:<input name='description' value={formData.description} type='text' onChange={handleInputChange}/></label>\n                <label htmlFor='msrp'>MSRP:<input name='msrp' value={formData.msrp} type='number' onChange={handleInputChange}/></label>\n                <label htmlFor='category'>Category:<input name='category' value={formData.category} type='text' onChange={handleInputChange}/></label>\n                <label htmlFor='notes'>Notes:<input name='notes' value={formData.notes} type='text' onChange={handleInputChange}/></label>\n                </div>\n                <input id='add-product-submit' type='submit' value='Submit' />\n                {error && (\n          <div className=\"col-12 my-3 bg-danger text-white p-3\">\n            Something went wrong...\n          </div>\n        )}\n            </form>\n        </div>\n        <div className='add-product-list'>\n        \n        <ProductList\n          products={props.products}\n          productsRefetch={props.productsRefetch}\n        />\n        </div>\n    </div>\n    </>  \n    )\n}","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Reporting\\ProductReport.js",["205"],"import {useQuery} from \"@apollo/client\"\nimport { useState } from \"react\"\nimport { GET_ENTERPRISE_BY_ID,PRODUCT_ANALYSIS } from \"../../utils/queries\"\nimport ProductDetails from \"./ProductDetails\"\nimport './productReport.css'\n\nexport default function ProductReport ({enterpriseId}){\n\n    const{loading: enterpriseLoading,data:enterpriseData} = useQuery(GET_ENTERPRISE_BY_ID,{\n        variables:{id:enterpriseId}\n    })\n    const [productId,setProductId] = useState(false)\n\n    let products;\n    if (!enterpriseLoading){\n        products = enterpriseData.getEnterpriseById.orderGuide;\n    }\n\n    if(enterpriseLoading){\n        return(<h1>Loading...</h1>)\n    }\n\n    const handleProductClick = (e)=>{\n        const productId = e.target.value\n        setProductId(productId)\n    }\n\n    return(\n\n        <div className=\"analysis-main\">\n\n        <div className=\"card analysis-header\">\n\n        <div>\n        <div className=\"table-top product-report\">\n            <h1>Product Report</h1>\n        </div>\n            </div>\n            </div>\n        <div className=\"card product-report-container\">\n\n            <h3>Products</h3>\n            <select defaultValue=\"Choose a Product\" placeholder=\"Choose a product\"  onChange={handleProductClick}>\n            <option selected value=\"\">Select a Product</option>\n            {products.map((product,index)=>{\n                return(<option data-product-id={product._id} value={product._id} >{product.name}</option>)\n            })}\n            </select>\n        </div>\n            {productId?<ProductDetails enterpriseId={enterpriseId} productId={productId}/>:null}\n        </div>\n\n    )\n\n\n}","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\utils\\mutations.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\utils\\orderDate.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\utils\\remodeledData.js",["206"],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Products\\ProductList.js",["207","208"],"import './ProductList.css'\nimport React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { ADD_TO_ORDERGUIDE } from '../../utils/mutations'\n\nexport default function ProductList (props) {\n    if(props.products) {\n        props.productsRefetch()\n    }\n    const [addProduct, { error }] = useMutation(ADD_TO_ORDERGUIDE)\n    const checkIfInList = (product,list)=>{\n        const match = list.filter(li=>{\n            return li._id===product._id\n        })\n        if (match.length!==0){\n            return true\n        }\n        else{\n            return false\n        }\n    }\n    const handleAdd = async (product) => {\n        let newList = [...props.orderGuide, product]\n        \n        props.setGuideState(newList)\n        try {\n            await addProduct({\n                variables: { enterpriseId: props.enterpriseId, productId: product._id }\n            })\n        } catch (err) {\n            console.error(err);\n        }  \n\n    }\n\n    return (\n        <div>\n            <table className='order-table'>\n                <thead>\n                    <tr className='order-header'>\n                        <th>SKU</th>\n                        <th>Name</th>\n                        <th>Description</th>\n                        <th>MSRP</th>\n                        <th>Category</th>\n                        <th>Notes</th>\n                        {props.buttons?<th>Add</th> : null}\n\n                    </tr>\n                </thead>\n                    <tbody>\n                        {props.products.map((product, index) => {\n                        const check = checkIfInList(product, (props?.orderGuide||[]))\n                        if(!check) {\n                         return (\n                        <tr data-pid={product._id} key={index} >\n                            <td data-pid={product._id}>{product.sku}</td>\n                            <td data-pid={product._id}>{product.name}</td>\n                            <td data-pid={product._id}>{product.description}</td>\n                            <td data-pid={product._id}>${product.msrp}</td>\n                            <td data-pid={product._id}>{product.category}</td>\n                            <td data-pid={product._id}>{product.notes}</td>\n                            {props.buttons?<td><button onClick={() => handleAdd(product)}>✔️</button></td> : null}\n\n                        </tr>\n                        )   \n                        }})}\n                    \n                    </tbody>\n                </table>\n        </div>\n    )\n}","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Reporting\\OrderDetails.js",["209"],"import { useQuery } from \"@apollo/client\"\nimport { QUERY_ORDER_DETAILS } from \"../../utils/queries\"\nimport { Table } from \"../Table\"\n\nexport const OrderDetails = ({orderNumber,enterpriseId})=>{\n\n  const variables = {enterpriseId,orderNumber:parseInt(orderNumber)}\n\n    const {data,loading,error} = useQuery(QUERY_ORDER_DETAILS,{variables})\n    const input = data?.orderDetails\n    \n    if(loading){\n        return (\"Loading...\")\n    }\n    return (\n        <Table data={input}  excludedProperties={[\"__typename\",\"totalSales\",\"salePerUnit\",\"binLocation\"]}/>\n    )\n}","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Orders\\OrderModal.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Orders\\OrderList.js",["210"],"import './OrderList.css'\nimport React from 'react'\nimport { useMutation } from '@apollo/client'\nimport { REMOVE_FROM_ORDERGUIDE } from '../../utils/mutations'\n\nexport default function OrderList (props) {\n    if(props.orderGuide) {\n        props.enterpriseRefetch()\n    }\n    const [removeProduct, { error }] = useMutation(REMOVE_FROM_ORDERGUIDE)\n    const handleRemove = async (pid) => {\n        const newList = props.orderGuide.filter((product) => {\n            return product._id !== pid\n        })\n        props.setGuideState(newList)\n        try {\n            await removeProduct({\n                variables: { enterpriseId: props.enterpriseId, productId: pid }\n            })\n        } catch (err) {\n            console.error(err);\n        }\n    }\n    return (\n        <div>\n            <table className='order-list-table'>\n                <thead>\n                    <tr>\n                        <th>SKU</th>\n                        <th>Name</th>\n                        <th>Description</th>\n                        <th>MSRP</th>\n                        <th>Category</th>\n                        <th>Notes</th>\n                        {props.buttons?<th>Rem</th> : null}\n                    </tr>\n                </thead>\n                    <tbody>\n                    {props.orderGuide.map((product, index) => {\n                        return (\n                        <tr data-pid={product._id} key={index}>\n                            <td data-pid={product._id}>{product.sku}</td>\n                            <td data-pid={product._id}>{product.name}</td>\n                            <td data-pid={product._id}>{product.description}</td>\n                            <td data-pid={product._id}>${product.msrp}</td>\n                            <td data-pid={product._id}>{product.category}</td>\n                            <td data-pid={product._id}>{product.notes}</td>\n                            {props.buttons?<td><button onClick={() => handleRemove(product._id)} data-pid={product._id}>❌</button></td> : null}\n                        </tr>\n                        )\n                    })}\n                    </tbody>\n                </table>\n        </div>\n    )\n}","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Reporting\\ProductDetails.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\utils\\translation\\translator.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\utils\\translation\\translationLibrary.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Table\\index.js",[],{"ruleId":"211","severity":1,"message":"212","line":18,"column":25,"nodeType":"213","messageId":"214","endLine":18,"endColumn":30},{"ruleId":"211","severity":1,"message":"215","line":18,"column":32,"nodeType":"213","messageId":"214","endLine":18,"endColumn":36},{"ruleId":"211","severity":1,"message":"215","line":33,"column":19,"nodeType":"213","messageId":"214","endLine":33,"endColumn":23},{"ruleId":"211","severity":1,"message":"216","line":2,"column":10,"nodeType":"213","messageId":"214","endLine":2,"endColumn":18},{"ruleId":"211","severity":1,"message":"217","line":3,"column":17,"nodeType":"213","messageId":"214","endLine":3,"endColumn":23},{"ruleId":"211","severity":1,"message":"218","line":4,"column":8,"nodeType":"213","messageId":"214","endLine":4,"endColumn":12},{"ruleId":"211","severity":1,"message":"212","line":11,"column":24,"nodeType":"213","messageId":"214","endLine":11,"endColumn":29},{"ruleId":"211","severity":1,"message":"215","line":16,"column":15,"nodeType":"213","messageId":"214","endLine":16,"endColumn":19},{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","replacedBy":"222"},{"ruleId":"211","severity":1,"message":"216","line":5,"column":10,"nodeType":"213","messageId":"214","endLine":5,"endColumn":18},{"ruleId":"211","severity":1,"message":"223","line":6,"column":10,"nodeType":"213","messageId":"214","endLine":6,"endColumn":30},{"ruleId":"211","severity":1,"message":"218","line":7,"column":8,"nodeType":"213","messageId":"214","endLine":7,"endColumn":12},{"ruleId":"211","severity":1,"message":"212","line":11,"column":27,"nodeType":"213","messageId":"214","endLine":11,"endColumn":32},{"ruleId":"211","severity":1,"message":"224","line":28,"column":15,"nodeType":"213","messageId":"214","endLine":28,"endColumn":20},{"ruleId":"211","severity":1,"message":"225","line":2,"column":20,"nodeType":"213","messageId":"214","endLine":2,"endColumn":29},{"ruleId":"211","severity":1,"message":"212","line":19,"column":24,"nodeType":"213","messageId":"214","endLine":19,"endColumn":29},{"ruleId":"211","severity":1,"message":"226","line":59,"column":12,"nodeType":"213","messageId":"214","endLine":59,"endColumn":24},{"ruleId":"211","severity":1,"message":"227","line":59,"column":26,"nodeType":"213","messageId":"214","endLine":59,"endColumn":41},{"ruleId":"211","severity":1,"message":"228","line":1,"column":32,"nodeType":"213","messageId":"214","endLine":1,"endColumn":36},{"ruleId":"211","severity":1,"message":"229","line":2,"column":28,"nodeType":"213","messageId":"214","endLine":2,"endColumn":42},{"ruleId":"211","severity":1,"message":"230","line":9,"column":10,"nodeType":"213","messageId":"214","endLine":9,"endColumn":11},{"ruleId":"211","severity":1,"message":"212","line":13,"column":26,"nodeType":"213","messageId":"214","endLine":13,"endColumn":31},{"ruleId":"211","severity":1,"message":"224","line":30,"column":15,"nodeType":"213","messageId":"214","endLine":30,"endColumn":20},{"ruleId":"211","severity":1,"message":"231","line":6,"column":18,"nodeType":"213","messageId":"214","endLine":6,"endColumn":26},{"ruleId":"211","severity":1,"message":"212","line":7,"column":25,"nodeType":"213","messageId":"214","endLine":7,"endColumn":30},{"ruleId":"211","severity":1,"message":"212","line":20,"column":25,"nodeType":"213","messageId":"214","endLine":20,"endColumn":30},{"ruleId":"211","severity":1,"message":"215","line":22,"column":33,"nodeType":"213","messageId":"214","endLine":22,"endColumn":37},{"ruleId":"211","severity":1,"message":"215","line":39,"column":21,"nodeType":"213","messageId":"214","endLine":39,"endColumn":25},{"ruleId":"211","severity":1,"message":"232","line":3,"column":31,"nodeType":"213","messageId":"214","endLine":3,"endColumn":47},{"ruleId":"233","severity":1,"message":"234","line":5,"column":47,"nodeType":"235","messageId":"236","endLine":5,"endColumn":49},{"ruleId":"211","severity":1,"message":"212","line":10,"column":26,"nodeType":"213","messageId":"214","endLine":10,"endColumn":31},{"ruleId":"237","severity":1,"message":"238","line":52,"column":62,"nodeType":"239","messageId":"240","endLine":52,"endColumn":64},{"ruleId":"211","severity":1,"message":"212","line":9,"column":25,"nodeType":"213","messageId":"214","endLine":9,"endColumn":30},{"ruleId":"211","severity":1,"message":"212","line":10,"column":29,"nodeType":"213","messageId":"214","endLine":10,"endColumn":34},"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'useQuery' is defined but never used.","'useRef' is defined but never used.","'auth' is defined but never used.","no-native-reassign",["241"],"no-negated-in-lhs",["242"],"'GET_ENTERPRISE_BY_ID' is defined but never used.","'index' is assigned a value but never used.","'useEffect' is defined but never used.","'updatedTable' is assigned a value but never used.","'setUpdatedTable' is assigned a value but never used.","'from' is defined but never used.","'GET_OPEN_SALES' is defined but never used.","'t' is defined but never used.","'setSales' is assigned a value but never used.","'PRODUCT_ANALYSIS' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]
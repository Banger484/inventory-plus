[{"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\index.js":"1","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\App.js":"2","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\reportWebVitals.js":"3","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\pages\\Home.js":"4","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\utils\\auth.js":"5","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Users\\AcceptInvite.js":"6","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Users\\Login.js":"7","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\utils\\queries.js":"8","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Users\\AddUser.js":"9","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Users\\Roster.js":"10","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Users\\UserDashboard.js":"11","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Users\\Signup.js":"12","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Layout\\Dashboard.js":"13","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Layout\\Header.js":"14","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Layout\\Navbar.js":"15","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Products\\ProductDashboard.js":"16","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Products\\AddProduct.js":"17","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Products\\ProductGuide.js":"18","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Orders\\OrderHistory.js":"19","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Orders\\OrderDashboard.js":"20","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Orders\\OrderSell.js":"21","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Orders\\OrderFulfillment.js":"22","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Orders\\OrderReceived.js":"23","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Reporting\\ProductReport.js":"24","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Orders\\OrderPurchase.js":"25","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Orders\\OrderGuide.js":"26","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Reporting\\ReportingDashboard.js":"27","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\utils\\mutations.js":"28","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Products\\ProductList.js":"29","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\utils\\remodeledData.js":"30","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Orders\\OrderModal.js":"31","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\utils\\orderDate.js":"32","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Orders\\OrderList.js":"33","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Reporting\\ProductDetails.js":"34"},{"size":517,"mtime":1653661048937,"results":"35","hashOfConfig":"36"},{"size":2153,"mtime":1654269407001,"results":"37","hashOfConfig":"36"},{"size":403,"mtime":1653571434321,"results":"38","hashOfConfig":"36"},{"size":6558,"mtime":1654268338442,"results":"39","hashOfConfig":"36"},{"size":1080,"mtime":1654265438699,"results":"40","hashOfConfig":"36"},{"size":1612,"mtime":1654265438696,"results":"41","hashOfConfig":"36"},{"size":2600,"mtime":1654028915934,"results":"42","hashOfConfig":"36"},{"size":4893,"mtime":1654265438700,"results":"43","hashOfConfig":"36"},{"size":1207,"mtime":1654265438697,"results":"44","hashOfConfig":"36"},{"size":1063,"mtime":1654265438698,"results":"45","hashOfConfig":"36"},{"size":1038,"mtime":1654265434192,"results":"46","hashOfConfig":"36"},{"size":3518,"mtime":1654028915934,"results":"47","hashOfConfig":"36"},{"size":2572,"mtime":1654101678615,"results":"48","hashOfConfig":"36"},{"size":593,"mtime":1654103059194,"results":"49","hashOfConfig":"36"},{"size":934,"mtime":1654265438692,"results":"50","hashOfConfig":"36"},{"size":1052,"mtime":1654101678621,"results":"51","hashOfConfig":"36"},{"size":3084,"mtime":1654267972272,"results":"52","hashOfConfig":"36"},{"size":425,"mtime":1654267919898,"results":"53","hashOfConfig":"36"},{"size":131,"mtime":1654010055905,"results":"54","hashOfConfig":"36"},{"size":2730,"mtime":1654180303611,"results":"55","hashOfConfig":"36"},{"size":4787,"mtime":1654265438713,"results":"56","hashOfConfig":"36"},{"size":2260,"mtime":1654265438693,"results":"57","hashOfConfig":"36"},{"size":2764,"mtime":1654265514788,"results":"58","hashOfConfig":"36"},{"size":1385,"mtime":1654265438695,"results":"59","hashOfConfig":"36"},{"size":5315,"mtime":1654265438718,"results":"60","hashOfConfig":"36"},{"size":1172,"mtime":1654267007828,"results":"61","hashOfConfig":"36"},{"size":1493,"mtime":1654265438696,"results":"62","hashOfConfig":"36"},{"size":5999,"mtime":1654183309061,"results":"63","hashOfConfig":"36"},{"size":2588,"mtime":1654267181676,"results":"64","hashOfConfig":"36"},{"size":10484,"mtime":1654265438700,"results":"65","hashOfConfig":"36"},{"size":838,"mtime":1654265434185,"results":"66","hashOfConfig":"36"},{"size":319,"mtime":1654265438699,"results":"67","hashOfConfig":"36"},{"size":2239,"mtime":1654267323228,"results":"68","hashOfConfig":"36"},{"size":1047,"mtime":1654265438695,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2ca0hw",{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"78"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"78"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"78"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"78"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"78"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\index.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\App.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\reportWebVitals.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\pages\\Home.js",[],["151","152"],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\utils\\auth.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Users\\AcceptInvite.js",["153","154","155"],"import './AcceptInvite.css'\r\nimport React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER_TO_EXISTING } from '../../utils/mutations';\r\n\r\nexport default function AcceptInvite () {\r\n\r\n    const path = window.location.pathname.split(\"/\")\r\n\r\n    let enterprise = path[path.length - 2]\r\n\r\n    const [formState, setFormState] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n      });\r\n      const [addUser, { error, data }] = useMutation(ADD_USER_TO_EXISTING);\r\n      \r\n      const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n    \r\n        setFormState({\r\n          ...formState,\r\n          [name]: value,\r\n        });\r\n      };\r\n\r\n      const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n    \r\n        try {\r\n          console.log('test timing');\r\n          const { data } = await addUser({\r\n            variables: { ...formState, enterprise},\r\n          });\r\n        } catch (e) {\r\n          console.error(e);\r\n        }\r\n      };\r\n    return (\r\n        <div className=\"accept-invite-body\">\r\n        <h1>Complete Registration</h1>\r\n\r\n        <form onSubmit={handleFormSubmit}>\r\n            <input onChange={handleChange} name=\"name\" type=\"text\" placeholder=\"username\"/>\r\n            <input onChange={handleChange} name=\"email\" type=\"email\" placeholder=\"email\"/>\r\n            <input onChange={handleChange} name=\"password\" type=\"password\" placeholder=\"password\"/>\r\n            \r\n            <button type=\"submit\">Submit Registration</button>\r\n        </form>\r\n        </div>\r\n    )\r\n}","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Users\\Login.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\utils\\queries.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Users\\AddUser.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Users\\Roster.js",["156","157","158","159","160"],"import { useQuery,useMutation } from '@apollo/client';\r\nimport React, { useRef,useState } from 'react';\r\nimport auth from '../../utils/auth'\r\nimport \"./Roster.css\"\r\n\r\nimport { REMOVE_USER } from '../../utils/mutations';\r\n\r\nexport default function Roster ({roster}) {\r\n\r\n    const [userList,setUserList] = useState(roster)\r\n    const [removeUser,{error}] = useMutation(REMOVE_USER)\r\n\r\n    const handleRemoveUser = async (id)=>{\r\n        try{\r\n            console.log(\"in function\")\r\n            const {data} = await removeUser({\r\n                variables:{userId:id}\r\n            })\r\n            const newList = userList.filter(user=>{\r\n                return user._id!==id\r\n            });\r\n            setUserList(newList)\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Employee Roster</h1>\r\n            {userList.map((u,i)=>{\r\n                return(<div key={i}><h2>{u.name}</h2><button onClick={()=>handleRemoveUser(u._id)}>Remove</button></div>)\r\n            })}\r\n        </div>\r\n    )\r\n}","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Users\\UserDashboard.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Users\\Signup.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Layout\\Dashboard.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Layout\\Header.js",["161","162","163"],"import './Header.css'\r\nimport React from 'react'\r\nimport { useQuery } from '@apollo/client';\r\nimport { GET_ENTERPRISE_BY_ID} from '../../utils/queries'\r\nimport auth from '../../utils/auth'\r\n\r\n\r\n\r\n\r\nexport default function Header (props) {\r\n\r\n    \r\n\r\n    return (\r\n        <header>\r\n          <div className='header-enterprise'>\r\n            <h1>{ props.enterprise }</h1>\r\n            <p>Welcome, {props.user}.</p>\r\n          </div>\r\n          <div className='header-logo'>\r\n            <img src='/images/icons/iplus.png' alt=\"Inventory+ Logo\" />\r\n          </div> \r\n        </header>\r\n    )\r\n}","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Layout\\Navbar.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Products\\ProductDashboard.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Products\\AddProduct.js",["164","165"],"import './AddProduct.css'\r\nimport React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_PRODUCT } from '../../utils/mutations'\r\nimport ProductList from './ProductList';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nexport default function AddProduct (props) {\r\n    \r\n    const enterprise = Auth.getProfile().data.enterprise\r\n    const [ formData, setFormData ] = useState({\r\n        sku: '',\r\n        name: '',\r\n        description: '',\r\n        msrp: 0,\r\n        category: '',\r\n        notes: '',\r\n    })\r\n    \r\n\r\n    const [addProduct, { error, data }] = useMutation(ADD_PRODUCT)\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setFormData({ ...formData, [name]: value });\r\n    }\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const inputData = { ...formData}\r\n\r\n        inputData.msrp = parseInt(inputData.msrp)\r\n\r\n\r\n        try {\r\n            const variables = { ...inputData, enterprise }\r\n            const { data } = await addProduct({\r\n                variables\r\n            })\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n        setFormData({\r\n            sku: '',\r\n            name: '',\r\n            description: '',\r\n            msrp: 0,\r\n            category: '',\r\n            notes: '',\r\n        })\r\n    }\r\n    return (\r\n    <div className='add-product-body'>\r\n    <div className='form-container'>\r\n            <form  onSubmit={handleFormSubmit}>\r\n                <div className='add-product-header'>\r\n                    <h1>Add Product</h1>\r\n                </div>\r\n                <div className='add-product-form'>\r\n                <label htmlFor='sku'>SKU:<input name='sku' value={formData.sku} type='text' onChange={handleInputChange}/></label>\r\n                <label htmlFor='name'>Product Name:<input name='name' value={formData.name} type='text' onChange={handleInputChange}/></label>\r\n                <label htmlFor='description'>Description:<input name='description' value={formData.description} type='text' onChange={handleInputChange}/></label>\r\n                <label htmlFor='msrp'>MSRP:<input name='msrp' value={formData.msrp} type='number' onChange={handleInputChange}/></label>\r\n                <label htmlFor='category'>Category:<input name='category' value={formData.category} type='text' onChange={handleInputChange}/></label>\r\n                <label htmlFor='notes'>Notes:<input name='notes' value={formData.notes} type='text' onChange={handleInputChange}/></label>\r\n                </div>\r\n                <input id='add-product-submit' type='submit' value='Submit' />\r\n                {error && (\r\n          <div className=\"col-12 my-3 bg-danger text-white p-3\">\r\n            Something went wrong...\r\n          </div>\r\n        )}\r\n            </form>\r\n        </div>\r\n        <div className='add-product-list'>\r\n        <ProductList\r\n          products={props.products}\r\n          productsRefetch={props.productsRefetch}\r\n        />\r\n        </div>\r\n    </div>\r\n        \r\n    )\r\n}","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Products\\ProductGuide.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Orders\\OrderHistory.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Orders\\OrderDashboard.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Orders\\OrderSell.js",["166"],"import { useQuery, useMutation } from \"@apollo/client\"\r\nimport { useState } from 'react'\r\nimport { GET_CURRENT_STOCKS } from \"../../utils/queries\";\r\nimport { SELL_ITEMS } from '../../utils/mutations'\r\nimport { generateSalesTableData, groupItems } from \"../../utils/remodeledData\";\r\nimport orderDate from \"../../utils/orderDate\";\r\nimport './Order.css'\r\n\r\nimport OrderModal from \"./OrderModal\";\r\n\r\nexport default function OrderSell (props) {\r\n    //modal junk\r\n    const [openModal, setOpenModal] = useState(false)\r\n\r\n    // const [buyer, setBuyer] = useState('dummy')\r\n\r\n\r\n    let buyer = \"dummy\"\r\n    const [sellItems, { error }] = useMutation(SELL_ITEMS)\r\n\r\n    const { loading: currentStocksLoading, data: currentStocksData, refetch } = useQuery(GET_CURRENT_STOCKS, {\r\n        variables: { enterpriseId: props.enterpriseId}\r\n    })\r\n\r\n    let currentStocksGroups\r\n    let tableData = []\r\n    let saleNumber = Date.now() % 1000000\r\n\r\n    \r\n    if(!currentStocksLoading ){\r\n        refetch()\r\n        currentStocksGroups = groupItems(currentStocksData.getCurrentStocks)\r\n        tableData = generateSalesTableData(props.orderGuide, currentStocksGroups)\r\n    }\r\n\r\n\r\n    const handleSupplierChange = (e) => {\r\n        buyer=e.target.value\r\n    }\r\n    const handleInputChange = (e) => {\r\n        const index = e.target.dataset.index\r\n        tableData[index][e.target.name] = parseInt(e.target.value)\r\n        console.log(tableData[0])\r\n    }\r\n    const handleSubmit = async () => {\r\n        console.log(tableData[0])\r\n        const filterTableData = tableData.filter(data => data.newSaleQty > 0)\r\n        console.log(filterTableData)\r\n        try {\r\n            await filterTableData.forEach(async (product) => {\r\n                const variables = {\r\n                    quantity: product.newSaleQty,\r\n                    productId: product._id,\r\n                    saleId:saleNumber,\r\n                    salesPrice: product.newSalePricePerUnit,\r\n                    saleDate: orderDate(),\r\n                    buyer,\r\n                    enterpriseId: props.enterpriseId\r\n                }\r\n                console.log(variables);\r\n                await sellItems({\r\n                    variables\r\n                })\r\n\r\n            })\r\n            setOpenModal(true)\r\n        } catch (err) {\r\n            console.error(err);\r\n        }}\r\n\r\n\r\n    return (\r\n        <div>\r\n            {openModal && <OrderModal orderNumber={saleNumber} closeModal={setOpenModal}/>}\r\n            <div className=\"buy-table-top\">\r\n                <h1>Sell Order</h1>\r\n                <input type='text' onChange={handleSupplierChange} placeholder=\"Please enter buyer's name\"/>\r\n            </div>\r\n            <table className='order-table'>\r\n                <thead>\r\n                    <tr className=\"order-header\">\r\n                        <th>SKU</th>\r\n                        <th>Name</th>\r\n                        <th>Description</th>\r\n                        <th>MSRP</th>\r\n                        <th>Category</th>\r\n                        <th>Notes</th>\r\n                        <th>Current</th>\r\n                        <th>Price</th>\r\n                        <th>Qty</th>\r\n                    </tr>\r\n                </thead>\r\n                    <tbody>\r\n                    {tableData.map((product, index) => {\r\n                        return (\r\n                        <tr data-pid={product._id} key={index}>\r\n                            <td className=\"td-1\" data-pid={product._id}>{product.sku}</td>\r\n                            <td className=\"td-3\" data-pid={product._id}>{product.name}</td>\r\n                            <td className=\"td-4\" data-pid={product._id}>{product.description}</td>\r\n                            <td className=\"td-1\" data-pid={product._id}>${product.msrp}</td>\r\n                            <td className=\"td-2\" data-pid={product._id}>{product.category}</td>\r\n                            <td className=\"td-4\" data-pid={product._id}>{product.notes}</td>\r\n                            <td className=\"td-1\" data-pid={product._id}>{product.current}</td>\r\n                            <td className=\"td-1\" data-pid={product._id}><input className=\"td-1\" data-index={index} name=\"newSalePricePerUnit\" type=\"number\" min=\"0\" onChange={handleInputChange}></input></td>\r\n                            <td className=\"td-1\" ><input className=\"td-1\" data-index={index} name=\"newSaleQty\" type=\"number\" min=\"0\" max={product.current} onChange={handleInputChange}/></td>\r\n                        </tr>\r\n                        )\r\n                    })}\r\n                    </tbody>\r\n                </table>\r\n                <div>\r\n                <button className=\"order-submit\" type=\"submit\" onClick={handleSubmit}>Submit Order</button>\r\n                </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Orders\\OrderFulfillment.js",["167","168"],"import { useQuery,useMutation} from \"@apollo/client\"\r\nimport {GET_OPEN_SALES} from \"../../utils/queries\"; \r\nimport {  groupSales } from \"../../utils/remodeledData\";\r\nimport orderDate from \"../../utils/orderDate\";\r\nimport { FULFILL_ITEMS } from \"../../utils/mutations\";\r\n\r\nexport default function OrderFulfillment ({enterpriseId}) {\r\n    \r\n    const [fulfillSale,{error}] = useMutation(FULFILL_ITEMS)\r\n\r\n   \r\n    const { loading: openSaleItemsLoading, data: openSaleItemsData, refetch } = useQuery(GET_OPEN_SALES, {\r\n        variables: { enterpriseId:enterpriseId}\r\n    })\r\n    if (openSaleItemsData) {\r\n        refetch()\r\n    }\r\n\r\n    const openSalesGroup = openSaleItemsLoading?[]:groupSales(openSaleItemsData.getOpenSales)\r\n    console.log(openSalesGroup)\r\n    const handleFulfill = (e)=>{\r\n        refetch()\r\n        const index = e.target.dataset.index;\r\n        const variables = {\r\n            enterpriseId:enterpriseId,\r\n            saleNumber:parseInt(e.target.dataset.orderNumber),\r\n            fulfillmentDate:orderDate(new Date()),\r\n        }\r\n        fulfillSale({variables})\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Fulfill Sale</h1>\r\n            {openSaleItemsLoading\r\n        ? <h2>Loading</h2>\r\n        :  <table  className=\"product-list-table\"><thead>\r\n             <tr>\r\n                        <th>Sale #</th>\r\n                        <th>Sale Date</th>\r\n                        <th>Buyer</th>\r\n                        <th>Items</th>\r\n                        <th>Fulfill!</th>\r\n                    </tr>\r\n        </thead>\r\n                <tbody>\r\n                    {openSalesGroup.map((order,index)=>{\r\n                        return(<tr key={index} data-order={order.number}>\r\n                            <td>{order.number}</td>\r\n                            <td>{orderDate(order.date)}</td>\r\n                            <td>{order.buyer}</td>\r\n                            <td>{order.itemList}</td>\r\n                            <td><button data-order-number={order.number} data-index={index} onClick={handleFulfill}>Receive!</button></td>\r\n                        </tr>\r\n)\r\n                    })}\r\n\r\n                </tbody>\r\n            </table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      }\r\n                \r\n        </div>\r\n    )\r\n}","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Orders\\OrderReceived.js",["169","170","171","172"],"import { useQuery,useMutation, from } from \"@apollo/client\"\r\nimport {GET_INCOMING_ITEMS,GET_OPEN_SALES} from \"../../utils/queries\"; \r\nimport { groupOrders } from \"../../utils/remodeledData\";\r\nimport orderDate from \"../../utils/orderDate\";\r\nimport { RECEIVE_ITEMS } from \"../../utils/mutations\";\r\nimport \"./orderReceived.css\"\r\n\r\nexport default function OrderReceived ({enterpriseId}) {\r\n    \r\n    const [receiveOrder,{error}] = useMutation(RECEIVE_ITEMS)\r\n\r\n    const { loading: incomingItemsLoading, data: incomingItemsData, refetch } = useQuery(GET_INCOMING_ITEMS, {\r\n        variables: { enterpriseId:enterpriseId}\r\n    })\r\n    // const { loading: openSaleItemsLoading, data: openSaleItemsData } = useQuery(GET_OPEN_SALES, {\r\n    //     variables: { enterpriseId:enterpriseId}\r\n    // })\r\n\r\n    if (incomingItemsData) {\r\n        refetch()\r\n    }\r\n    const incomingOrders = incomingItemsLoading?null:groupOrders(incomingItemsData.getOrderedItems)\r\n    \r\n    const handleFulfill = (e)=>{\r\n        refetch()\r\n        const index = e.target.dataset.index;\r\n        const binLocation = e.target.parentNode.parentNode.lastElementChild.childNodes[0].value\r\n        const variables = {\r\n            enterpriseId:enterpriseId,\r\n            orderNumber:parseInt(e.target.dataset.orderNumber),\r\n            receivedDate:orderDate(new Date()),\r\n            binLocation\r\n        }\r\n        receiveOrder({variables})\r\n        refetch()\r\n    }\r\n\r\n    return (\r\n        <div className=\"big-center-flex\">\r\n            <h1>Receive Order</h1>\r\n            {incomingItemsLoading\r\n        ? <h2>Loading</h2>\r\n        :  <table  className=\"product-list-table\" id=\"order-received-table\"><thead>\r\n             <tr>\r\n                        <th>Order #</th>\r\n                        <th>Order Date</th>\r\n                        <th>Seller</th>\r\n                        <th>Items</th>\r\n                        <th>Receive!</th>\r\n                        <th>Bin #</th>\r\n                    </tr>\r\n        </thead>\r\n                <tbody>\r\n                    {incomingOrders.map((order,index)=>{\r\n                        return(<tr key={index} data-order={order.number}>\r\n                            <td>{order.number}</td>\r\n                            <td>{orderDate(order.date)}</td>\r\n                            <td>{order.supplier}</td>\r\n                            <td>{order.itemList}</td>\r\n                            <td><button data-order-number={order.number} data-index={index} onClick={handleFulfill}>Receive!</button></td>\r\n                            <td><input type=\"text\"></input></td>\r\n                        </tr>\r\n)\r\n                    })}\r\n\r\n                </tbody>\r\n            </table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      }\r\n                \r\n        </div>\r\n    )\r\n}","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Reporting\\ProductReport.js",["173","174"],"import {useQuery} from \"@apollo/client\"\r\nimport { useState } from \"react\"\r\nimport { GET_ENTERPRISE_BY_ID,PRODUCT_ANALYSIS } from \"../../utils/queries\"\r\nimport ProductDetails from \"./ProductDetails\"\r\nimport './productReport.css'\r\n\r\nexport default function ProductReport ({enterpriseId}){\r\n    console.log(enterpriseId)\r\n\r\n    const{loading: enterpriseLoading,data:enterpriseData} = useQuery(GET_ENTERPRISE_BY_ID,{\r\n        variables:{id:enterpriseId}\r\n    })\r\n    const [productId,setProductId] = useState(false)\r\n\r\n    let products;\r\n    if (!enterpriseLoading){\r\n        console.log(enterpriseData)\r\n        products = enterpriseData.getEnterpriseById.orderGuide;\r\n        console.log(products)\r\n    }\r\n\r\n    if(enterpriseLoading){\r\n        return(<h1>Loading...</h1>)\r\n    }\r\n\r\n    const handleProductClick = (e)=>{\r\n        const productId = e.target.dataset.productId\r\n        setProductId(e.target.dataset.productId)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n\r\n        <div className=\"card\">\r\n            <h3>Products</h3>\r\n            {products.map((product,index)=>{\r\n                console.log(product)\r\n                return(<button data-product-id={product._id} onClick={handleProductClick} >{product.name}</button>)\r\n            })}\r\n        </div>\r\n            {productId?<ProductDetails enterpriseId={enterpriseId} productId={productId}/>:null}\r\n        </div>\r\n    )\r\n\r\n\r\n}","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Orders\\OrderPurchase.js",["175","176","177","178"],"import { useQuery, useMutation } from \"@apollo/client\"\r\nimport { useState, useEffect } from 'react'\r\nimport { GET_CURRENT_STOCKS, GET_INCOMING_ITEMS } from \"../../utils/queries\";\r\nimport { BUY_ITEMS } from '../../utils/mutations'\r\nimport { groupItems, generatePurchaseTableData } from \"../../utils/remodeledData\";\r\nimport orderDate from \"../../utils/orderDate\";\r\nimport './Order.css'\r\n\r\nimport OrderModal from \"./OrderModal\";\r\n\r\nexport default function OrderPurchase (props) {\r\n    //modal junk\r\n    const [openModal, setOpenModal] = useState(false)\r\n\r\n\r\n\r\n    let supplier = \"not specified\"\r\n\r\n    const [buyItems, { error }] = useMutation(BUY_ITEMS)\r\n\r\n    const { loading: currentStocksLoading, data: currentStocksData, refetch: currentRefetch } = useQuery(GET_CURRENT_STOCKS, {\r\n        variables: { enterpriseId: props.enterpriseId}\r\n    })\r\n    const { loading: incomingItemsLoading, data: incomingItemsData, refetch: incomingRefetch } = useQuery(GET_INCOMING_ITEMS, {\r\n        variables: { enterpriseId: props.enterpriseId}\r\n    })\r\n\r\n    let currentStocksGroups\r\n    let incomingItemsGroups\r\n    let tableData = []\r\n    let orderNumber = Date.now() % 1000000\r\n\r\n    \r\n    if(!currentStocksLoading && !incomingItemsLoading){\r\n        incomingRefetch()\r\n        currentRefetch()\r\n        currentStocksGroups = groupItems(currentStocksData.getCurrentStocks)\r\n        incomingItemsGroups = groupItems(incomingItemsData.getOrderedItems)\r\n        tableData = generatePurchaseTableData(props.orderGuide, currentStocksGroups, incomingItemsGroups)\r\n    }\r\n    console.log(tableData);\r\n\r\n    const handleSupplierChange = (e) => {\r\n        supplier = e.target.value\r\n    }\r\n    const handleInputChange = (e) => {\r\n        const index = e.target.dataset.index\r\n        console.log(e);\r\n        tableData[index][e.target.name] = parseInt(e.target.value)\r\n    }\r\n    const [updatedTable, setUpdatedTable] = useState([])\r\n    const handleSubmit = async () => {\r\n        \r\n        const filterTableData = tableData.filter(data => data.newOrderQty > 0)\r\n\r\n        console.log(orderNumber);\r\n        try {\r\n            await filterTableData.forEach(async (product) => {\r\n                await buyItems({\r\n                    variables: {\r\n                        quantity: product.newOrderQty,\r\n                        productId: product._id,\r\n                        orderNumber,\r\n                        cost: product.newOrderCostPerUnit,\r\n                        purchaseDate: orderDate(),\r\n                        supplier,\r\n                        enterpriseId: props.enterpriseId\r\n                    }\r\n                })\r\n\r\n            })\r\n            setOpenModal(true)\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            {openModal && <OrderModal orderNumber={orderNumber} closeModal={setOpenModal}/>}\r\n            <div className=\"table-top\">\r\n                <h1>Purchase Order</h1>\r\n                <input type='text' onChange={handleSupplierChange} placeholder=\"Please enter supplier's name\"/>\r\n            </div>\r\n            <table className='order-table'>\r\n                <thead>\r\n                    <tr className=\"order-header\">\r\n                        <th>SKU</th>\r\n                        <th>Name</th>\r\n                        <th>Description</th>\r\n                        <th>MSRP</th>\r\n                        <th>Category</th>\r\n                        <th>Notes</th>\r\n                        <th>Current</th>\r\n                        <th>Incoming</th>\r\n                        <th>Cost</th>\r\n                        <th>Order Qty</th>\r\n                    </tr>\r\n                </thead>\r\n                    <tbody>\r\n                    {tableData.map((product, index) => {\r\n                        return (\r\n                        <tr data-pid={product._id} key={index}>\r\n                            <td className=\"td-1\" data-pid={product._id}>{product.sku}</td>\r\n                            <td className=\"td-3\" data-pid={product._id}>{product.name}</td>\r\n                            <td className=\"td-4\" data-pid={product._id}>{product.description}</td>\r\n                            <td className=\"td-1\" data-pid={product._id}>${product.msrp}</td>\r\n                            <td className=\"td-2\" data-pid={product._id}>{product.category}</td>\r\n                            <td className=\"td-4\" data-pid={product._id}>{product.notes}</td>\r\n                            <td className=\"td-1\" data-pid={product._id}>{product.current}</td>\r\n                            <td className=\"td-1\" data-pid={product._id}>{product.incoming}</td>\r\n                            <td className=\"td-1\" data-pid={product._id}><input className=\"td-1\" data-index={index} name=\"newOrderCostPerUnit\" type=\"number\" min=\"0\" onChange={handleInputChange} /></td>\r\n                            <td className=\"td-1\" ><input className=\"td-1\" data-index={index} name=\"newOrderQty\" type=\"number\" min=\"0\" onChange={handleInputChange} /></td>\r\n                        </tr>\r\n                        )\r\n                    })}\r\n                    </tbody>\r\n                </table>\r\n                <div>\r\n                <button className=\"order-submit\" type=\"submit\" onClick={handleSubmit}>Submit Order</button>\r\n                </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Orders\\OrderGuide.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Reporting\\ReportingDashboard.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\utils\\mutations.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Products\\ProductList.js",["179","180"],"import './ProductList.css'\r\nimport React from 'react'\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_TO_ORDERGUIDE } from '../../utils/mutations'\r\n\r\nexport default function ProductList (props) {\r\n    if(props.products) {\r\n        props.productsRefetch()\r\n    }\r\n    const [addProduct, { error }] = useMutation(ADD_TO_ORDERGUIDE)\r\n    const checkIfInList = (product,list)=>{\r\n        const match = list.filter(li=>{\r\n            return li._id===product._id\r\n        })\r\n        if (match.length!==0){\r\n            return true\r\n        }\r\n        else{\r\n            return false\r\n        }\r\n    }\r\n    const handleAdd = async (product) => {\r\n        let newList = [...props.orderGuide, product]\r\n        \r\n        props.setGuideState(newList)\r\n        try {\r\n            await addProduct({\r\n                variables: { enterpriseId: props.enterpriseId, productId: product._id }\r\n            })\r\n        } catch (err) {\r\n            console.error(err);\r\n        }  \r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <table className='product-list-table'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>SKU</th>\r\n                        <th>Name</th>\r\n                        <th>Description</th>\r\n                        <th>MSRP</th>\r\n                        <th>Category</th>\r\n                        <th>Notes</th>\r\n                        {props.buttons?<th>Add</th> : null}\r\n\r\n                    </tr>\r\n                </thead>\r\n                    <tbody>\r\n                        {props.products.map((product, index) => {\r\n                        const check = checkIfInList(product, (props?.orderGuide||[]))\r\n                        if(!check) {\r\n                         return (\r\n                        <tr data-pid={product._id} key={index} >\r\n                            <td data-pid={product._id}>{product.sku}</td>\r\n                            <td data-pid={product._id}>{product.name}</td>\r\n                            <td data-pid={product._id}>{product.description}</td>\r\n                            <td data-pid={product._id}>${product.msrp}</td>\r\n                            <td data-pid={product._id}>{product.category}</td>\r\n                            <td data-pid={product._id}>{product.notes}</td>\r\n                            {props.buttons?<td><button onClick={() => handleAdd(product)}>✔️</button></td> : null}\r\n\r\n                        </tr>\r\n                        )   \r\n                        }})}\r\n                    \r\n                    </tbody>\r\n                </table>\r\n        </div>\r\n    )\r\n}","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\utils\\remodeledData.js",["181"],"\r\nexport const groupItems = (data)=>{\r\n    const array = [];\r\n    // console.log('data',data);\r\n    data.forEach(item=>{\r\n        const matches = array.filter(el=>el.id==item.product._id)\r\n        if(matches.length===0){\r\n            array.push({id:item.product._id,quantity:1,name:item.product.name,sku:item.product.sku,msrp:item.product.msrp,totalMSRP:item.product.msrp,totalCost:item.cost,averageCost:item.cost,totalSalesPrice:item.salesPrice||\"not sold\",averageSalesPrice:item.salesPrice||\"not sold\",bins:[item.binLocation]})\r\n        }\r\n        else{\r\n            matches[0].quantity++\r\n            matches[0].totalMSRP+=matches[0].msrp\r\n            matches[0].totalCost+=item.cost;\r\n            matches[0].totalSalesPrice===\"not sold\"||(matches[0].totalSalesPrice+=item.salesPrice);\r\n            matches[0].averageCost=matches[0].totalCost/matches[0].quantity\r\n            matches[0].averageSalesPrice=matches[0].totalSalesPrice/matches[0].quantity||\"not sold\";\r\n            matches[0].bins.push(item.binLocation)\r\n            matches[0].bins = [...new Set(matches[0].bins)]\r\n        }\r\n    })\r\n    return array\r\n}\r\n\r\nconst testCurrentItems = [\r\n    {\r\n        \"__typename\": \"Item\",\r\n        \"_id\": \"6296a255dbeac327b8a9a7f9\",\r\n        \"product\": {\r\n            \"__typename\": \"Product\",\r\n            \"_id\": \"6296a255dbeac327b8a9a7ee\",\r\n            \"sku\": \"ABC123\",\r\n            \"name\": \"New Hampshire End Table\",\r\n            \"description\": \"Solid Oak with glass inset. Victorian Style\",\r\n            \"msrp\": 150,\r\n            \"category\": \"tables\",\r\n            \"notes\": \"No assembly required\"\r\n        },\r\n        \"orderNumber\": 1,\r\n        \"cost\": 60,\r\n        \"purchaseDate\": \"1653973200000\",\r\n        \"supplier\": \"Dev Manu Inc.\",\r\n        \"receivedDate\": \"1656824400000\",\r\n        \"binLocation\": \"J33\"\r\n    },\r\n    {\r\n        \"__typename\": \"Item\",\r\n        \"_id\": \"6296a255dbeac327b8a9a807\",\r\n        \"product\": {\r\n            \"__typename\": \"Product\",\r\n            \"_id\": \"6296a255dbeac327b8a9a7ef\",\r\n            \"sku\": \"CFI395\",\r\n            \"name\": \"Prairie Dining\",\r\n            \"description\": \"Mahogany, Prairie Style\",\r\n            \"msrp\": 900,\r\n            \"category\": \"tables\",\r\n            \"notes\": \"Two Leafs included\"\r\n        },\r\n        \"orderNumber\": 1,\r\n        \"cost\": 400,\r\n        \"purchaseDate\": \"1653973200000\",\r\n        \"supplier\": \"AFG LTD.\",\r\n        \"receivedDate\": \"1656824400000\",\r\n        \"binLocation\": \"J33\"\r\n    },\r\n    {\r\n        \"__typename\": \"Item\",\r\n        \"_id\": \"6296a255dbeac327b8a9a809\",\r\n        \"product\": {\r\n            \"__typename\": \"Product\",\r\n            \"_id\": \"6296a255dbeac327b8a9a7ef\",\r\n            \"sku\": \"CFI395\",\r\n            \"name\": \"Prairie Dining\",\r\n            \"description\": \"Mahogany, Prairie Style\",\r\n            \"msrp\": 900,\r\n            \"category\": \"tables\",\r\n            \"notes\": \"Two Leafs included\"\r\n        },\r\n        \"orderNumber\": 1,\r\n        \"cost\": 400,\r\n        \"purchaseDate\": \"1653973200000\",\r\n        \"supplier\": \"AFG LTD.\",\r\n        \"receivedDate\": \"1656824400000\",\r\n        \"binLocation\": \"J33\"\r\n    }\r\n]\r\n\r\nconst testIncomingItems = [\r\n      {\r\n        \"_id\": \"6296a255dbeac327b8a9a817\",\r\n        \"product\": {\r\n          \"_id\": \"6296a255dbeac327b8a9a7f0\",\r\n          \"sku\": \"IEN830\",\r\n          \"name\": \"Elkwood Davenport\",\r\n          \"description\": \"Plush sofa with metal rivets, seats three\",\r\n          \"msrp\": 1500,\r\n          \"category\": \"sofas\",\r\n          \"notes\": \"No assembly required\"\r\n        },\r\n        \"orderNumber\": 2,\r\n        \"saleNumber\": null,\r\n        \"cost\": 900,\r\n        \"purchaseDate\": \"1655269200000\",\r\n        \"supplier\": \"Dev Manu Inc.\",\r\n        \"receivedDate\": null,\r\n        \"binLocation\": null,\r\n        \"buyer\": null,\r\n        \"salesPrice\": null,\r\n        \"saleDate\": null,\r\n        \"fulfillmentDate\": null\r\n      },\r\n      {\r\n        \"_id\": \"6296a255dbeac327b8a9a819\",\r\n        \"product\": {\r\n          \"_id\": \"6296a255dbeac327b8a9a7f0\",\r\n          \"sku\": \"IEN830\",\r\n          \"name\": \"Elkwood Davenport\",\r\n          \"description\": \"Plush sofa with metal rivets, seats three\",\r\n          \"msrp\": 1500,\r\n          \"category\": \"sofas\",\r\n          \"notes\": \"No assembly required\"\r\n        },\r\n        \"orderNumber\": 2,\r\n        \"saleNumber\": null,\r\n        \"cost\": 900,\r\n        \"purchaseDate\": \"1655269200000\",\r\n        \"supplier\": \"Dev Manu Inc.\",\r\n        \"receivedDate\": null,\r\n        \"binLocation\": null,\r\n        \"buyer\": null,\r\n        \"salesPrice\": null,\r\n        \"saleDate\": null,\r\n        \"fulfillmentDate\": null\r\n      },\r\n      {\r\n        \"_id\": \"6296a255dbeac327b8a9a822\",\r\n        \"product\": {\r\n          \"_id\": \"6296a255dbeac327b8a9a7f1\",\r\n          \"sku\": \"FEE980\",\r\n          \"name\": \"Visage Lamp\",\r\n          \"description\": \"Art Deco floor lamp\",\r\n          \"msrp\": 150,\r\n          \"category\": \"lamps\",\r\n          \"notes\": \"Some assembly required, fragile\"\r\n        },\r\n        \"orderNumber\": 3,\r\n        \"saleNumber\": null,\r\n        \"cost\": 65,\r\n        \"purchaseDate\": \"1656997200000\",\r\n        \"supplier\": \"Emory\",\r\n        \"receivedDate\": null,\r\n        \"binLocation\": null,\r\n        \"buyer\": null,\r\n        \"salesPrice\": null,\r\n        \"saleDate\": null,\r\n        \"fulfillmentDate\": null\r\n      },\r\n      {\r\n        \"_id\": \"6296a255dbeac327b8a9a824\",\r\n        \"product\": {\r\n          \"_id\": \"6296a255dbeac327b8a9a7f1\",\r\n          \"sku\": \"FEE980\",\r\n          \"name\": \"Visage Lamp\",\r\n          \"description\": \"Art Deco floor lamp\",\r\n          \"msrp\": 150,\r\n          \"category\": \"lamps\",\r\n          \"notes\": \"Some assembly required, fragile\"\r\n        },\r\n        \"orderNumber\": 3,\r\n        \"saleNumber\": null,\r\n        \"cost\": 65,\r\n        \"purchaseDate\": \"1656997200000\",\r\n        \"supplier\": \"Emory\",\r\n        \"receivedDate\": null,\r\n        \"binLocation\": null,\r\n        \"buyer\": null,\r\n        \"salesPrice\": null,\r\n        \"saleDate\": null,\r\n        \"fulfillmentDate\": null\r\n      }\r\n    ]\r\n\r\nexport const currentGroup = groupItems(testCurrentItems)\r\n\r\nexport const incomingGroup = groupItems(testIncomingItems)\r\n\r\nexport const testOrderGuide = [\r\n    {\r\n      \"_id\": \"6296a255dbeac327b8a9a7ee\",\r\n      \"sku\": \"ABC123\",\r\n      \"name\": \"New Hampshire End Table\",\r\n      \"description\": \"Solid Oak with glass inset. Victorian Style\",\r\n      \"msrp\": 150,\r\n      \"category\": \"tables\",\r\n      \"notes\": \"No assembly required\"\r\n    },\r\n    {\r\n      \"_id\": \"6296a255dbeac327b8a9a7ef\",\r\n      \"sku\": \"CFI395\",\r\n      \"name\": \"Prairie Dining\",\r\n      \"description\": \"Mahogany, Prairie Style\",\r\n      \"msrp\": 900,\r\n      \"category\": \"tables\",\r\n      \"notes\": \"Two Leafs included\"\r\n    },\r\n    {\r\n      \"_id\": \"6296a255dbeac327b8a9a7f0\",\r\n      \"sku\": \"IEN830\",\r\n      \"name\": \"Elkwood Davenport\",\r\n      \"description\": \"Plush sofa with metal rivets, seats three\",\r\n      \"msrp\": 1500,\r\n      \"category\": \"sofas\",\r\n      \"notes\": \"No assembly required\"\r\n    },\r\n    {\r\n      \"_id\": \"6296a255dbeac327b8a9a7f1\",\r\n      \"sku\": \"FEE980\",\r\n      \"name\": \"Visage Lamp\",\r\n      \"description\": \"Art Deco floor lamp\",\r\n      \"msrp\": 150,\r\n      \"category\": \"lamps\",\r\n      \"notes\": \"Some assembly required, fragile\"\r\n    },\r\n    {\r\n      \"_id\": \"6296b791a5cee5bfce4b6770\",\r\n      \"sku\": \"334KKA\",\r\n      \"name\": \"Gandy Shelf\",\r\n      \"description\": \"Six Foot high balsa shelf\",\r\n      \"msrp\": 25,\r\n      \"category\": \"shelves\",\r\n      \"notes\": \"cheaply made, very fragile\"\r\n    },\r\n    {\r\n      \"_id\": \"6296b7e8a5cee5bfce4b6775\",\r\n      \"sku\": \"ERI333\",\r\n      \"name\": \"Royale Bed\",\r\n      \"description\": \"California King Bed with Frame\",\r\n      \"msrp\": 4000,\r\n      \"category\": \"beds\",\r\n      \"notes\": \"\"\r\n    }\r\n  ]\r\n\r\n\r\nexport const generatePurchaseTableData = (guide,current,incoming)=>{\r\n    const array = []\r\n    guide.forEach(product=>{\r\n        let obj;\r\n        const currentMatch = current.filter(el=>el.id===product._id) \r\n        const incomingMatch = incoming.filter(el=>el.id===product._id) \r\n        obj= {...product,current:(currentMatch[0]?.quantity||0),incoming:(incomingMatch[0]?.quantity||0),newOrderQty:0,newOrderCostPerUnit:0}\r\n        array.push(obj)\r\n    })\r\n    console.log(array)\r\n    return array\r\n}\r\nexport const generateSalesTableData = (guide,current)=>{\r\n  const array = []\r\n  guide.forEach(product=>{\r\n      let obj;\r\n      const currentMatch = current.filter(el=>el.id===product._id) \r\n      obj= {...product,current:(currentMatch[0]?.quantity||0),newSaleQty:0,newSalePricePerUnit:0}\r\n      array.push(obj)\r\n  })\r\n  console.log(array)\r\n  return array\r\n}\r\n\r\nexport const checkIfInList = (product,list)=>{\r\n    const match = list.filter(li=>{\r\n        return li._id===product._id\r\n    })\r\n    if (match.length!==0){\r\n        return true\r\n    }\r\n    else{\r\n        return false\r\n    }\r\n}\r\n\r\nexport const groupOrders = (items)=>{\r\n    const orders = {};\r\n    items.forEach(item=>{\r\n        if(orders?.[item.orderNumber]){\r\n            orders[item.orderNumber].push(item)\r\n        }else{\r\n            orders[item.orderNumber]=[item]\r\n        }\r\n    }\r\n    )\r\n\r\n    return formatOrders(orders)\r\n}\r\n\r\n\r\nexport const groupSales = (items)=>{\r\n    const sales = {};\r\n    items.forEach(item=>{\r\n        if(sales?.[item.saleNumber]){\r\n            sales[item.saleNumber].push(item)\r\n        }else{\r\n            sales[item.saleNumber]=[item]\r\n        }\r\n    }\r\n    )\r\n\r\n    return formatSales(sales)\r\n}\r\n\r\nexport const stringItems = (items)=>{\r\n    let string = \"\"\r\n    items.forEach(item=>{\r\n        string+=`${item.name}: ${item.quantity}, `\r\n    })\r\n    string = string.slice(0,-2)\r\n    return string\r\n}\r\n\r\nexport const formatOrders = (orders)=>{\r\n    const array = [];\r\n    for(let key in orders){\r\n        const obj={}\r\n        obj.number=key;\r\n        obj.date = orders[key][0].purchaseDate\r\n        obj.supplier = orders[key][0].supplier\r\n        obj.items = groupItems(orders[key])\r\n        obj.itemList = stringItems(obj.items)\r\n        array.push(obj)\r\n    }\r\n    return array\r\n}\r\n\r\nexport const formatSales = (sales)=>{\r\n    const array = [];\r\n    for(let key in sales){\r\n        const obj={}\r\n        obj.number=key;\r\n        obj.date = sales[key][0].saleDate\r\n        obj.buyer = sales[key][0].buyer\r\n        obj.items = groupItems(sales[key])\r\n        obj.itemList = stringItems(obj.items)\r\n        array.push(obj)\r\n    }\r\n    return array\r\n}\r\n\r\n\r\n\r\n// generatePurchaseTableData(testOrderGuide,currentGroup,incomingGroup)\r\n\r\n// module.exports = {groupSales, groupOrders, groupItems, generatePurchaseTableData, generateSalesTableData}\r\n","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Orders\\OrderModal.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\utils\\orderDate.js",[],"C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Orders\\OrderList.js",["182"],"import './OrderList.css'\r\nimport React from 'react'\r\nimport { useMutation } from '@apollo/client'\r\nimport { REMOVE_FROM_ORDERGUIDE } from '../../utils/mutations'\r\n\r\nexport default function OrderList (props) {\r\n    if(props.orderGuide) {\r\n        props.enterpriseRefetch()\r\n    }\r\n    const [removeProduct, { error }] = useMutation(REMOVE_FROM_ORDERGUIDE)\r\n    const handleRemove = async (pid) => {\r\n        const newList = props.orderGuide.filter((product) => {\r\n            return product._id !== pid\r\n        })\r\n        props.setGuideState(newList)\r\n        try {\r\n            await removeProduct({\r\n                variables: { enterpriseId: props.enterpriseId, productId: pid }\r\n            })\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <table className='order-list-table'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>SKU</th>\r\n                        <th>Name</th>\r\n                        <th>Description</th>\r\n                        <th>MSRP</th>\r\n                        <th>Category</th>\r\n                        <th>Notes</th>\r\n                        {props.buttons?<th>Remove</th> : null}\r\n                    </tr>\r\n                </thead>\r\n                    <tbody>\r\n                    {props.orderGuide.map((product, index) => {\r\n                        return (\r\n                        <tr data-pid={product._id} key={index}>\r\n                            <td data-pid={product._id}>{product.sku}</td>\r\n                            <td data-pid={product._id}>{product.name}</td>\r\n                            <td data-pid={product._id}>{product.description}</td>\r\n                            <td data-pid={product._id}>${product.msrp}</td>\r\n                            <td data-pid={product._id}>{product.category}</td>\r\n                            <td data-pid={product._id}>{product.notes}</td>\r\n                            {props.buttons?<td><button onClick={() => handleRemove(product._id)} data-pid={product._id}>❌</button></td> : null}\r\n                        </tr>\r\n                        )\r\n                    })}\r\n                    </tbody>\r\n                </table>\r\n        </div>\r\n    )\r\n}","C:\\Users\\bange\\Desktop\\jab-project3\\inventory-plus\\client\\src\\components\\Reporting\\ProductDetails.js",[],{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":17,"column":25,"nodeType":"189","messageId":"190","endLine":17,"endColumn":30},{"ruleId":"187","severity":1,"message":"191","line":17,"column":32,"nodeType":"189","messageId":"190","endLine":17,"endColumn":36},{"ruleId":"187","severity":1,"message":"191","line":33,"column":19,"nodeType":"189","messageId":"190","endLine":33,"endColumn":23},{"ruleId":"187","severity":1,"message":"192","line":1,"column":10,"nodeType":"189","messageId":"190","endLine":1,"endColumn":18},{"ruleId":"187","severity":1,"message":"193","line":2,"column":17,"nodeType":"189","messageId":"190","endLine":2,"endColumn":23},{"ruleId":"187","severity":1,"message":"194","line":3,"column":8,"nodeType":"189","messageId":"190","endLine":3,"endColumn":12},{"ruleId":"187","severity":1,"message":"188","line":11,"column":24,"nodeType":"189","messageId":"190","endLine":11,"endColumn":29},{"ruleId":"187","severity":1,"message":"191","line":16,"column":20,"nodeType":"189","messageId":"190","endLine":16,"endColumn":24},{"ruleId":"187","severity":1,"message":"192","line":3,"column":10,"nodeType":"189","messageId":"190","endLine":3,"endColumn":18},{"ruleId":"187","severity":1,"message":"195","line":4,"column":10,"nodeType":"189","messageId":"190","endLine":4,"endColumn":30},{"ruleId":"187","severity":1,"message":"194","line":5,"column":8,"nodeType":"189","messageId":"190","endLine":5,"endColumn":12},{"ruleId":"187","severity":1,"message":"191","line":22,"column":33,"nodeType":"189","messageId":"190","endLine":22,"endColumn":37},{"ruleId":"187","severity":1,"message":"191","line":39,"column":21,"nodeType":"189","messageId":"190","endLine":39,"endColumn":25},{"ruleId":"187","severity":1,"message":"188","line":19,"column":25,"nodeType":"189","messageId":"190","endLine":19,"endColumn":30},{"ruleId":"187","severity":1,"message":"188","line":9,"column":25,"nodeType":"189","messageId":"190","endLine":9,"endColumn":30},{"ruleId":"187","severity":1,"message":"196","line":23,"column":15,"nodeType":"189","messageId":"190","endLine":23,"endColumn":20},{"ruleId":"187","severity":1,"message":"197","line":1,"column":32,"nodeType":"189","messageId":"190","endLine":1,"endColumn":36},{"ruleId":"187","severity":1,"message":"198","line":2,"column":28,"nodeType":"189","messageId":"190","endLine":2,"endColumn":42},{"ruleId":"187","severity":1,"message":"188","line":10,"column":26,"nodeType":"189","messageId":"190","endLine":10,"endColumn":31},{"ruleId":"187","severity":1,"message":"196","line":26,"column":15,"nodeType":"189","messageId":"190","endLine":26,"endColumn":20},{"ruleId":"187","severity":1,"message":"199","line":3,"column":31,"nodeType":"189","messageId":"190","endLine":3,"endColumn":47},{"ruleId":"187","severity":1,"message":"200","line":27,"column":15,"nodeType":"189","messageId":"190","endLine":27,"endColumn":24},{"ruleId":"187","severity":1,"message":"201","line":2,"column":20,"nodeType":"189","messageId":"190","endLine":2,"endColumn":29},{"ruleId":"187","severity":1,"message":"188","line":19,"column":24,"nodeType":"189","messageId":"190","endLine":19,"endColumn":29},{"ruleId":"187","severity":1,"message":"202","line":51,"column":12,"nodeType":"189","messageId":"190","endLine":51,"endColumn":24},{"ruleId":"187","severity":1,"message":"203","line":51,"column":26,"nodeType":"189","messageId":"190","endLine":51,"endColumn":41},{"ruleId":"187","severity":1,"message":"188","line":10,"column":26,"nodeType":"189","messageId":"190","endLine":10,"endColumn":31},{"ruleId":"204","severity":1,"message":"205","line":52,"column":62,"nodeType":"206","messageId":"207","endLine":52,"endColumn":64},{"ruleId":"208","severity":1,"message":"209","line":6,"column":47,"nodeType":"210","messageId":"211","endLine":6,"endColumn":49},{"ruleId":"187","severity":1,"message":"188","line":10,"column":29,"nodeType":"189","messageId":"190","endLine":10,"endColumn":34},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'useQuery' is defined but never used.","'useRef' is defined but never used.","'auth' is defined but never used.","'GET_ENTERPRISE_BY_ID' is defined but never used.","'index' is assigned a value but never used.","'from' is defined but never used.","'GET_OPEN_SALES' is defined but never used.","'PRODUCT_ANALYSIS' is defined but never used.","'productId' is assigned a value but never used.","'useEffect' is defined but never used.","'updatedTable' is assigned a value but never used.","'setUpdatedTable' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]
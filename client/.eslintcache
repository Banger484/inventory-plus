[{"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\index.js":"1","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\App.js":"2","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\reportWebVitals.js":"3","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\themes.js":"4","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\utils\\auth.js":"5","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\pages\\Home.js":"6","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Users\\Signup.js":"7","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Users\\AcceptInvite.js":"8","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Users\\Login.js":"9","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Admin\\AdminDashboard.js":"10","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Admin\\ProductAdmin.js":"11","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Admin\\UsersAdmin.js":"12","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\utils\\queries.js":"13","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Users\\Settings.js":"14","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Users\\UserDashboard.js":"15","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Users\\AddUser.js":"16","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Users\\Roster.js":"17","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Layout\\Header.js":"18","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Layout\\Dashboard.js":"19","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\utils\\mutations.js":"20","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Layout\\Navbar.js":"21","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Reporting\\MonthlyAnalysis.js":"22","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Reporting\\ReportingDashboard.js":"23","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Reporting\\ProductReport.js":"24","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Products\\ProductGuide.js":"25","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Products\\ProductDashboard.js":"26","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Products\\AddProduct.js":"27","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Orders\\OrderPurchase.js":"28","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Orders\\OrderFulfillment.js":"29","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Orders\\OrderDashboard.js":"30","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Orders\\OrderSell.js":"31","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Orders\\OrderReceived.js":"32","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Orders\\OrderHistory.js":"33","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Orders\\OrderGuide.js":"34","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Products\\ProductList.js":"35","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Reporting\\ProductDetails.js":"36","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\utils\\filter.js":"37","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\utils\\orderDate.js":"38","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\utils\\remodeledData.js":"39","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Orders\\OrderModal.js":"40","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Reporting\\OrderDetails.js":"41","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Orders\\OrderList.js":"42","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\utils\\translation\\translator.js":"43","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Table\\index.js":"44","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\utils\\translation\\translationLibrary.js":"45","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Users\\logout.js":"46"},{"size":500,"mtime":1653612002944,"results":"47","hashOfConfig":"48"},{"size":3449,"mtime":1655819752820,"results":"49","hashOfConfig":"48"},{"size":389,"mtime":1653612002961,"results":"50","hashOfConfig":"48"},{"size":402,"mtime":1655698601674,"results":"51","hashOfConfig":"48"},{"size":1044,"mtime":1654473804542,"results":"52","hashOfConfig":"48"},{"size":6959,"mtime":1655773104174,"results":"53","hashOfConfig":"48"},{"size":4917,"mtime":1655484233066,"results":"54","hashOfConfig":"48"},{"size":1630,"mtime":1655484233057,"results":"55","hashOfConfig":"48"},{"size":3333,"mtime":1655484233061,"results":"56","hashOfConfig":"48"},{"size":1038,"mtime":1655820144601,"results":"57","hashOfConfig":"48"},{"size":1952,"mtime":1655820094166,"results":"58","hashOfConfig":"48"},{"size":1949,"mtime":1655820153957,"results":"59","hashOfConfig":"48"},{"size":5264,"mtime":1655819485745,"results":"60","hashOfConfig":"48"},{"size":352,"mtime":1655699091996,"results":"61","hashOfConfig":"48"},{"size":1412,"mtime":1655770189772,"results":"62","hashOfConfig":"48"},{"size":1062,"mtime":1655484233059,"results":"63","hashOfConfig":"48"},{"size":1261,"mtime":1655484233063,"results":"64","hashOfConfig":"48"},{"size":709,"mtime":1655484233037,"results":"65","hashOfConfig":"48"},{"size":2650,"mtime":1655814628620,"results":"66","hashOfConfig":"48"},{"size":5782,"mtime":1655817793655,"results":"67","hashOfConfig":"48"},{"size":1140,"mtime":1655484233040,"results":"68","hashOfConfig":"48"},{"size":931,"mtime":1655786138131,"results":"69","hashOfConfig":"48"},{"size":1475,"mtime":1655738611066,"results":"70","hashOfConfig":"48"},{"size":1626,"mtime":1655484233055,"results":"71","hashOfConfig":"48"},{"size":429,"mtime":1654473804494,"results":"72","hashOfConfig":"48"},{"size":1024,"mtime":1654032546875,"results":"73","hashOfConfig":"48"},{"size":3119,"mtime":1654473804488,"results":"74","hashOfConfig":"48"},{"size":6261,"mtime":1655776536138,"results":"75","hashOfConfig":"48"},{"size":3118,"mtime":1655776507823,"results":"76","hashOfConfig":"48"},{"size":2805,"mtime":1655484233042,"results":"77","hashOfConfig":"48"},{"size":5518,"mtime":1655776525206,"results":"78","hashOfConfig":"48"},{"size":3818,"mtime":1655776515191,"results":"79","hashOfConfig":"48"},{"size":125,"mtime":1654016344598,"results":"80","hashOfConfig":"48"},{"size":1189,"mtime":1654473804464,"results":"81","hashOfConfig":"48"},{"size":2534,"mtime":1654473804499,"results":"82","hashOfConfig":"48"},{"size":1118,"mtime":1655769831414,"results":"83","hashOfConfig":"48"},{"size":159,"mtime":1655774406044,"results":"84","hashOfConfig":"48"},{"size":352,"mtime":1655764452481,"results":"85","hashOfConfig":"48"},{"size":9871,"mtime":1655484233070,"results":"86","hashOfConfig":"48"},{"size":917,"mtime":1654473804471,"results":"87","hashOfConfig":"48"},{"size":563,"mtime":1655599432448,"results":"88","hashOfConfig":"48"},{"size":2181,"mtime":1655741538560,"results":"89","hashOfConfig":"48"},{"size":197,"mtime":1655743618429,"results":"90","hashOfConfig":"48"},{"size":1385,"mtime":1655786050503,"results":"91","hashOfConfig":"48"},{"size":895,"mtime":1655785980897,"results":"92","hashOfConfig":"48"},{"size":267,"mtime":1655820078562,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"i40bl9",{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"104"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"104"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"104"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"104"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"104"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"104"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"104"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"104"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"104"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"104"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"104"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"104"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"104"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"104"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\index.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\App.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\reportWebVitals.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\themes.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\utils\\auth.js",[],["201","202"],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\pages\\Home.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Users\\Signup.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Users\\AcceptInvite.js",["203","204","205"],"import './AcceptInvite.css'\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER_TO_EXISTING } from '../../utils/mutations';\n\nexport default function AcceptInvite () {\n\n    const path = window.location.pathname.split(\"/\")\n    const navigate = useNavigate()\n    let enterprise = path[path.length - 2]\n\n    const [formState, setFormState] = useState({\n        name: '',\n        email: '',\n        password: '',\n      });\n      const [addUser, { error, data }] = useMutation(ADD_USER_TO_EXISTING);\n      \n      const handleChange = (event) => {\n        const { name, value } = event.target;\n    \n        setFormState({\n          ...formState,\n          [name]: value,\n        });\n      };\n\n      const handleFormSubmit = async (event) => {\n        event.preventDefault();\n    \n        try {\n          const { data } = await addUser({\n            variables: { ...formState, enterprise},\n          });\n        } catch (e) {\n          console.error(e);\n        }\n        navigate('/login')\n      };\n    return (\n        <div className=\"accept-invite-body\">\n        <h1>Complete Registration</h1>\n\n        <form onSubmit={handleFormSubmit}>\n            <input onChange={handleChange} name=\"name\" type=\"text\" placeholder=\"username\"/>\n            <input onChange={handleChange} name=\"email\" type=\"email\" placeholder=\"email\"/>\n            <input onChange={handleChange} name=\"password\" type=\"password\" placeholder=\"password\"/>\n            \n            <button type=\"submit\">Submit Registration</button>\n        </form>\n        </div>\n    )\n}","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Users\\Login.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Admin\\AdminDashboard.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Admin\\ProductAdmin.js",["206","207"],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Admin\\UsersAdmin.js",["208","209","210","211"],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\utils\\queries.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Users\\Settings.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Users\\UserDashboard.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Users\\AddUser.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Users\\Roster.js",["212","213","214","215","216"],"// Imports custom css file and requires all dependant files\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport React, { useRef, useState } from \"react\";\nimport auth from \"../../utils/auth\";\nimport \"./Roster.css\";\nimport { REMOVE_USER } from \"../../utils/mutations\";\n\n//exports function to render employee roster\nexport default function Roster({ roster, rosterRefetch }) {\n  const [userList, setUserList] = useState(roster);\n  const [removeUser, { error }] = useMutation(REMOVE_USER);\n\n  // function to remove user from enterprise roster\n  const handleRemoveUser = async (id) => {\n    try {\n      const { data } = await removeUser({\n        variables: { userId: id },\n      });\n      const newList = userList.filter((user) => {\n        return user._id !== id;\n      });\n      setUserList(newList);\n      rosterRefetch();\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n\n    return (\n      //HTML for employee roster\n        <div className='employee-roster-cont'>\n            <h1>Employee Roster</h1>\n            {userList.map((u,i)=>{\n                return(<div className='employee-cont' key={i}><h3>{u.name}</h3><h3>{u.email}</h3><button onClick={()=>handleRemoveUser(u._id)}>Remove</button></div>)\n            })}\n        </div>\n    )\n}\n\n","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Layout\\Header.js",["217","218","219"],"\n// Imports custom css file and requires all dependant files\nimport './Header.css'\nimport React from 'react'\nimport { useQuery } from '@apollo/client';\nimport { GET_ENTERPRISE_BY_ID } from '../../utils/queries'\nimport auth from '../../utils/auth'\n\n// Export function to display header of application with welcome enterprise and user. Displays application logo and name as well.\nexport default function Header(props) {\n  return (\n    <header>\n      <div className='header-enterprise'>\n        <h1>{props.enterprise}</h1>\n        <p>Welcome, {props.user}.</p>\n      </div>\n      <div className='header-logo'>\n        <img src='/images/icons/iplus.png' alt=\"Inventory+ Logo\" />\n      </div>\n    </header>\n  )\n}\n\n","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Layout\\Dashboard.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\utils\\mutations.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Layout\\Navbar.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Reporting\\MonthlyAnalysis.js",["220","221","222"],"import { useQuery } from \"@apollo/client\"\r\nimport { useState } from \"react\"\r\nimport { GET_MONTH_TO_MONTH } from \"../../utils/queries\"\r\nimport { Table } from \"../Table\"\r\nimport { t } from \"../../utils/translation/translator\"\r\n\r\nexport const MonthlyAnalysis = ({enterpriseId})=>{\r\n    const [sales,setSales] = useState(true)\r\n    const {data,loading,error}=useQuery(GET_MONTH_TO_MONTH,{variables:{enterpriseId}})\r\n    if(loading){\r\n        return(\r\n            <div>Loading...</div>\r\n        )\r\n    }\r\n\r\n    const addedData = [];\r\n    data.groupItemsByMonth.forEach(i=>{\r\n        const obj = {monthText:t(i.month),...i}\r\n        addedData.push(obj)\r\n    })\r\n\r\n    addedData.sort((a,b)=>{\r\n        return a.month-b.month\r\n    })\r\n    addedData.sort((a,b)=>{\r\n        return a.year-b.year\r\n    })\r\n\r\n    return(\r\n        <div>\r\n            <Table data={addedData} excludedProperties={[\"__typename\",\"month\"]}/>\r\n        </div>\r\n    )\r\n}","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Reporting\\ReportingDashboard.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Reporting\\ProductReport.js",["223"],"import {useQuery} from \"@apollo/client\"\nimport { useState } from \"react\"\nimport { GET_ENTERPRISE_BY_ID,PRODUCT_ANALYSIS } from \"../../utils/queries\"\nimport ProductDetails from \"./ProductDetails\"\nimport './productReport.css'\n\nexport default function ProductReport ({enterpriseId}){\n\n    const{loading: enterpriseLoading,data:enterpriseData} = useQuery(GET_ENTERPRISE_BY_ID,{\n        variables:{id:enterpriseId}\n    })\n    const [productId,setProductId] = useState(false)\n\n    let products;\n    if (!enterpriseLoading){\n        products = enterpriseData.getEnterpriseById.orderGuide;\n    }\n\n    if(enterpriseLoading){\n        return(<h1>Loading...</h1>)\n    }\n\n    const handleProductClick = (e)=>{\n        const productId = e.target.value\n        setProductId(productId)\n    }\n\n    return(\n\n        <div className=\"analysis-main\">\n\n        <div className=\"card analysis-header\">\n\n        <div>\n        <div className=\"table-top product-report\">\n            <h1>Product Report</h1>\n        </div>\n            </div>\n            </div>\n        <div className=\"card product-report-container\">\n\n            <h3>Products</h3>\n            <select defaultValue=\"Choose a Product\" placeholder=\"Choose a product\"  onChange={handleProductClick}>\n            <option selected value=\"\">Select a Product</option>\n            {products.map((product,index)=>{\n                return(<option data-product-id={product._id} value={product._id} >{product.name}</option>)\n            })}\n            </select>\n        </div>\n            {productId?<ProductDetails enterpriseId={enterpriseId} productId={productId}/>:null}\n        </div>\n\n    )\n\n\n}","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Products\\ProductGuide.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Products\\ProductDashboard.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Products\\AddProduct.js",["224","225"],"import './AddProduct.css'\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { ADD_PRODUCT } from '../../utils/mutations'\nimport ProductList from './ProductList';\n\nimport Auth from '../../utils/auth';\n\nexport default function AddProduct (props) {\n    \n    const enterprise = Auth.getProfile().data.enterprise\n    const [ formData, setFormData ] = useState({\n        sku: '',\n        name: '',\n        description: '',\n        msrp: 0,\n        category: '',\n        notes: '',\n    })\n    \n\n    const [addProduct, { error, data }] = useMutation(ADD_PRODUCT)\n\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        setFormData({ ...formData, [name]: value });\n    }\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n\n        const inputData = { ...formData}\n\n        inputData.msrp = parseInt(inputData.msrp)\n\n\n        try {\n            const variables = { ...inputData, enterprise }\n            const { data } = await addProduct({\n                variables\n            })\n        } catch (err) {\n            console.error(err);\n        }\n        setFormData({\n            sku: '',\n            name: '',\n            description: '',\n            msrp: 0,\n            category: '',\n            notes: '',\n        })\n    }\n    return (<>\n    \n\n        {/* <div className=\"table-top apl-top\">\n            <h1>Product Guide</h1>\n        </div> */}\n    <div className='add-product-body'>\n    <div className='form-container'>\n            <form  onSubmit={handleFormSubmit}>\n                <div className='add-product-header'>\n                    <h1>Add Product</h1>\n                </div>\n                <div className='add-product-form'>\n                <label htmlFor='sku'>SKU:<input name='sku' value={formData.sku} type='text' onChange={handleInputChange}/></label>\n                <label htmlFor='name'>Product Name:<input name='name' value={formData.name} type='text' onChange={handleInputChange}/></label>\n                <label htmlFor='description'>Description:<input name='description' value={formData.description} type='text' onChange={handleInputChange}/></label>\n                <label htmlFor='msrp'>MSRP:<input name='msrp' value={formData.msrp} type='number' onChange={handleInputChange}/></label>\n                <label htmlFor='category'>Category:<input name='category' value={formData.category} type='text' onChange={handleInputChange}/></label>\n                <label htmlFor='notes'>Notes:<input name='notes' value={formData.notes} type='text' onChange={handleInputChange}/></label>\n                </div>\n                <input id='add-product-submit' type='submit' value='Submit' />\n                {error && (\n          <div className=\"col-12 my-3 bg-danger text-white p-3\">\n            Something went wrong...\n          </div>\n        )}\n            </form>\n        </div>\n        <div className='add-product-list'>\n        \n        <ProductList\n          products={props.products}\n          productsRefetch={props.productsRefetch}\n        />\n        </div>\n    </div>\n    </>  \n    )\n}","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Orders\\OrderPurchase.js",["226","227","228","229"],"import { useQuery, useMutation } from \"@apollo/client\"\nimport { useState, useEffect } from 'react'\nimport { GET_CURRENT_STOCKS, GET_INCOMING_ITEMS } from \"../../utils/queries\";\nimport { BUY_ITEMS } from '../../utils/mutations'\nimport { groupItems, generatePurchaseTableData } from \"../../utils/remodeledData\";\nimport orderDate from \"../../utils/orderDate\";\nimport './Order.css'\n\nimport OrderModal from \"./OrderModal\";\nimport { stringifyProperties } from \"../../utils/filter\";\n\nexport default function OrderPurchase (props) {\n    //modal junk\n    const [openModal, setOpenModal] = useState(false)\n    const [date, setDate] = useState( orderDate())\n    const [orderNumber,setOrderNumber] =useState(props.enterprise.getEnterpriseById.orderNumber)\n\n    const [supplier,setSupplier] = useState(\"Not specified\")\n\n    const [buyItems, { error }] = useMutation(BUY_ITEMS)\n\n    const { loading: currentStocksLoading, data: currentStocksData, refetch: currentRefetch } = useQuery(GET_CURRENT_STOCKS, {\n        variables: { enterpriseId: props.enterpriseId}\n    })\n    const { loading: incomingItemsLoading, data: incomingItemsData, refetch: incomingRefetch } = useQuery(GET_INCOMING_ITEMS, {\n        variables: { enterpriseId: props.enterpriseId}\n    })\n\n    let currentStocksGroups\n    let incomingItemsGroups\n    let tableData = []\n    const [searchTerm,setSearchTerm] = useState(\"\")\n    \n    if(!currentStocksLoading && !incomingItemsLoading){\n        incomingRefetch()\n        currentRefetch()\n        currentStocksGroups = groupItems(currentStocksData.getCurrentStocks)\n        incomingItemsGroups = groupItems(incomingItemsData.getOrderedItems)\n        tableData = generatePurchaseTableData(props.orderGuide, currentStocksGroups, incomingItemsGroups)\n    }\n\n    const handleSupplierChange = (e) => {\n        setSupplier(e.target.value)\n    }\n    const handleInputChange = (e) => {\n        const index = e.target.dataset.index\n        let val;\n        if(e.target.name===\"newOrderQty\"){\n            val = parseInt(e.target.value)\n        }else{\n            val = parseFloat(e.target.value)\n        }\n        tableData[index][e.target.name] = val\n    }\n\n    const handleDateChange = (e)=>{\n        setDate(e.target.value)\n    }\n\n    const [updatedTable, setUpdatedTable] = useState([])\n    const handleSubmit = async () => {\n\n        \n        const filterTableData = tableData.filter(data => data.newOrderQty > 0)\n\n        try {\n            await filterTableData.forEach(async (product) => {\n                console.log(\"this is the input\",product.newOrderCostPerUnit)\n                const variables = {\n                    quantity: product.newOrderQty,\n                    productId: product._id,\n                    orderNumber,\n                    cost: product.newOrderCostPerUnit,\n                    purchaseDate: date,\n                    supplier,\n                    enterpriseId: props.enterpriseId\n                }\n                console.log(variables)\n                await buyItems({\n                    variables\n                })\n\n            })\n            setOpenModal(true);\n            setOrderNumber(orderNumber+1)\n\n        } catch (err) {\n            console.error(err);\n        }\n\n    }\n\n    const searchedRows = tableData.filter(p=>{\n        return stringifyProperties(p).toLowerCase().includes(searchTerm.toLowerCase())\n    })\n\n    return (\n        <div>\n            {openModal && <OrderModal orderNumber={orderNumber} closeModal={setOpenModal}/>}\n            <div className=\"table-top purchase-order-header\">\n                <h1>Purchase Order</h1>\n                <input type='text' onChange={handleSupplierChange} placeholder=\"Please enter supplier's name\"/>\n                <input onChange={handleDateChange} type=\"date\"/>\n            </div>\n            <div className=\"search-bar\">\n                <input onChange={(e)=>setSearchTerm(e.target.value)}/>\n            </div>\n            <table className='order-table'>\n                <thead>\n                    <tr className=\"order-header\">\n                        <th>SKU</th>\n                        <th>Name</th>\n                        <th>Description</th>\n                        <th>MSRP</th>\n                        <th>Category</th>\n                        <th>Notes</th>\n                        <th>Current</th>\n                        <th>Incoming</th>\n                        <th>Cost</th>\n                        <th>Order Qty</th>\n                    </tr>\n                </thead>\n                    <tbody>\n                    {tableData.map((product, index) => {\n                        console.log(product)\n                        return (\n                        <tr className={searchedRows.includes(product)?\"\":\"hide\"} data-pid={product._id} key={index}>\n                            <td className=\"td-1\" data-pid={product._id}>{product.sku}</td>\n                            <td className=\"td-3\" data-pid={product._id}>{product.name}</td>\n                            <td className=\"td-4\" data-pid={product._id}>{product.description}</td>\n                            <td className=\"td-1\" data-pid={product._id}>${product.msrp}</td>\n                            <td className=\"td-2\" data-pid={product._id}>{product.category}</td>\n                            <td className=\"td-4\" data-pid={product._id}>{product.notes}</td>\n                            <td className=\"td-1\" data-pid={product._id}>{product.current}</td>\n                            <td className=\"td-1\" data-pid={product._id}>{product.incoming}</td>\n                            <td className=\"td-1\" data-pid={product._id}>\n                                <input className=\"td-1\" data-index={index} name=\"newOrderCostPerUnit\" type=\"number\" step=\".01\" min=\"0\" onChange={handleInputChange} />\n                            </td>\n                            <td className=\"td-1\" ><input className=\"td-1\" data-index={index} name=\"newOrderQty\" type=\"number\" min=\"0\" onChange={handleInputChange} /></td>\n                        </tr>\n                        )\n                    })}\n                    </tbody>\n                </table>\n                <div>\n                <button className=\"order-submit\" type=\"submit\" onClick={handleSubmit}>Submit Order</button>\n                </div>\n        </div>\n    )\n}","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Orders\\OrderFulfillment.js",["230","231"],"// Imports custom css file and requires all dependant files\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { GET_OPEN_SALES } from \"../../utils/queries\";\nimport { groupSales } from \"../../utils/remodeledData\";\nimport orderDate from \"../../utils/orderDate\";\nimport { FULFILL_ITEMS } from \"../../utils/mutations\";\nimport { useState } from \"react\";\nimport { stringifyProperties } from \"../../utils/filter\";\n\nexport default function OrderFulfillment({ enterpriseId }) {\n\n    const [fulfillSale, { error }] = useMutation(FULFILL_ITEMS)\n    const [date, setDate] = useState( orderDate())\n    const [searchTerm,setSearchTerm] = useState(\"\")\n    const { loading: openSaleItemsLoading, data: openSaleItemsData, refetch } = useQuery(GET_OPEN_SALES, {\n        variables: { enterpriseId: enterpriseId }\n    })\n    if (openSaleItemsData) {\n        refetch()\n    }\n\n    const handleDateChange = (e)=>{\n        console.log(e)\n        setDate(e.target.value)\n    }\n\n    const openSalesGroup = openSaleItemsLoading ? [] : groupSales(openSaleItemsData.getOpenSales)\n    const handleFulfill = (e) => {\n        const index = e.target.dataset.index;\n        const variables = {\n            enterpriseId: enterpriseId,\n            saleNumber: parseInt(e.target.dataset.orderNumber),\n            fulfillmentDate: date,\n        }\n        fulfillSale({ variables })\n        refetch()\n\n    }\n\n    if(openSaleItemsLoading){\n        return(\n            <div>Loading...</div>\n        )\n    }\n\n    const searchedRows = openSalesGroup.filter(p=>{\n        return stringifyProperties(p).toLowerCase().includes(searchTerm.toLowerCase())\n    })\n\n\n\n    return (\n        <div className=\"big-center-flex\">\n            <h1>Fulfill Sale</h1>\n            <input onChange={handleDateChange} type=\"date\"/>\n            <div className=\"search-bar\">\n                <input onChange={(e)=>setSearchTerm(e.target.value)}/>\n            </div>\n            {openSaleItemsLoading\n                ? <h2>Loading</h2>\n                : <table className=\"product-list-table\"><thead>\n                    <tr>\n                        <th>Sale #</th>\n                        <th>Sale Date</th>\n                        <th>Buyer</th>\n                        <th>Items</th>\n                        <th>Fulfill!</th>\n                    </tr>\n                </thead>\n                    <tbody>\n                        {openSalesGroup.map((order, index) => {\n                            return (<tr  className={searchedRows.includes(order)?\"\":\"hide\"}  key={index} data-order={order.number}>\n                                <td>{order.number}</td>\n                                <td>{orderDate(order.date)}</td>\n                                <td>{order.buyer}</td>\n                                <td>{order.itemList}</td>\n                                <td><button data-order-number={order.number} data-index={index} onClick={handleFulfill}>Receive!</button></td>\n                            </tr>\n                            )\n                        })}\n\n                    </tbody>\n                </table>\n\n\n\n\n\n\n\n\n\n\n\n\n            }\n\n        </div>\n    )\n}","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Orders\\OrderDashboard.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Orders\\OrderSell.js",["232"],"import { useQuery, useMutation } from \"@apollo/client\"\nimport { useState } from 'react'\nimport { GET_CURRENT_STOCKS } from \"../../utils/queries\";\nimport { SELL_ITEMS } from '../../utils/mutations'\nimport { generateSalesTableData, groupItems } from \"../../utils/remodeledData\";\nimport orderDate from \"../../utils/orderDate\";\nimport './Order.css'\nimport { stringifyProperties } from \"../../utils/filter\";\n\nimport OrderModal from \"./OrderModal\";\n\nexport default function OrderSell (props) {\n    //modal junk\n    const [openModal, setOpenModal] = useState(false)\n    const [date, setDate] = useState( orderDate())\n    const [saleNumber,setSaleNumber] = useState(props.enterprise.getEnterpriseById.saleNumber)\n    // const [buyer, setBuyer] = useState('dummy')\n    console.log(props)\n\n    const [buyer,setBuyer] = useState(\"Not specified\")\n    const [sellItems, { error }] = useMutation(SELL_ITEMS)\n\n    const { loading: currentStocksLoading, data: currentStocksData, refetch } = useQuery(GET_CURRENT_STOCKS, {\n        variables: { enterpriseId: props.enterpriseId}\n    })\n\n    let currentStocksGroups\n    let tableData = []\n    const [searchTerm,setSearchTerm] = useState(\"\")\n    \n    if(!currentStocksLoading ){\n        refetch()\n        currentStocksGroups = groupItems(currentStocksData.getCurrentStocks)\n        tableData = generateSalesTableData(props.orderGuide, currentStocksGroups)\n    }\n\n\n    const handleSupplierChange = (e) => {\n        setBuyer(e.target.value)\n    }\n    const handleInputChange = (e) => {\n        const index = e.target.dataset.index\n        let val;\n        if(e.target.name===\"newOrderQty\"){\n            val = parseInt(e.target.value)\n        }else{\n            val = parseFloat(e.target.value)\n        }\n        tableData[index][e.target.name] = val\n    }\n\n    const handleDateChange = (e)=>{\n        console.log(e)\n        setDate(e.target.value)\n    }\n\n    const handleSubmit = async () => {\n        const filterTableData = tableData.filter(data => data.newSaleQty > 0)\n        try {\n            await filterTableData.forEach(async (product) => {\n                const variables = {\n                    quantity: product.newSaleQty,\n                    productId: product._id,\n                    saleId:saleNumber,\n                    salesPrice: product.newSalePricePerUnit,\n                    saleDate: date,\n                    buyer,\n                    enterpriseId: props.enterpriseId\n                }\n                console.log(variables)\n                await sellItems({\n                    variables\n                })\n\n            })\n            setOpenModal(true)\n            setSaleNumber(saleNumber+1)\n        } catch (err) {\n            console.error(err);\n        }}\n\n        const searchedRows = tableData.filter(p=>{\n            return stringifyProperties(p).toLowerCase().includes(searchTerm.toLowerCase())\n        })\n\n    return (\n        <div>\n            {openModal && <OrderModal orderNumber={saleNumber-1} closeModal={setOpenModal}/>}\n            <div className=\"table-top\">\n                <h1>Sell Order</h1>\n                <input type='text' onChange={handleSupplierChange} placeholder=\"Enter Buyer\"/>\n                <input onChange={handleDateChange} type=\"date\"/>\n            </div>\n            <div className=\"search-bar\">\n                <input onChange={(e)=>setSearchTerm(e.target.value)}/>\n            </div>\n            <table className='order-table'>\n                <thead>\n                    <tr className=\"order-header\">\n                        <th>SKU</th>\n                        <th>Name</th>\n                        <th>Description</th>\n                        <th>MSRP</th>\n                        <th>Category</th>\n                        <th>Notes</th>\n                        <th>Current</th>\n                        <th>Price</th>\n                        <th>Qty</th>\n                    </tr>\n                </thead>\n                    <tbody>\n                    {tableData.map((product, index) => {\n                        return (\n                        <tr className={searchedRows.includes(product)?\"\":\"hide\"}  data-pid={product._id} key={index}>\n                            <td className=\"td-1\" data-pid={product._id}>{product.sku}</td>\n                            <td className=\"td-3\" data-pid={product._id}>{product.name}</td>\n                            <td className=\"td-4\" data-pid={product._id}>{product.description}</td>\n                            <td className=\"td-1\" data-pid={product._id}>${product.msrp}</td>\n                            <td className=\"td-2\" data-pid={product._id}>{product.category}</td>\n                            <td className=\"td-4\" data-pid={product._id}>{product.notes}</td>\n                            <td className=\"td-1\" data-pid={product._id}>{product.current}</td>\n                            <td className=\"td-1\" data-pid={product._id}><input className=\"td-1\" step={0.01} data-index={index} name=\"newSalePricePerUnit\" type=\"number\" min=\"0\" onChange={handleInputChange}></input></td>\n                            <td className=\"td-1\" ><input className=\"td-1\" data-index={index} name=\"newSaleQty\" type=\"number\" min=\"0\" max={product.current} onChange={handleInputChange}/></td>\n                        </tr>\n                        )\n                    })}\n                    </tbody>\n                </table>\n                <div>\n                <button className=\"order-submit\" type=\"submit\" onClick={handleSubmit}>Submit Order</button>\n                </div>\n        </div>\n    )\n}","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Orders\\OrderReceived.js",["233","234","235","236","237"],"import { useQuery,useMutation, from } from \"@apollo/client\"\nimport {GET_INCOMING_ITEMS,GET_OPEN_SALES} from \"../../utils/queries\"; \nimport { groupOrders } from \"../../utils/remodeledData\";\nimport orderDate from \"../../utils/orderDate\";\nimport { RECEIVE_ITEMS } from \"../../utils/mutations\";\nimport \"./orderReceived.css\"\nimport { useState } from \"react\";\nimport { OrderDetails } from \"../Reporting/OrderDetails\";\nimport { t } from \"../../utils/translation/translator\";\nimport { stringifyProperties } from \"../../utils/filter\";\n\nexport default function OrderReceived ({enterpriseId}) {\n    \n    const [receiveOrder,{error}] = useMutation(RECEIVE_ITEMS)\n    const [date,setDate] = useState(null)\n    const { loading: incomingItemsLoading, data: incomingItemsData, refetch } = useQuery(GET_INCOMING_ITEMS, {\n        variables: { enterpriseId:enterpriseId}\n    })\n    const [searchTerm,setSearchTerm] = useState(\"\")\n    const [orderNumberSelected,setOrderNumberSelected] = useState(false)\n\n    if (incomingItemsData) {\n        refetch()\n    }\n\n    const incomingOrders = incomingItemsLoading?null:groupOrders(incomingItemsData.getOrderedItems)\n    \n    const handleFulfill = (e)=>{\n        console.log(\"this is the date input\",date)\n        refetch()\n        const index = e.target.dataset.index;\n        const binLocation = e.target.parentNode.parentNode.lastElementChild.childNodes[0].value\n        const variables = {\n            enterpriseId:enterpriseId,\n            orderNumber:parseInt(e.target.dataset.orderNumber),\n            receivedDate:date,\n            binLocation\n        }\n        receiveOrder({variables})\n        refetch()\n    }\n\n    const handleSelect = (e)=>{\n        const {order} = e.target.dataset\n        console.log(\"selected\",order)\n        setOrderNumberSelected(order)\n    }\n\n    const handleDateChange = (e)=>{\n        setDate(e.target.value)\n    }\n\n    if(incomingItemsLoading){\n        return(\n            <div>Loading...</div>\n        )\n    }\n\n    const searchedRows = incomingOrders.filter(p=>{\n        return stringifyProperties(p).toLowerCase().includes(searchTerm.toLowerCase())\n    })\n\n    return (\n        <div className=\"big-center-flex\">\n            <h1>Receive Order</h1>\n            <input type=\"date\" onChange={handleDateChange}></input>\n            <div className=\"search-bar\">\n                <input onChange={(e)=>setSearchTerm(e.target.value)}/>\n            </div>\n            {incomingItemsLoading\n        ? <h2>Loading</h2>\n        :  <table  className=\"product-list-table\" id=\"order-received-table\"><thead>\n             <tr>\n                        <th>Order #</th>\n                        <th>Order Date</th>\n                        <th>Seller</th>\n                        <th>Items</th>\n                        <th>Receive!</th>\n                        <th>Bin #</th>\n                    </tr>\n        </thead>\n                <tbody>\n                    {incomingOrders.map((order,index)=>{\n                        return(<tr  className={searchedRows.includes(order)?\"\":\"hide\"} key={index} onClick={handleSelect} data-order={order.number}>\n                            <td data-order={order.number}>{order.number}</td>\n                            <td>{orderDate(order.date)}</td>\n                            <td>{order.supplier}</td>\n                            <td>{order.itemList}</td>\n                            <td><button data-order-number={order.number} data-index={index} onClick={handleFulfill}>Receive!</button></td>\n                            <td><input type=\"text\"></input></td>\n                        </tr>\n)\n                    })}\n\n                </tbody>\n            </table>\n      }\n      {\n        orderNumberSelected?(<OrderDetails orderNumber={orderNumberSelected} enterpriseId={enterpriseId}/>):null\n      }\n                \n        </div>\n    )\n}","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Orders\\OrderHistory.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Orders\\OrderGuide.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Products\\ProductList.js",["238","239"],"import './ProductList.css'\nimport React from 'react'\nimport { useMutation } from '@apollo/client';\nimport { ADD_TO_ORDERGUIDE } from '../../utils/mutations'\n\nexport default function ProductList (props) {\n    if(props.products) {\n        props.productsRefetch()\n    }\n    const [addProduct, { error }] = useMutation(ADD_TO_ORDERGUIDE)\n    const checkIfInList = (product,list)=>{\n        const match = list.filter(li=>{\n            return li._id===product._id\n        })\n        if (match.length!==0){\n            return true\n        }\n        else{\n            return false\n        }\n    }\n    const handleAdd = async (product) => {\n        let newList = [...props.orderGuide, product]\n        \n        props.setGuideState(newList)\n        try {\n            await addProduct({\n                variables: { enterpriseId: props.enterpriseId, productId: product._id }\n            })\n        } catch (err) {\n            console.error(err);\n        }  \n\n    }\n\n    return (\n        <div>\n            <table className='order-table'>\n                <thead>\n                    <tr className='order-header'>\n                        <th>SKU</th>\n                        <th>Name</th>\n                        <th>Description</th>\n                        <th>MSRP</th>\n                        <th>Category</th>\n                        <th>Notes</th>\n                        {props.buttons?<th>Add</th> : null}\n\n                    </tr>\n                </thead>\n                    <tbody>\n                        {props.products.map((product, index) => {\n                        const check = checkIfInList(product, (props?.orderGuide||[]))\n                        if(!check) {\n                         return (\n                        <tr data-pid={product._id} key={index} >\n                            <td data-pid={product._id}>{product.sku}</td>\n                            <td data-pid={product._id}>{product.name}</td>\n                            <td data-pid={product._id}>{product.description}</td>\n                            <td data-pid={product._id}>${product.msrp}</td>\n                            <td data-pid={product._id}>{product.category}</td>\n                            <td data-pid={product._id}>{product.notes}</td>\n                            {props.buttons?<td><button onClick={() => handleAdd(product)}>✔️</button></td> : null}\n\n                        </tr>\n                        )   \n                        }})}\n                    \n                    </tbody>\n                </table>\n        </div>\n    )\n}","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Reporting\\ProductDetails.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\utils\\filter.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\utils\\orderDate.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\utils\\remodeledData.js",["240"],"\nexport const groupItems = (data)=>{\n    const array = [];\n    data.forEach(item=>{\n        const matches = array.filter(el=>el.id==item.product._id)\n        if(matches.length===0){\n            array.push({id:item.product._id,quantity:1,name:item.product.name,sku:item.product.sku,msrp:item.product.msrp,totalMSRP:item.product.msrp,totalCost:item.cost,averageCost:item.cost,totalSalesPrice:item.salesPrice||\"not sold\",averageSalesPrice:item.salesPrice||\"not sold\",bins:[item.binLocation]})\n        }\n        else{\n            matches[0].quantity++\n            matches[0].totalMSRP+=matches[0].msrp\n            matches[0].totalCost+=item.cost;\n            matches[0].totalSalesPrice===\"not sold\"||(matches[0].totalSalesPrice+=item.salesPrice);\n            matches[0].averageCost=matches[0].totalCost/matches[0].quantity\n            matches[0].averageSalesPrice=matches[0].totalSalesPrice/matches[0].quantity||\"not sold\";\n            matches[0].bins.push(item.binLocation)\n            matches[0].bins = [...new Set(matches[0].bins)]\n        }\n    })\n    return array\n}\n\nconst testCurrentItems = [\n    {\n        \"__typename\": \"Item\",\n        \"_id\": \"6296a255dbeac327b8a9a7f9\",\n        \"product\": {\n            \"__typename\": \"Product\",\n            \"_id\": \"6296a255dbeac327b8a9a7ee\",\n            \"sku\": \"ABC123\",\n            \"name\": \"New Hampshire End Table\",\n            \"description\": \"Solid Oak with glass inset. Victorian Style\",\n            \"msrp\": 150,\n            \"category\": \"tables\",\n            \"notes\": \"No assembly required\"\n        },\n        \"orderNumber\": 1,\n        \"cost\": 60,\n        \"purchaseDate\": \"1653973200000\",\n        \"supplier\": \"Dev Manu Inc.\",\n        \"receivedDate\": \"1656824400000\",\n        \"binLocation\": \"J33\"\n    },\n    {\n        \"__typename\": \"Item\",\n        \"_id\": \"6296a255dbeac327b8a9a807\",\n        \"product\": {\n            \"__typename\": \"Product\",\n            \"_id\": \"6296a255dbeac327b8a9a7ef\",\n            \"sku\": \"CFI395\",\n            \"name\": \"Prairie Dining\",\n            \"description\": \"Mahogany, Prairie Style\",\n            \"msrp\": 900,\n            \"category\": \"tables\",\n            \"notes\": \"Two Leafs included\"\n        },\n        \"orderNumber\": 1,\n        \"cost\": 400,\n        \"purchaseDate\": \"1653973200000\",\n        \"supplier\": \"AFG LTD.\",\n        \"receivedDate\": \"1656824400000\",\n        \"binLocation\": \"J33\"\n    },\n    {\n        \"__typename\": \"Item\",\n        \"_id\": \"6296a255dbeac327b8a9a809\",\n        \"product\": {\n            \"__typename\": \"Product\",\n            \"_id\": \"6296a255dbeac327b8a9a7ef\",\n            \"sku\": \"CFI395\",\n            \"name\": \"Prairie Dining\",\n            \"description\": \"Mahogany, Prairie Style\",\n            \"msrp\": 900,\n            \"category\": \"tables\",\n            \"notes\": \"Two Leafs included\"\n        },\n        \"orderNumber\": 1,\n        \"cost\": 400,\n        \"purchaseDate\": \"1653973200000\",\n        \"supplier\": \"AFG LTD.\",\n        \"receivedDate\": \"1656824400000\",\n        \"binLocation\": \"J33\"\n    }\n]\n\nconst testIncomingItems = [\n      {\n        \"_id\": \"6296a255dbeac327b8a9a817\",\n        \"product\": {\n          \"_id\": \"6296a255dbeac327b8a9a7f0\",\n          \"sku\": \"IEN830\",\n          \"name\": \"Elkwood Davenport\",\n          \"description\": \"Plush sofa with metal rivets, seats three\",\n          \"msrp\": 1500,\n          \"category\": \"sofas\",\n          \"notes\": \"No assembly required\"\n        },\n        \"orderNumber\": 2,\n        \"saleNumber\": null,\n        \"cost\": 900,\n        \"purchaseDate\": \"1655269200000\",\n        \"supplier\": \"Dev Manu Inc.\",\n        \"receivedDate\": null,\n        \"binLocation\": null,\n        \"buyer\": null,\n        \"salesPrice\": null,\n        \"saleDate\": null,\n        \"fulfillmentDate\": null\n      },\n      {\n        \"_id\": \"6296a255dbeac327b8a9a819\",\n        \"product\": {\n          \"_id\": \"6296a255dbeac327b8a9a7f0\",\n          \"sku\": \"IEN830\",\n          \"name\": \"Elkwood Davenport\",\n          \"description\": \"Plush sofa with metal rivets, seats three\",\n          \"msrp\": 1500,\n          \"category\": \"sofas\",\n          \"notes\": \"No assembly required\"\n        },\n        \"orderNumber\": 2,\n        \"saleNumber\": null,\n        \"cost\": 900,\n        \"purchaseDate\": \"1655269200000\",\n        \"supplier\": \"Dev Manu Inc.\",\n        \"receivedDate\": null,\n        \"binLocation\": null,\n        \"buyer\": null,\n        \"salesPrice\": null,\n        \"saleDate\": null,\n        \"fulfillmentDate\": null\n      },\n      {\n        \"_id\": \"6296a255dbeac327b8a9a822\",\n        \"product\": {\n          \"_id\": \"6296a255dbeac327b8a9a7f1\",\n          \"sku\": \"FEE980\",\n          \"name\": \"Visage Lamp\",\n          \"description\": \"Art Deco floor lamp\",\n          \"msrp\": 150,\n          \"category\": \"lamps\",\n          \"notes\": \"Some assembly required, fragile\"\n        },\n        \"orderNumber\": 3,\n        \"saleNumber\": null,\n        \"cost\": 65,\n        \"purchaseDate\": \"1656997200000\",\n        \"supplier\": \"Emory\",\n        \"receivedDate\": null,\n        \"binLocation\": null,\n        \"buyer\": null,\n        \"salesPrice\": null,\n        \"saleDate\": null,\n        \"fulfillmentDate\": null\n      },\n      {\n        \"_id\": \"6296a255dbeac327b8a9a824\",\n        \"product\": {\n          \"_id\": \"6296a255dbeac327b8a9a7f1\",\n          \"sku\": \"FEE980\",\n          \"name\": \"Visage Lamp\",\n          \"description\": \"Art Deco floor lamp\",\n          \"msrp\": 150,\n          \"category\": \"lamps\",\n          \"notes\": \"Some assembly required, fragile\"\n        },\n        \"orderNumber\": 3,\n        \"saleNumber\": null,\n        \"cost\": 65,\n        \"purchaseDate\": \"1656997200000\",\n        \"supplier\": \"Emory\",\n        \"receivedDate\": null,\n        \"binLocation\": null,\n        \"buyer\": null,\n        \"salesPrice\": null,\n        \"saleDate\": null,\n        \"fulfillmentDate\": null\n      }\n    ]\n\nexport const currentGroup = groupItems(testCurrentItems)\n\nexport const incomingGroup = groupItems(testIncomingItems)\n\nexport const testOrderGuide = [\n    {\n      \"_id\": \"6296a255dbeac327b8a9a7ee\",\n      \"sku\": \"ABC123\",\n      \"name\": \"New Hampshire End Table\",\n      \"description\": \"Solid Oak with glass inset. Victorian Style\",\n      \"msrp\": 150,\n      \"category\": \"tables\",\n      \"notes\": \"No assembly required\"\n    },\n    {\n      \"_id\": \"6296a255dbeac327b8a9a7ef\",\n      \"sku\": \"CFI395\",\n      \"name\": \"Prairie Dining\",\n      \"description\": \"Mahogany, Prairie Style\",\n      \"msrp\": 900,\n      \"category\": \"tables\",\n      \"notes\": \"Two Leafs included\"\n    },\n    {\n      \"_id\": \"6296a255dbeac327b8a9a7f0\",\n      \"sku\": \"IEN830\",\n      \"name\": \"Elkwood Davenport\",\n      \"description\": \"Plush sofa with metal rivets, seats three\",\n      \"msrp\": 1500,\n      \"category\": \"sofas\",\n      \"notes\": \"No assembly required\"\n    },\n    {\n      \"_id\": \"6296a255dbeac327b8a9a7f1\",\n      \"sku\": \"FEE980\",\n      \"name\": \"Visage Lamp\",\n      \"description\": \"Art Deco floor lamp\",\n      \"msrp\": 150,\n      \"category\": \"lamps\",\n      \"notes\": \"Some assembly required, fragile\"\n    },\n    {\n      \"_id\": \"6296b791a5cee5bfce4b6770\",\n      \"sku\": \"334KKA\",\n      \"name\": \"Gandy Shelf\",\n      \"description\": \"Six Foot high balsa shelf\",\n      \"msrp\": 25,\n      \"category\": \"shelves\",\n      \"notes\": \"cheaply made, very fragile\"\n    },\n    {\n      \"_id\": \"6296b7e8a5cee5bfce4b6775\",\n      \"sku\": \"ERI333\",\n      \"name\": \"Royale Bed\",\n      \"description\": \"California King Bed with Frame\",\n      \"msrp\": 4000,\n      \"category\": \"beds\",\n      \"notes\": \"\"\n    }\n  ]\n\n\nexport const generatePurchaseTableData = (guide,current,incoming)=>{\n    const array = []\n    guide.forEach(product=>{\n        let obj;\n        const currentMatch = current.filter(el=>el.id===product._id) \n        const incomingMatch = incoming.filter(el=>el.id===product._id) \n        obj= {...product,current:(currentMatch[0]?.quantity||0),incoming:(incomingMatch[0]?.quantity||0),newOrderQty:0,newOrderCostPerUnit:0}\n        array.push(obj)\n    })\n    return array\n}\nexport const generateSalesTableData = (guide,current)=>{\n  const array = []\n  guide.forEach(product=>{\n      let obj;\n      const currentMatch = current.filter(el=>el.id===product._id) \n      obj= {...product,current:(currentMatch[0]?.quantity||0),newSaleQty:0,newSalePricePerUnit:0}\n      array.push(obj)\n  })\n  return array\n}\n\nexport const checkIfInList = (product,list)=>{\n    const match = list.filter(li=>{\n        return li._id===product._id\n    })\n    if (match.length!==0){\n        return true\n    }\n    else{\n        return false\n    }\n}\n\nexport const groupOrders = (items)=>{\n    const orders = {};\n    items.forEach(item=>{\n        if(orders?.[item.orderNumber]){\n            orders[item.orderNumber].push(item)\n        }else{\n            orders[item.orderNumber]=[item]\n        }\n    }\n    )\n\n    return formatOrders(orders)\n}\n\n\nexport const groupSales = (items)=>{\n    const sales = {};\n    items.forEach(item=>{\n        if(sales?.[item.saleNumber]){\n            sales[item.saleNumber].push(item)\n        }else{\n            sales[item.saleNumber]=[item]\n        }\n    }\n    )\n\n    return formatSales(sales)\n}\n\nexport const stringItems = (items)=>{\n    let string = \"\"\n    items.forEach(item=>{\n        string+=`${item.name}: ${item.quantity}, `\n    })\n    string = string.slice(0,-2)\n    return string\n}\n\nexport const formatOrders = (orders)=>{\n    const array = [];\n    for(let key in orders){\n        const obj={}\n        obj.number=key;\n        obj.date = orders[key][0].purchaseDate\n        obj.supplier = orders[key][0].supplier\n        obj.items = groupItems(orders[key])\n        obj.itemList = stringItems(obj.items)\n        array.push(obj)\n    }\n    return array\n}\n\nexport const formatSales = (sales)=>{\n    const array = [];\n    for(let key in sales){\n        const obj={}\n        obj.number=key;\n        obj.date = sales[key][0].saleDate\n        obj.buyer = sales[key][0].buyer\n        obj.items = groupItems(sales[key])\n        obj.itemList = stringItems(obj.items)\n        array.push(obj)\n    }\n    return array\n}","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Orders\\OrderModal.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Reporting\\OrderDetails.js",["241"],"import { useQuery } from \"@apollo/client\"\nimport { QUERY_ORDER_DETAILS } from \"../../utils/queries\"\nimport { Table } from \"../Table\"\n\nexport const OrderDetails = ({orderNumber,enterpriseId})=>{\n\n  const variables = {enterpriseId,orderNumber:parseInt(orderNumber)}\n\n    const {data,loading,error} = useQuery(QUERY_ORDER_DETAILS,{variables})\n    const input = data?.orderDetails\n    \n    if(loading){\n        return (\"Loading...\")\n    }\n    return (\n        <Table data={input}  excludedProperties={[\"__typename\",\"totalSales\",\"salePerUnit\",\"binLocation\"]}/>\n    )\n}","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Orders\\OrderList.js",["242"],"import './OrderList.css'\nimport React from 'react'\nimport { useMutation } from '@apollo/client'\nimport { REMOVE_FROM_ORDERGUIDE } from '../../utils/mutations'\n\nexport default function OrderList (props) {\n    if(props.orderGuide) {\n        props.enterpriseRefetch()\n    }\n    const [removeProduct, { error }] = useMutation(REMOVE_FROM_ORDERGUIDE)\n    const handleRemove = async (pid) => {\n        const newList = props.orderGuide.filter((product) => {\n            return product._id !== pid\n        })\n        props.setGuideState(newList)\n        try {\n            await removeProduct({\n                variables: { enterpriseId: props.enterpriseId, productId: pid }\n            })\n        } catch (err) {\n            console.error(err);\n        }\n    }\n    return (\n        <div>\n            <table className='order-list-table'>\n                <thead>\n                    <tr>\n                        <th>SKU</th>\n                        <th>Name</th>\n                        <th>Description</th>\n                        <th>MSRP</th>\n                        <th>Category</th>\n                        <th>Notes</th>\n                        {props.buttons?<th>Rem</th> : null}\n                    </tr>\n                </thead>\n                    <tbody>\n                    {props.orderGuide.map((product, index) => {\n                        return (\n                        <tr data-pid={product._id} key={index}>\n                            <td data-pid={product._id}>{product.sku}</td>\n                            <td data-pid={product._id}>{product.name}</td>\n                            <td data-pid={product._id}>{product.description}</td>\n                            <td data-pid={product._id}>${product.msrp}</td>\n                            <td data-pid={product._id}>{product.category}</td>\n                            <td data-pid={product._id}>{product.notes}</td>\n                            {props.buttons?<td><button onClick={() => handleRemove(product._id)} data-pid={product._id}>❌</button></td> : null}\n                        </tr>\n                        )\n                    })}\n                    </tbody>\n                </table>\n        </div>\n    )\n}","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\utils\\translation\\translator.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Table\\index.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\utils\\translation\\translationLibrary.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\inventory-plus\\client\\src\\components\\Users\\logout.js",[],{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","severity":1,"message":"248","line":18,"column":25,"nodeType":"249","messageId":"250","endLine":18,"endColumn":30},{"ruleId":"247","severity":1,"message":"251","line":18,"column":32,"nodeType":"249","messageId":"250","endLine":18,"endColumn":36},{"ruleId":"247","severity":1,"message":"251","line":33,"column":19,"nodeType":"249","messageId":"250","endLine":33,"endColumn":23},{"ruleId":"247","severity":1,"message":"248","line":11,"column":25,"nodeType":"249","messageId":"250","endLine":11,"endColumn":30},{"ruleId":"252","severity":1,"message":"253","line":12,"column":26,"nodeType":"254","messageId":"255","endLine":12,"endColumn":28},{"ruleId":"247","severity":1,"message":"248","line":9,"column":25,"nodeType":"249","messageId":"250","endLine":9,"endColumn":30},{"ruleId":"247","severity":1,"message":"256","line":10,"column":29,"nodeType":"249","messageId":"250","endLine":10,"endColumn":39},{"ruleId":"247","severity":1,"message":"257","line":10,"column":48,"nodeType":"249","messageId":"250","endLine":10,"endColumn":61},{"ruleId":"247","severity":1,"message":"258","line":10,"column":68,"nodeType":"249","messageId":"250","endLine":10,"endColumn":79},{"ruleId":"247","severity":1,"message":"259","line":2,"column":10,"nodeType":"249","messageId":"250","endLine":2,"endColumn":18},{"ruleId":"247","severity":1,"message":"260","line":3,"column":17,"nodeType":"249","messageId":"250","endLine":3,"endColumn":23},{"ruleId":"247","severity":1,"message":"261","line":4,"column":8,"nodeType":"249","messageId":"250","endLine":4,"endColumn":12},{"ruleId":"247","severity":1,"message":"248","line":11,"column":24,"nodeType":"249","messageId":"250","endLine":11,"endColumn":29},{"ruleId":"247","severity":1,"message":"251","line":16,"column":15,"nodeType":"249","messageId":"250","endLine":16,"endColumn":19},{"ruleId":"247","severity":1,"message":"259","line":5,"column":10,"nodeType":"249","messageId":"250","endLine":5,"endColumn":18},{"ruleId":"247","severity":1,"message":"262","line":6,"column":10,"nodeType":"249","messageId":"250","endLine":6,"endColumn":30},{"ruleId":"247","severity":1,"message":"261","line":7,"column":8,"nodeType":"249","messageId":"250","endLine":7,"endColumn":12},{"ruleId":"247","severity":1,"message":"263","line":8,"column":12,"nodeType":"249","messageId":"250","endLine":8,"endColumn":17},{"ruleId":"247","severity":1,"message":"264","line":8,"column":18,"nodeType":"249","messageId":"250","endLine":8,"endColumn":26},{"ruleId":"247","severity":1,"message":"248","line":9,"column":25,"nodeType":"249","messageId":"250","endLine":9,"endColumn":30},{"ruleId":"247","severity":1,"message":"265","line":3,"column":31,"nodeType":"249","messageId":"250","endLine":3,"endColumn":47},{"ruleId":"247","severity":1,"message":"251","line":22,"column":33,"nodeType":"249","messageId":"250","endLine":22,"endColumn":37},{"ruleId":"247","severity":1,"message":"251","line":39,"column":21,"nodeType":"249","messageId":"250","endLine":39,"endColumn":25},{"ruleId":"247","severity":1,"message":"266","line":2,"column":20,"nodeType":"249","messageId":"250","endLine":2,"endColumn":29},{"ruleId":"247","severity":1,"message":"248","line":20,"column":24,"nodeType":"249","messageId":"250","endLine":20,"endColumn":29},{"ruleId":"247","severity":1,"message":"267","line":60,"column":12,"nodeType":"249","messageId":"250","endLine":60,"endColumn":24},{"ruleId":"247","severity":1,"message":"268","line":60,"column":26,"nodeType":"249","messageId":"250","endLine":60,"endColumn":41},{"ruleId":"247","severity":1,"message":"248","line":12,"column":27,"nodeType":"249","messageId":"250","endLine":12,"endColumn":32},{"ruleId":"247","severity":1,"message":"269","line":29,"column":15,"nodeType":"249","messageId":"250","endLine":29,"endColumn":20},{"ruleId":"247","severity":1,"message":"248","line":21,"column":25,"nodeType":"249","messageId":"250","endLine":21,"endColumn":30},{"ruleId":"247","severity":1,"message":"270","line":1,"column":32,"nodeType":"249","messageId":"250","endLine":1,"endColumn":36},{"ruleId":"247","severity":1,"message":"271","line":2,"column":28,"nodeType":"249","messageId":"250","endLine":2,"endColumn":42},{"ruleId":"247","severity":1,"message":"272","line":9,"column":10,"nodeType":"249","messageId":"250","endLine":9,"endColumn":11},{"ruleId":"247","severity":1,"message":"248","line":14,"column":26,"nodeType":"249","messageId":"250","endLine":14,"endColumn":31},{"ruleId":"247","severity":1,"message":"269","line":31,"column":15,"nodeType":"249","messageId":"250","endLine":31,"endColumn":20},{"ruleId":"247","severity":1,"message":"248","line":10,"column":26,"nodeType":"249","messageId":"250","endLine":10,"endColumn":31},{"ruleId":"273","severity":1,"message":"274","line":52,"column":62,"nodeType":"275","messageId":"276","endLine":52,"endColumn":64},{"ruleId":"277","severity":1,"message":"278","line":5,"column":47,"nodeType":"279","messageId":"255","endLine":5,"endColumn":49},{"ruleId":"247","severity":1,"message":"248","line":9,"column":25,"nodeType":"249","messageId":"250","endLine":9,"endColumn":30},{"ruleId":"247","severity":1,"message":"248","line":10,"column":29,"nodeType":"249","messageId":"250","endLine":10,"endColumn":34},"no-native-reassign",["280"],"no-negated-in-lhs",["281"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'toggleData' is assigned a value but never used.","'toggleLoading' is assigned a value but never used.","'toggleError' is assigned a value but never used.","'useQuery' is defined but never used.","'useRef' is defined but never used.","'auth' is defined but never used.","'GET_ENTERPRISE_BY_ID' is defined but never used.","'sales' is assigned a value but never used.","'setSales' is assigned a value but never used.","'PRODUCT_ANALYSIS' is defined but never used.","'useEffect' is defined but never used.","'updatedTable' is assigned a value but never used.","'setUpdatedTable' is assigned a value but never used.","'index' is assigned a value but never used.","'from' is defined but never used.","'GET_OPEN_SALES' is defined but never used.","'t' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","no-global-assign","no-unsafe-negation"]
